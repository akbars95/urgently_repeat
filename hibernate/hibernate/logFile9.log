17:13:18,232  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
17:13:18,235  INFO Environment:213 - HHH000206: hibernate.properties not found
17:13:18,236  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
17:13:18,265  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
17:13:18,452  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
17:13:18,472 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@16e6127
17:13:18,473 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@16e6127
17:13:18,473 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@16e6127
17:13:18,474 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7e06
17:13:18,475 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1173e3d
17:13:18,476 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e99a3d
17:13:18,477 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@c3b8a3
17:13:18,477 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@c3b8a3
17:13:18,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@c3b8a3
17:13:18,478 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@d52852
17:13:18,478 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@d52852
17:13:18,478 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d52852
17:13:18,480 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1919c1f
17:13:18,480 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1919c1f
17:13:18,481 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1919c1f
17:13:18,482 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@c08a64
17:13:18,482 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@c08a64
17:13:18,482 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c08a64
17:13:18,484 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@b95c08
17:13:18,484 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@b95c08
17:13:18,484 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@b95c08
17:13:18,485 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c7a25d
17:13:18,485 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c7a25d
17:13:18,486 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c7a25d
17:13:18,487 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@142e40c
17:13:18,487 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@142e40c
17:13:18,487 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@142e40c
17:13:18,489 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@123fca5
17:13:18,489 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@123fca5
17:13:18,490 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@658a39
17:13:18,490 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@658a39
17:13:18,494 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6e1cbf
17:13:18,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6e1cbf
17:13:18,495 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce1cd
17:13:18,496 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a78257
17:13:18,497 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5eebbe
17:13:18,497 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5eebbe
17:13:18,499 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@623a98
17:13:18,499 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@623a98
17:13:18,501 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@d07fb2
17:13:18,501 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d07fb2
17:13:18,502 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1331b
17:13:18,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1331b
17:13:18,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1331b
17:13:18,505 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8a0198
17:13:18,506 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1f7fcd0
17:13:18,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f7fcd0
17:13:18,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f7fcd0
17:13:18,507 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1459b26
17:13:18,508 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1597115
17:13:18,508 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1597115
17:13:18,509 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1461829
17:13:18,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1461829
17:13:18,510 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a590d1
17:13:18,510 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a590d1
17:13:18,511 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@90b93b
17:13:18,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@90b93b
17:13:18,512 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@103b09a
17:13:18,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@103b09a
17:13:18,512 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e77cbd
17:13:18,513 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4c18ac
17:13:18,513 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4c18ac
17:13:18,514 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4c18ac
17:13:18,514 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1193540
17:13:18,515 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1193540
17:13:18,515 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1193540
17:13:18,515 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@13a03b0
17:13:18,516 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@169390
17:13:18,516 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@169390
17:13:18,516 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@169390
17:13:18,517 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1513d1e
17:13:18,517 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1513d1e
17:13:18,517 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1513d1e
17:13:18,518 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@11879ea
17:13:18,518 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@52a793
17:13:18,522 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@165c301
17:13:18,522 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@165c301
17:13:18,522 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@da37aa
17:13:18,525 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1ce3a26
17:13:18,525 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ce3a26
17:13:18,528 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@71a9f3
17:13:18,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71a9f3
17:13:18,530 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@148f4ec
17:13:18,530 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1d072fc
17:13:18,531 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1cf4353
17:13:18,534 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3822fc
17:13:18,535 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3822fc
17:13:18,535 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a2e547
17:13:18,535 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e99e46
17:13:18,535 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f2e206
17:13:18,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ebcda1
17:13:18,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54a99b
17:13:18,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b3f1a
17:13:18,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
17:13:18,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@dc1165
17:13:18,547  WARN DriverManagerConnectionProviderImpl:76 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
17:13:18,556  INFO DriverManagerConnectionProviderImpl:149 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/testHibernate]
17:13:18,557  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=test, password=****}
17:13:18,557  INFO DriverManagerConnectionProviderImpl:163 - HHH000006: Autocommit mode: false
17:13:18,558  INFO DriverManagerConnectionProviderImpl:85 - HHH000115: Hibernate connection pool size: 20 (min=1)
17:13:18,633  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
17:13:18,791  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
17:13:18,792 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1b2ba93
17:13:18,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1b2ba93
17:13:18,792  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@103b09a
17:13:19,187 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1e5bb3c
17:13:19,384  INFO SchemaExport:400 - HHH000227: Running hbm2ddl schema export
17:13:20,385  INFO SchemaExport:463 - HHH000230: Schema export complete
17:13:20,440 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
17:13:20,440 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [stockName1]
17:13:20,448 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java]
17:13:20,455 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [compDescription1]
17:13:20,455 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [compName1]
17:13:20,456 TRACE BasicBinder:64 - binding parameter [3] as [DATE] - [Mon Dec 21 17:13:20 EET 2015]
17:13:20,456 TRACE BasicBinder:64 - binding parameter [4] as [VARCHAR] - [remark1]
17:13:20,456 TRACE BasicBinder:64 - binding parameter [5] as [INTEGER] - [1]
17:13:20,458 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode2]
17:13:20,458 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [stockName2]
17:13:20,459 TRACE BasicBinder:64 - binding parameter [1] as [TIMESTAMP] - [Mon Dec 21 17:13:20 EET 2015]
17:13:20,459 TRACE BasicBinder:64 - binding parameter [2] as [FLOAT] - [19.0]
17:13:20,460 TRACE BasicBinder:64 - binding parameter [3] as [FLOAT] - [21.5]
17:13:20,460 TRACE BasicBinder:64 - binding parameter [4] as [FLOAT] - [15.9]
17:13:20,460 TRACE BasicBinder:64 - binding parameter [5] as [INTEGER] - [2]
17:13:20,460 TRACE BasicBinder:64 - binding parameter [6] as [BIGINT] - [19056]
17:13:20,462 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Vasilii]
17:13:20,462 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [Vasiliev]
17:13:20,463 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8 description]
17:13:20,463 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [Java 8]
17:13:20,464 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
17:13:20,465 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [1]
17:13:20,472 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Ivanov]
17:13:20,472 TRACE BasicBinder:64 - binding parameter [2] as [DATE] - [Mon Dec 21 17:13:20 EET 2015]
17:13:20,472 TRACE BasicBinder:64 - binding parameter [3] as [INTEGER] - [1]
17:13:20,473 TRACE BasicBinder:64 - binding parameter [4] as [INTEGER] - [1]
17:13:20,474 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [group1]
17:13:20,474 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [2]
17:13:20,475 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [vasya@mail.ru]
17:13:20,475 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [password]
17:13:20,475 TRACE BasicBinder:64 - binding parameter [3] as [VARCHAR] - [username]
17:13:20,475 TRACE BasicBinder:64 - binding parameter [4] as [BIGINT] - [3]
17:13:20,476 TRACE BasicBinder:64 - binding parameter [1] as [BOOLEAN] - [false]
17:13:20,477 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [2]
17:13:20,477 TRACE BasicBinder:64 - binding parameter [3] as [DATE] - [Mon Dec 21 17:13:20 EET 2015]
17:13:20,477 TRACE BasicBinder:64 - binding parameter [4] as [BIGINT] - [3]
17:13:20,477 TRACE BasicBinder:64 - binding parameter [5] as [BIGINT] - [1]
17:13:20,478 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
17:13:20,480 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [1]
17:13:20,482 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
17:13:20,482 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [1]
17:13:20,484  INFO DriverManagerConnectionProviderImpl:259 - HHH000030: Cleaning up connection pool [jdbc:postgresql://localhost:5432/testHibernate]
12:25:24,820  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:25:24,860  INFO Environment:213 - HHH000206: hibernate.properties not found
12:25:24,865  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:25:25,296  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:25:27,257  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:25:27,486 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b26f7b2
12:25:27,487 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b26f7b2
12:25:27,488 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b26f7b2
12:25:27,491 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@66d1af89
12:25:27,498 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f759d7
12:25:27,502 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@569cfc36
12:25:27,507 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@8e24743
12:25:27,507 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@8e24743
12:25:27,508 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@8e24743
12:25:27,511 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@13eb8acf
12:25:27,511 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@13eb8acf
12:25:27,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13eb8acf
12:25:27,518 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@17d0685f
12:25:27,519 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@17d0685f
12:25:27,520 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17d0685f
12:25:27,524 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@365185bd
12:25:27,525 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@365185bd
12:25:27,525 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@365185bd
12:25:27,529 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@544a2ea6
12:25:27,529 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@544a2ea6
12:25:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@544a2ea6
12:25:27,535 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@706a04ae
12:25:27,536 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@706a04ae
12:25:27,536 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@706a04ae
12:25:27,539 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@646007f4
12:25:27,540 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@646007f4
12:25:27,540 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@646007f4
12:25:27,547 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@df27fae
12:25:27,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@df27fae
12:25:27,551 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5c18298f
12:25:27,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5c18298f
12:25:27,553 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5d11346a
12:25:27,554 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5d11346a
12:25:27,555 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6fb0d3ed
12:25:27,557 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68ceda24
12:25:27,560 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4516af24
12:25:27,561 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4516af24
12:25:27,590 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@15b3e5b
12:25:27,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15b3e5b
12:25:27,595 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@aecb35a
12:25:27,596 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@aecb35a
12:25:27,599 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15bfd87
12:25:27,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15bfd87
12:25:27,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15bfd87
12:25:27,604 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2698dc7
12:25:27,606 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1d7acb34
12:25:27,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d7acb34
12:25:27,607 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d7acb34
12:25:27,608 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@133e16fd
12:25:27,611 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2473b9ce
12:25:27,612 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2473b9ce
12:25:27,614 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@de3a06f
12:25:27,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@de3a06f
12:25:27,617 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bd94634
12:25:27,617 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bd94634
12:25:27,619 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@101df177
12:25:27,619 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@101df177
12:25:27,621 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e4aea35
12:25:27,622 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e4aea35
12:25:27,623 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@517cd4b
12:25:27,626 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@45afc369
12:25:27,627 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@45afc369
12:25:27,627 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@45afc369
12:25:27,630 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
12:25:27,630 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
12:25:27,630 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
12:25:27,632 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@282003e1
12:25:27,636 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
12:25:27,636 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
12:25:27,636 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
12:25:27,641 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4ba2ca36
12:25:27,642 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4ba2ca36
12:25:27,642 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4ba2ca36
12:25:27,669 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@80ec1f8
12:25:27,672 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@10b48321
12:25:27,697 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@19dc67c2
12:25:27,700 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19dc67c2
12:25:27,702 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@dd3b207
12:25:27,721 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@58134517
12:25:27,721 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58134517
12:25:27,735 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@62e136d3
12:25:27,736 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@62e136d3
12:25:27,737 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@57175e74
12:25:27,739 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a052a00
12:25:27,744 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7f77e91b
12:25:27,785 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@157632c9
12:25:27,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@157632c9
12:25:27,787 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@275710fc
12:25:27,788 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75f9eccc
12:25:27,788 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4de5031f
12:25:27,788 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d47c63f
12:25:27,788 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3bbc39f8
12:25:27,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29f69090
12:25:27,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ca263c2
12:25:27,790 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@45f45fa1
12:25:27,897  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/testHibernate
12:25:27,898  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:25:27,898  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:25:28,115  INFO MLog:92 - MLog clients using log4j logging.
12:25:29,354  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:25:29,524  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:25:29,657  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@75e449f0 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@3d0a349b [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge0ys9d1jrt5quj8wvsh|50a638b5, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@1ad29528 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hge0ys9d1jrt5quj8wvsh|5276e6b0, jdbcUrl -> jdbc:mysql://localhost:3306/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hge0ys9d1jrt5quj8wvsh|647e447, numHelperThreads -> 3 ]
12:26:01,181  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@4fa6a1ea -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:01,181  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7766cfdd -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:01,181  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@34859579 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:01,186  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:26:01,190  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:26:01,195  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:26:01,214  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5eb53ee9 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:01,215  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:26:01,412  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Connections could not be acquired from the underlying database!
12:26:02,288  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:26:02,358  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
12:26:04,229 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@38ba6ce3
12:26:05,501  INFO SchemaExport:400 - HHH000227: Running hbm2ddl schema export
12:26:35,963  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@e6974a3 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:35,964  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:26:35,965 ERROR SchemaExport:443 - HHH000231: Schema export unsuccessful
java.sql.SQLException: Connections could not be acquired from the underlying database!
	at com.mchange.v2.sql.SqlUtils.toSQLException(SqlUtils.java:118)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:689)
	at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
	at org.hibernate.c3p0.internal.C3P0ConnectionProvider.getConnection(C3P0ConnectionProvider.java:73)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.create(SchemaExport.java:361)
	at org.hibernate.tool.hbm2ddl.SchemaExport.create(SchemaExport.java:350)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:478)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.mtsmda.hibernate.HibernateUtil.buildSessionFactory(HibernateUtil.java:16)
	at com.mtsmda.hibernate.HibernateUtil.<clinit>(HibernateUtil.java:12)
	at com.mtsmda.hibernate.RunMain.main(RunMain.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: com.mchange.v2.resourcepool.CannotAcquireResourceException: A ResourcePool could not acquire a resource from its primary factory or source.
	at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1418)
	at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)
	at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)
	... 19 more
12:26:35,967  INFO SchemaExport:463 - HHH000230: Schema export complete
12:26:36,113  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@d119ce7 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:36,114  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:26:36,121  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@e2d9034 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:36,122  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:26:36,226  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@102ec929 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:26:36,227  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:27:07,149  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@164459c -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:27:07,150  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:27:07,151  WARN SqlExceptionHelper:127 - SQL Error: 0, SQLState: null
12:27:07,151 ERROR SqlExceptionHelper:129 - Connections could not be acquired from the underlying database!
12:27:07,175  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@16f4521 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:27:07,175  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:27:07,198  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@60ee7445 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:27:07,199  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:27:07,199  WARN BasicResourcePool:1851 - com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@32f3e42e -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception: 
java.sql.SQLException: Access denied for user 'test'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2239)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2270)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:146)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:195)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:184)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:200)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1086)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1073)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:44)
	at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:648)
12:27:07,201  WARN BasicResourcePool:894 - Having failed to acquire a resource, com.mchange.v2.resourcepool.BasicResourcePool@16293aa2 is interrupting all Threads waiting on a resource to check out. Will try again in response to new client requests.
12:30:55,342  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:30:55,348  INFO Environment:213 - HHH000206: hibernate.properties not found
12:30:55,352  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:30:55,446  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:30:55,877  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:30:55,909 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b26f7b2
12:30:55,910 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b26f7b2
12:30:55,910 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b26f7b2
12:30:55,911 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@66d1af89
12:30:55,916 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f759d7
12:30:55,917 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@569cfc36
12:30:55,919 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@8e24743
12:30:55,920 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@8e24743
12:30:55,920 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@8e24743
12:30:55,922 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@13eb8acf
12:30:55,923 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@13eb8acf
12:30:55,923 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13eb8acf
12:30:55,926 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@17d0685f
12:30:55,926 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@17d0685f
12:30:55,926 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17d0685f
12:30:55,928 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@365185bd
12:30:55,928 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@365185bd
12:30:55,928 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@365185bd
12:30:55,931 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@544a2ea6
12:30:55,931 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@544a2ea6
12:30:55,931 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@544a2ea6
12:30:55,934 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@706a04ae
12:30:55,935 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@706a04ae
12:30:55,935 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@706a04ae
12:30:55,937 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@646007f4
12:30:55,937 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@646007f4
12:30:55,938 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@646007f4
12:30:55,942 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@df27fae
12:30:55,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@df27fae
12:30:55,944 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5c18298f
12:30:55,945 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5c18298f
12:30:55,946 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5d11346a
12:30:55,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5d11346a
12:30:55,947 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6fb0d3ed
12:30:55,949 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68ceda24
12:30:55,951 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4516af24
12:30:55,951 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4516af24
12:30:55,954 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@15b3e5b
12:30:55,955 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15b3e5b
12:30:55,957 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@aecb35a
12:30:55,957 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@aecb35a
12:30:55,959 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15bfd87
12:30:55,959 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15bfd87
12:30:55,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15bfd87
12:30:55,962 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2698dc7
12:30:55,963 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1d7acb34
12:30:55,964 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d7acb34
12:30:55,964 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d7acb34
12:30:55,965 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@133e16fd
12:30:55,966 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2473b9ce
12:30:55,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2473b9ce
12:30:55,968 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@de3a06f
12:30:55,968 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@de3a06f
12:30:55,970 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bd94634
12:30:55,970 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bd94634
12:30:55,971 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@101df177
12:30:55,971 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@101df177
12:30:55,973 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e4aea35
12:30:55,974 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e4aea35
12:30:55,974 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@517cd4b
12:30:55,976 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@45afc369
12:30:55,976 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@45afc369
12:30:55,977 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@45afc369
12:30:55,978 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
12:30:55,979 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
12:30:55,979 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
12:30:55,980 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@282003e1
12:30:55,982 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
12:30:55,982 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
12:30:55,982 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
12:30:55,985 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4ba2ca36
12:30:55,985 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4ba2ca36
12:30:55,985 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4ba2ca36
12:30:55,987 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@80ec1f8
12:30:55,992 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@10b48321
12:30:55,998 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@19dc67c2
12:30:55,998 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19dc67c2
12:30:55,999 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@dd3b207
12:30:56,004 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@58134517
12:30:56,004 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58134517
12:30:56,009 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@62e136d3
12:30:56,010 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@62e136d3
12:30:56,011 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@57175e74
12:30:56,012 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a052a00
12:30:56,014 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7f77e91b
12:30:56,018 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@157632c9
12:30:56,018 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@157632c9
12:30:56,021 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@275710fc
12:30:56,021 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75f9eccc
12:30:56,021 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4de5031f
12:30:56,022 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d47c63f
12:30:56,022 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3bbc39f8
12:30:56,023 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29f69090
12:30:56,023 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ca263c2
12:30:56,023 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@45f45fa1
12:30:56,048  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/testHibernate
12:30:56,048  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=root, password=****}
12:30:56,049  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:30:56,080  INFO MLog:92 - MLog clients using log4j logging.
12:30:56,283  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:30:56,349  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:30:56,381  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@33b62328 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@39738263 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge0ys9d1js06iyhshqcg|50a638b5, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@173be2f0 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hge0ys9d1js06iyhshqcg|5276e6b0, jdbcUrl -> jdbc:mysql://localhost:3306/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hge0ys9d1js06iyhshqcg|647e447, numHelperThreads -> 3 ]
12:30:56,948  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:30:57,034  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:30:57,827 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@12d2ce03
12:30:58,263  INFO SchemaExport:400 - HHH000227: Running hbm2ddl schema export
12:30:58,437 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table book_author drop foreign key FKro54jqpth9cqm1899dnuu9lqg
12:30:58,437 ERROR SchemaExport:484 - Table 'testhibernate.book_author' doesn't exist
12:30:58,441 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table book_author drop foreign key FK91ierknt446aaqnjl4uxjyls3
12:30:58,442 ERROR SchemaExport:484 - Table 'testhibernate.book_author' doesn't exist
12:30:58,445 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table groups_users_groups drop foreign key FKrj685qpjsk01fqarvyfoxbgbx
12:30:58,446 ERROR SchemaExport:484 - Table 'testhibernate.groups_users_groups' doesn't exist
12:30:58,449 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table groups_users_groups drop foreign key FK6l857qmbi2ovji5u9kd8shbyx
12:30:58,450 ERROR SchemaExport:484 - Table 'testhibernate.groups_users_groups' doesn't exist
12:30:58,452 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table stock_category drop foreign key FKf2gme4xlhulyvt2tl2qepixk6
12:30:58,453 ERROR SchemaExport:484 - Table 'testhibernate.stock_category' doesn't exist
12:30:58,456 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table stock_category drop foreign key FK3fj8v54n68xl4tgkvmoykbmf6
12:30:58,456 ERROR SchemaExport:484 - Table 'testhibernate.stock_category' doesn't exist
12:30:58,459 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table stockDailyRecords drop foreign key FKbumqrlxdn9p1j71m7o38prs1n
12:30:58,460 ERROR SchemaExport:484 - Table 'testhibernate.stockdailyrecords' doesn't exist
12:30:58,464 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table users_groups drop foreign key FKggimqo8cv8s5p5wcjmlioodyw
12:30:58,464 ERROR SchemaExport:484 - Table 'testhibernate.users_groups' doesn't exist
12:30:58,470 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table users_groups drop foreign key FKg6fu0mfuj9eqfd9aro1nc40nn
12:30:58,473 ERROR SchemaExport:484 - Table 'testhibernate.users_groups' doesn't exist
12:30:58,478 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table users_users_groups drop foreign key FKt4yp3hd5h7log3sf39yqf1b2w
12:30:58,488 ERROR SchemaExport:484 - Table 'testhibernate.users_users_groups' doesn't exist
12:30:58,491 ERROR SchemaExport:483 - HHH000389: Unsuccessful: alter table users_users_groups drop foreign key FKswoelu5a3vevnsxebomm14ubt
12:30:58,492 ERROR SchemaExport:484 - Table 'testhibernate.users_users_groups' doesn't exist
12:31:01,653  INFO SchemaExport:463 - HHH000230: Schema export complete
12:31:02,065 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
12:31:02,066 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [stockName1]
12:31:02,127 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java]
12:31:02,204 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [compDescription1]
12:31:02,204 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [compName1]
12:31:02,237 TRACE BasicBinder:64 - binding parameter [3] as [DATE] - [Tue Dec 22 12:31:01 FET 2015]
12:31:02,242 TRACE BasicBinder:64 - binding parameter [4] as [VARCHAR] - [remark1]
12:31:02,243 TRACE BasicBinder:64 - binding parameter [5] as [INTEGER] - [1]
12:31:02,264 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode2]
12:31:02,265 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [stockName2]
12:31:02,269 TRACE BasicBinder:64 - binding parameter [1] as [TIMESTAMP] - [Tue Dec 22 12:31:01 FET 2015]
12:31:02,271 TRACE BasicBinder:64 - binding parameter [2] as [FLOAT] - [19.0]
12:31:02,271 TRACE BasicBinder:64 - binding parameter [3] as [FLOAT] - [21.5]
12:31:02,272 TRACE BasicBinder:64 - binding parameter [4] as [FLOAT] - [15.9]
12:31:02,272 TRACE BasicBinder:64 - binding parameter [5] as [INTEGER] - [2]
12:31:02,273 TRACE BasicBinder:64 - binding parameter [6] as [BIGINT] - [19056]
12:31:02,293 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Vasilii]
12:31:02,295 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [Vasiliev]
12:31:02,312 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8 description]
12:31:02,313 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [Java 8]
12:31:02,317 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
12:31:02,318 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [1]
12:31:02,424 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Ivanov]
12:31:02,424 TRACE BasicBinder:64 - binding parameter [2] as [DATE] - [Tue Dec 22 12:31:02 FET 2015]
12:31:02,425 TRACE BasicBinder:64 - binding parameter [3] as [INTEGER] - [1]
12:31:02,426 TRACE BasicBinder:64 - binding parameter [4] as [INTEGER] - [1]
12:31:02,429 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [group1]
12:31:02,430 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [2]
12:31:02,434 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [vasya@mail.ru]
12:31:02,435 TRACE BasicBinder:64 - binding parameter [2] as [VARCHAR] - [password]
12:31:02,436 TRACE BasicBinder:64 - binding parameter [3] as [VARCHAR] - [username]
12:31:02,436 TRACE BasicBinder:64 - binding parameter [4] as [BIGINT] - [3]
12:31:02,442 TRACE BasicBinder:64 - binding parameter [1] as [BOOLEAN] - [false]
12:31:02,443 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [2]
12:31:02,445 TRACE BasicBinder:64 - binding parameter [3] as [DATE] - [Tue Dec 22 12:31:02 FET 2015]
12:31:02,446 TRACE BasicBinder:64 - binding parameter [4] as [BIGINT] - [3]
12:31:02,477 TRACE BasicBinder:64 - binding parameter [5] as [BIGINT] - [1]
12:31:02,497 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
12:31:02,498 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [1]
12:31:02,528 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:31:02,528 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [1]
10:20:40,174  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:20:40,208  INFO Environment:213 - HHH000206: hibernate.properties not found
10:20:40,211  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:20:40,278  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:20:40,836  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:20:40,897 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a8b2df
10:20:40,897 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a8b2df
10:20:40,898 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a8b2df
10:20:40,899 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a14be0
10:20:40,900 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@963f38
10:20:40,901 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3b4b99
10:20:40,903 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1f8dfe
10:20:40,903 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1f8dfe
10:20:40,904 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f8dfe
10:20:40,905 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1aabb39
10:20:40,905 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1aabb39
10:20:40,905 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1aabb39
10:20:40,906 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@b930e9
10:20:40,906 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@b930e9
10:20:40,907 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b930e9
10:20:40,907 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@e1f2b6
10:20:40,908 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@e1f2b6
10:20:40,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e1f2b6
10:20:40,909 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1a8209b
10:20:40,909 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1a8209b
10:20:40,909 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a8209b
10:20:40,912 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ce531
10:20:40,912 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ce531
10:20:40,912 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ce531
10:20:40,913 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@9220cb
10:20:40,916 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@9220cb
10:20:40,916 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9220cb
10:20:40,918 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17cb2f7
10:20:40,918 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17cb2f7
10:20:40,919 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1fc5a2
10:20:40,919 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1fc5a2
10:20:40,920 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@864ae7
10:20:40,920 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@864ae7
10:20:40,921 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@194bf0
10:20:40,921 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1963c7b
10:20:40,922 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1a57633
10:20:40,922 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a57633
10:20:40,924 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6fcd57
10:20:40,924 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6fcd57
10:20:40,925 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@37f1db
10:20:40,925 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37f1db
10:20:40,926 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@189eebb
10:20:40,926 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@189eebb
10:20:40,926 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@189eebb
10:20:40,927 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@132ee87
10:20:40,928 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1a7422e
10:20:40,928 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a7422e
10:20:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a7422e
10:20:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19bb21f
10:20:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574b52
10:20:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574b52
10:20:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1c15a0
10:20:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c15a0
10:20:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@85d9a4
10:20:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@85d9a4
10:20:40,932 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1211341
10:20:40,932 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1211341
10:20:40,933 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1085d94
10:20:40,933 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1085d94
10:20:40,934 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8e3ede
10:20:40,935 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@118648b
10:20:40,935 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@118648b
10:20:40,935 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@118648b
10:20:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ce5858
10:20:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ce5858
10:20:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ce5858
10:20:40,937 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@86b178
10:20:40,937 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@54a835
10:20:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@54a835
10:20:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@54a835
10:20:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9fe17d
10:20:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9fe17d
10:20:40,939 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9fe17d
10:20:40,939 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1345237
10:20:40,940 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1702f3f
10:20:40,943 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@c0d45
10:20:40,944 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c0d45
10:20:40,944 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@350808
10:20:40,948 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1960050
10:20:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1960050
10:20:40,951 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1aa2b26
10:20:40,951 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1aa2b26
10:20:40,952 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@e2a846
10:20:40,952 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@56337e
10:20:40,954 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@177068f
10:20:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1cc8fa3
10:20:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cc8fa3
10:20:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f2e206
10:20:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ebcda1
10:20:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54a99b
10:20:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b3f1a
10:20:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
10:20:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@dc1165
10:20:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a76793
10:20:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9504f2
10:20:41,016  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:20:41,016  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:20:41,016  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:20:41,112  INFO MLog:92 - MLog clients using log4j logging.
10:20:41,378  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:20:41,410  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:20:41,451  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@847c6e3 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@72ce9eef [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v50nlm1axr0t3|1290a1d, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@7aab4be [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v50nlm1axr0t3|2a8bfb, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v50nlm1axr0t3|37546c, numHelperThreads -> 3 ]
10:20:42,199  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:20:42,349  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:20:42,351 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1047fc3
10:20:42,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1047fc3
10:20:42,352  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1085d94
10:20:43,849 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@e3a20c
10:20:44,206  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:20:44,543  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:20:44,665 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:20:44,668 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:20:44,673 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:20:44,673 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:20:44,682 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:20:44,682 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:20:44,684 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:20:44,705 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:20:44,705 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:20:44,706 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:20:44,706 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:21:23,363  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:21:23,365  INFO Environment:213 - HHH000206: hibernate.properties not found
10:21:23,367  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:21:23,393  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:21:23,585  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:21:23,601 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1ac5790
10:21:23,601 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1ac5790
10:21:23,601 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ac5790
10:21:23,602 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fcbc19
10:21:23,603 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f74fc5
10:21:23,603 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@8d4344
10:21:23,604 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@18f0b11
10:21:23,604 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@18f0b11
10:21:23,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18f0b11
10:21:23,605 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4a43d2
10:21:23,605 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4a43d2
10:21:23,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a43d2
10:21:23,607 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a0eb51
10:21:23,607 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a0eb51
10:21:23,607 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0eb51
10:21:23,608 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@bdc543
10:21:23,608 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@bdc543
10:21:23,608 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@bdc543
10:21:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1492721
10:21:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1492721
10:21:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1492721
10:21:23,610 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1748ba8
10:21:23,611 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1748ba8
10:21:23,611 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1748ba8
10:21:23,612 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@89e2f0
10:21:23,616 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@89e2f0
10:21:23,616 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@89e2f0
10:21:23,618 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31d499
10:21:23,618 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31d499
10:21:23,619 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19a3160
10:21:23,619 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19a3160
10:21:23,620 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1214a13
10:21:23,620 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1214a13
10:21:23,620 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@17c6631
10:21:23,621 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e3f6d
10:21:23,622 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1c70722
10:21:23,622 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1c70722
10:21:23,623 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@f4fe7d
10:21:23,624 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f4fe7d
10:21:23,625 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6faeb8
10:21:23,625 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6faeb8
10:21:23,626 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c2599f
10:21:23,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c2599f
10:21:23,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c2599f
10:21:23,628 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6edffb
10:21:23,629 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1f6fa3f
10:21:23,629 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f6fa3f
10:21:23,629 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f6fa3f
10:21:23,629 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@cd036c
10:21:23,630 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@10f30f5
10:21:23,630 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10f30f5
10:21:23,631 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@dc504d
10:21:23,631 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@dc504d
10:21:23,631 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1c68dc6
10:21:23,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1c68dc6
10:21:23,632 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@170e652
10:21:23,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@170e652
10:21:23,634 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13f8452
10:21:23,634 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13f8452
10:21:23,634 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ae84c3
10:21:23,635 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1e802ee
10:21:23,635 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e802ee
10:21:23,635 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1e802ee
10:21:23,636 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f71a09
10:21:23,636 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f71a09
10:21:23,636 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f71a09
10:21:23,637 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1c81b84
10:21:23,637 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@320e7a
10:21:23,637 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@320e7a
10:21:23,638 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@320e7a
10:21:23,638 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@83bbd2
10:21:23,638 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@83bbd2
10:21:23,639 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@83bbd2
10:21:23,639 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1ec08c7
10:21:23,639 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@77b686
10:21:23,643 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1e5b5f1
10:21:23,643 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e5b5f1
10:21:23,643 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7cb0b4
10:21:23,647 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@87b565
10:21:23,648 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@87b565
10:21:23,651 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@cdc69b
10:21:23,651 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@cdc69b
10:21:23,651 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c7b3a3
10:21:23,652 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d1f1f
10:21:23,655 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4d1082
10:21:23,657 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1934d9d
10:21:23,658 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1934d9d
10:21:23,658 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1961bac
10:21:23,658 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d4fbfd
10:21:23,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1093095
10:21:23,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b2f7f
10:21:23,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@cbc403
10:21:23,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1288b76
10:21:23,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1fa254f
10:21:23,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@180f214
10:21:23,677  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:21:23,677  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:21:23,677  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:21:23,692  INFO MLog:92 - MLog clients using log4j logging.
10:21:23,877  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:21:23,903  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:21:23,916  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a768f8e [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@fbaaa12a [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v51kefagt6uj|aeb9d0, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@fcd732b7 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v51kefagt6uj|b2945d, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v51kefagt6uj|851e0, numHelperThreads -> 3 ]
10:21:24,021  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:21:24,144  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:21:24,147 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1736ec2
10:21:24,147 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1736ec2
10:21:24,147  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@13f8452
10:21:24,386 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1171820
10:21:24,555  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:21:24,834  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:21:24,907 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:21:24,910 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:21:24,914 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:21:24,914 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:21:24,920 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:21:24,920 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:21:24,922 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:21:24,925 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:21:24,925 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:21:24,926 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:21:24,926 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:21:44,446  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:21:44,448  INFO Environment:213 - HHH000206: hibernate.properties not found
10:21:44,449  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:21:44,472  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:21:44,651  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:21:44,672 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@c2f09e
10:21:44,672 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@c2f09e
10:21:44,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c2f09e
10:21:44,673 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@940943
10:21:44,674 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e99a3d
10:21:44,674 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@8dc539
10:21:44,675 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@e579f9
10:21:44,676 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@e579f9
10:21:44,676 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e579f9
10:21:44,677 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4bbff1
10:21:44,677 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4bbff1
10:21:44,677 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bbff1
10:21:44,678 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1aba8cc
10:21:44,678 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1aba8cc
10:21:44,678 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1aba8cc
10:21:44,679 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1ba1c2b
10:21:44,679 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1ba1c2b
10:21:44,679 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ba1c2b
10:21:44,681 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@b98c18
10:21:44,681 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@b98c18
10:21:44,681 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@b98c18
10:21:44,682 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c20d4
10:21:44,682 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c20d4
10:21:44,682 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c20d4
10:21:44,686 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@ebd302
10:21:44,686 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@ebd302
10:21:44,687 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ebd302
10:21:44,688 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15aba8d
10:21:44,688 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15aba8d
10:21:44,689 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d6f833
10:21:44,689 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d6f833
10:21:44,690 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1744996
10:21:44,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1744996
10:21:44,691 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7918b0
10:21:44,691 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@46128d
10:21:44,692 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@170c116
10:21:44,692 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@170c116
10:21:44,694 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@18d6f3d
10:21:44,694 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@18d6f3d
10:21:44,695 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1feb69
10:21:44,695 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1feb69
10:21:44,697 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2b5ba8
10:21:44,697 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b5ba8
10:21:44,697 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b5ba8
10:21:44,698 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1215398
10:21:44,699 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@9b69e6
10:21:44,700 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@9b69e6
10:21:44,700 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@9b69e6
10:21:44,701 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eeef7
10:21:44,702 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@9838d9
10:21:44,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9838d9
10:21:44,703 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e6f06c
10:21:44,703 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e6f06c
10:21:44,704 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@175cb80
10:21:44,704 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@175cb80
10:21:44,705 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@180e426
10:21:44,705 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@180e426
10:21:44,706 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1df8a9c
10:21:44,706 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1df8a9c
10:21:44,707 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c742a8
10:21:44,708 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@144f05f
10:21:44,708 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@144f05f
10:21:44,708 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@144f05f
10:21:44,709 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10aac6c
10:21:44,710 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10aac6c
10:21:44,710 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10aac6c
10:21:44,711 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2bd560
10:21:44,712 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@171042
10:21:44,712 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@171042
10:21:44,712 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@171042
10:21:44,713 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@137ab64
10:21:44,713 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@137ab64
10:21:44,713 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@137ab64
10:21:44,714 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4c47b5
10:21:44,714 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@ac1f75
10:21:44,718 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@9a111f
10:21:44,718 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@9a111f
10:21:44,718 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@143b5da
10:21:44,723 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@974691
10:21:44,723 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@974691
10:21:44,726 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@b139c9
10:21:44,726 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b139c9
10:21:44,727 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d072fc
10:21:44,727 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a570df
10:21:44,730 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@10a887e
10:21:44,733 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@38f07b
10:21:44,733 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@38f07b
10:21:44,733 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54a99b
10:21:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b3f1a
10:21:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
10:21:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dc1165
10:21:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a76793
10:21:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9504f2
10:21:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1efda65
10:21:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c329d
10:21:44,755  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:21:44,755  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:21:44,755  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:21:44,768  INFO MLog:92 - MLog clients using log4j logging.
10:21:44,901  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:21:44,927  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:21:44,939  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@9ed39d80 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@307fb7eb [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v520nt1qh3uw5|112dec2, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@9e07585d [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v520nt1qh3uw5|642b28, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v520nt1qh3uw5|4bb6f5, numHelperThreads -> 3 ]
10:21:45,039  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:21:45,150  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:21:45,152 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@aa1da5
10:21:45,153 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@aa1da5
10:21:45,153  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1df8a9c
10:21:45,388 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1b18d5e
10:21:45,552  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:21:45,833  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:21:45,902 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:21:45,905 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:21:45,909 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:21:45,909 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:21:45,915 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:21:45,915 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:21:45,917 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:21:45,920 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:21:45,920 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:21:45,921 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:21:45,921 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:22:05,463  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:22:05,465  INFO Environment:213 - HHH000206: hibernate.properties not found
10:22:05,466  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:22:05,509  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:22:05,685  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:22:05,701 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a73d7d
10:22:05,701 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a73d7d
10:22:05,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a73d7d
10:22:05,702 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a7d653
10:22:05,703 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@cfbba2
10:22:05,703 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e0a1b9
10:22:05,704 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@fcd20
10:22:05,705 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@fcd20
10:22:05,705 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@fcd20
10:22:05,706 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1533bdf
10:22:05,706 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1533bdf
10:22:05,707 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1533bdf
10:22:05,708 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5b562
10:22:05,708 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5b562
10:22:05,708 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b5b562
10:22:05,709 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@e6c33
10:22:05,709 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@e6c33
10:22:05,710 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e6c33
10:22:05,711 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f9e52f
10:22:05,711 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f9e52f
10:22:05,711 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f9e52f
10:22:05,712 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1af75dd
10:22:05,712 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1af75dd
10:22:05,712 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1af75dd
10:22:05,716 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1226445
10:22:05,717 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1226445
10:22:05,717 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1226445
10:22:05,718 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8e5360
10:22:05,718 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8e5360
10:22:05,719 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13a5041
10:22:05,719 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13a5041
10:22:05,720 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1d37602
10:22:05,720 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d37602
10:22:05,721 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@48dcf9
10:22:05,721 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1373a71
10:22:05,722 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@211e40
10:22:05,722 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@211e40
10:22:05,723 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@de42ca
10:22:05,724 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@de42ca
10:22:05,725 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@19d0cb7
10:22:05,725 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19d0cb7
10:22:05,727 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7586b2
10:22:05,727 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7586b2
10:22:05,727 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7586b2
10:22:05,729 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@786a44
10:22:05,730 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@18a1cf1
10:22:05,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18a1cf1
10:22:05,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18a1cf1
10:22:05,731 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@124e
10:22:05,731 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@9f3578
10:22:05,731 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f3578
10:22:05,732 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f7590
10:22:05,732 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f7590
10:22:05,733 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1afced9
10:22:05,733 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1afced9
10:22:05,734 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@a9f04e
10:22:05,734 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a9f04e
10:22:05,735 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ee667c
10:22:05,736 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ee667c
10:22:05,736 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a4d25d
10:22:05,737 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@15792a0
10:22:05,737 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@15792a0
10:22:05,737 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@15792a0
10:22:05,738 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@111ebb3
10:22:05,739 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@111ebb3
10:22:05,739 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@111ebb3
10:22:05,740 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@715d44
10:22:05,741 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@ad6372
10:22:05,741 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@ad6372
10:22:05,741 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@ad6372
10:22:05,742 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f6ab36
10:22:05,742 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f6ab36
10:22:05,742 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f6ab36
10:22:05,743 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@dbd887
10:22:05,744 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1023661
10:22:05,748 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@23b026
10:22:05,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23b026
10:22:05,748 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9d1dd7
10:22:05,753 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1936199
10:22:05,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1936199
10:22:05,756 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7ac7c5
10:22:05,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7ac7c5
10:22:05,756 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d0f32d
10:22:05,756 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1076445
10:22:05,758 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@144809c
10:22:05,761 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@9bee3a
10:22:05,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9bee3a
10:22:05,761 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ebcda1
10:22:05,761 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54a99b
10:22:05,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b3f1a
10:22:05,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
10:22:05,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@dc1165
10:22:05,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a76793
10:22:05,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9504f2
10:22:05,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1efda65
10:22:05,781  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:22:05,782  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:22:05,782  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:22:05,798  INFO MLog:92 - MLog clients using log4j logging.
10:22:05,920  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:22:05,947  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:22:05,960  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@4dce65d9 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@50398555 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v52gvydbhooo|1afe37f, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@480cd667 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v52gvydbhooo|1fa5e49, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v52gvydbhooo|1d5c1ed, numHelperThreads -> 3 ]
10:22:06,063  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:22:06,175  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:22:06,177 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5ffb87
10:22:06,178 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5ffb87
10:22:06,178  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ee667c
10:22:06,402 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1ffd9f1
10:22:06,565  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:22:06,845  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:22:06,916 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:22:06,919 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:22:06,923 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:22:06,923 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:22:06,929 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:22:06,929 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:22:06,931 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:22:06,933 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:22:06,934 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:22:06,934 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:22:06,935 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:24:22,760  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:24:22,762  INFO Environment:213 - HHH000206: hibernate.properties not found
10:24:22,764  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:24:22,787  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:24:22,948  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:24:22,968 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@282ae6
10:24:22,968 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@282ae6
10:24:22,969 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@282ae6
10:24:22,970 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ceb7ea
10:24:22,970 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b4b99
10:24:22,971 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56553e
10:24:22,972 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@9ce31e
10:24:22,972 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@9ce31e
10:24:22,972 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@9ce31e
10:24:22,973 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@158d955
10:24:22,973 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@158d955
10:24:22,973 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@158d955
10:24:22,974 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1a49116
10:24:22,975 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1a49116
10:24:22,975 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1a49116
10:24:22,976 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1cf00a1
10:24:22,976 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1cf00a1
10:24:22,976 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1cf00a1
10:24:22,978 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4e94ba
10:24:22,978 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4e94ba
10:24:22,979 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4e94ba
10:24:22,980 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1416a20
10:24:22,980 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1416a20
10:24:22,980 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1416a20
10:24:22,985 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6a4db4
10:24:22,985 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6a4db4
10:24:22,985 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a4db4
10:24:22,987 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d326bb
10:24:22,987 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d326bb
10:24:22,988 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c433cb
10:24:22,988 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c433cb
10:24:22,989 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@fcc66a
10:24:22,989 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@fcc66a
10:24:22,990 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@118618d
10:24:22,991 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2d67b4
10:24:22,992 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1ae04c0
10:24:22,992 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ae04c0
10:24:22,993 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@17da0d1
10:24:22,994 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17da0d1
10:24:22,995 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@981eab
10:24:22,995 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@981eab
10:24:22,996 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@180a5c
10:24:22,996 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@180a5c
10:24:22,996 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@180a5c
10:24:22,997 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c85632
10:24:22,998 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@cd036c
10:24:22,998 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cd036c
10:24:22,998 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cd036c
10:24:22,999 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f74e81
10:24:23,000 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4a2d5e
10:24:23,000 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a2d5e
10:24:23,001 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1750ae1
10:24:23,001 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1750ae1
10:24:23,002 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@130be8c
10:24:23,002 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@130be8c
10:24:23,003 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@c7423b
10:24:23,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c7423b
10:24:23,004 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1eb0640
10:24:23,004 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1eb0640
10:24:23,005 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b220a3
10:24:23,005 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1407cec
10:24:23,006 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1407cec
10:24:23,006 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1407cec
10:24:23,007 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e530d5
10:24:23,007 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e530d5
10:24:23,007 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e530d5
10:24:23,007 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@108c175
10:24:23,008 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@355d79
10:24:23,008 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@355d79
10:24:23,008 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@355d79
10:24:23,009 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14defcc
10:24:23,009 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14defcc
10:24:23,009 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14defcc
10:24:23,010 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1815364
10:24:23,010 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@10df626
10:24:23,014 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7cb0b4
10:24:23,014 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cb0b4
10:24:23,014 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1404d1
10:24:23,019 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@aefb01
10:24:23,019 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@aefb01
10:24:23,022 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@c7b3a3
10:24:23,022 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c7b3a3
10:24:23,023 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56337e
10:24:23,023 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19b2f32
10:24:23,026 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@910c30
10:24:23,030 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@fbef54
10:24:23,030 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@fbef54
10:24:23,030 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b3f1a
10:24:23,030 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
10:24:23,030 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@dc1165
10:24:23,031 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a76793
10:24:23,031 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9504f2
10:24:23,031 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1efda65
10:24:23,031 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7c329d
10:24:23,031 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e418
10:24:23,053  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:24:23,053  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:24:23,054  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:24:23,068  INFO MLog:92 - MLog clients using log4j logging.
10:24:23,197  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:24:23,223  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:24:23,236  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@17d85c85 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@155151c6 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v55et4170tp3c|17e0655, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@32fcaf8c [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v55et4170tp3c|4d1e47, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v55et4170tp3c|1771fdd, numHelperThreads -> 3 ]
10:24:23,341  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:24:23,451  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:24:23,453 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12b6749
10:24:23,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12b6749
10:24:23,453  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1eb0640
10:24:23,693 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1590cd
10:24:23,874  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:24:24,193  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:24:24,266 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:24:24,269 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:24:24,273 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:24:24,274 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:24:24,280 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:24:24,281 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:24:24,282 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:24:24,285 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:24:24,285 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:24:24,286 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:24:24,286 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:26:31,256  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:26:31,258  INFO Environment:213 - HHH000206: hibernate.properties not found
10:26:31,259  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:26:31,279  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:26:31,427  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:26:31,447 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@184f97
10:26:31,448 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@184f97
10:26:31,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@184f97
10:26:31,449 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e39ebf
10:26:31,450 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56553e
10:26:31,451 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a2c255
10:26:31,452 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1fa7c6
10:26:31,452 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1fa7c6
10:26:31,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fa7c6
10:26:31,453 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@b6a52e
10:26:31,453 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@b6a52e
10:26:31,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b6a52e
10:26:31,455 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b14695
10:26:31,455 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b14695
10:26:31,455 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b14695
10:26:31,456 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4ee63e
10:26:31,457 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4ee63e
10:26:31,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4ee63e
10:26:31,458 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3837ba
10:26:31,459 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3837ba
10:26:31,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3837ba
10:26:31,460 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a3bffb
10:26:31,460 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a3bffb
10:26:31,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a3bffb
10:26:31,461 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
10:26:31,461 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
10:26:31,464 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d5e2b
10:26:31,466 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@150dd8
10:26:31,466 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@150dd8
10:26:31,467 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17380fc
10:26:31,467 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17380fc
10:26:31,468 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1159684
10:26:31,468 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1159684
10:26:31,469 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5cc7a5
10:26:31,470 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a8fff
10:26:31,470 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1a2efd3
10:26:31,471 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2efd3
10:26:31,472 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5feba
10:26:31,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5feba
10:26:31,473 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@19b747d
10:26:31,473 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19b747d
10:26:31,474 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dd9771
10:26:31,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dd9771
10:26:31,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dd9771
10:26:31,476 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17d43bf
10:26:31,476 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2a9a49
10:26:31,476 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a9a49
10:26:31,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a9a49
10:26:31,477 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e05ddd
10:26:31,478 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1202871
10:26:31,478 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1202871
10:26:31,478 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f3587
10:26:31,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f3587
10:26:31,479 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1852a95
10:26:31,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1852a95
10:26:31,480 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@95b81a
10:26:31,480 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@95b81a
10:26:31,481 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ef12fb
10:26:31,481 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ef12fb
10:26:31,482 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@88249c
10:26:31,482 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1134ee8
10:26:31,483 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1134ee8
10:26:31,483 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1134ee8
10:26:31,484 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1c81b84
10:26:31,484 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1c81b84
10:26:31,484 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1c81b84
10:26:31,485 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@dec6da
10:26:31,485 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@ede434
10:26:31,486 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@ede434
10:26:31,486 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@ede434
10:26:31,486 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ec08c7
10:26:31,486 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ec08c7
10:26:31,487 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ec08c7
10:26:31,487 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2dec81
10:26:31,488 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1982a25
10:26:31,491 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5821d0
10:26:31,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5821d0
10:26:31,491 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ad437e
10:26:31,496 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@112cbde
10:26:31,496 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@112cbde
10:26:31,499 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2d1f1f
10:26:31,499 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d1f1f
10:26:31,500 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19b2f32
10:26:31,500 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@e7df90
10:26:31,502 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1d25ec5
10:26:31,504 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1f2e206
10:26:31,504 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f2e206
10:26:31,505 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a76793
10:26:31,505 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9504f2
10:26:31,505 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1efda65
10:26:31,505 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c329d
10:26:31,505 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e418
10:26:31,505 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fd84ec
10:26:31,505 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d006c
10:26:31,506 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cf0c3
10:26:31,525  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:26:31,526  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:26:31,526  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:26:31,542  INFO MLog:92 - MLog clients using log4j logging.
10:26:31,886  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:26:31,912  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:26:31,925  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@524c9b41 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@3efa88c3 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v5864517lbpaw|1301e56, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@a6d4e368 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5864517lbpaw|63a4bb, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5864517lbpaw|fd6f8a, numHelperThreads -> 3 ]
10:26:32,032  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:26:32,142  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:26:32,145 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@16499c
10:26:32,145 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@16499c
10:26:32,145  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ef12fb
10:26:32,389 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@ec8446
10:26:32,550  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:26:32,841  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:26:33,070 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:26:33,073 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:26:33,077 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:26:33,077 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:26:33,083 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:26:33,083 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:26:33,085 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:26:33,087 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:26:33,088 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:26:33,088 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:26:33,089 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:26:33,111 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [19324530]
10:26:33,111 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [2]
10:26:33,113 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:26:33,114 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:26:33,114 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:26:33,114 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:26:33,114 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:26:33,114 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:26:33,115 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:26:41,693  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:26:41,695  INFO Environment:213 - HHH000206: hibernate.properties not found
10:26:41,696  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:26:41,716  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:26:41,850  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:26:41,866 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@114b988
10:26:41,867 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@114b988
10:26:41,867 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@114b988
10:26:41,868 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4662c4
10:26:41,868 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e0a1b9
10:26:41,869 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@82a3b2
10:26:41,870 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@11948f9
10:26:41,870 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@11948f9
10:26:41,870 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11948f9
10:26:41,871 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@17b57a3
10:26:41,871 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@17b57a3
10:26:41,871 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@17b57a3
10:26:41,872 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@107f672
10:26:41,873 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@107f672
10:26:41,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@107f672
10:26:41,874 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1933923
10:26:41,874 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1933923
10:26:41,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1933923
10:26:41,875 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3fe0e5
10:26:41,876 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3fe0e5
10:26:41,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3fe0e5
10:26:41,877 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16edaf6
10:26:41,877 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16edaf6
10:26:41,877 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16edaf6
10:26:41,882 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@70b657
10:26:41,882 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@70b657
10:26:41,882 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70b657
10:26:41,883 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@235ed5
10:26:41,883 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@235ed5
10:26:41,884 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20fa96
10:26:41,884 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20fa96
10:26:41,885 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@62df1
10:26:41,885 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62df1
10:26:41,886 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b1bbe8
10:26:41,887 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1856c2c
10:26:41,887 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4c98f1
10:26:41,887 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4c98f1
10:26:41,889 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@729305
10:26:41,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@729305
10:26:41,890 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@17df584
10:26:41,890 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17df584
10:26:41,891 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ddccb
10:26:41,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ddccb
10:26:41,892 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ddccb
10:26:41,893 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1939d13
10:26:41,894 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@cb216f
10:26:41,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cb216f
10:26:41,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cb216f
10:26:41,895 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@edfc73
10:26:41,896 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@829a91
10:26:41,896 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@829a91
10:26:41,897 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@5866ff
10:26:41,897 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5866ff
10:26:41,898 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@108d3eb
10:26:41,898 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@108d3eb
10:26:41,899 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@101b9cf
10:26:41,899 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@101b9cf
10:26:41,900 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ae84c3
10:26:41,901 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ae84c3
10:26:41,901 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@167ca0f
10:26:41,902 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1c59048
10:26:41,903 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1c59048
10:26:41,903 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1c59048
10:26:41,904 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1c89df9
10:26:41,904 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1c89df9
10:26:41,904 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1c89df9
10:26:41,905 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@30df0
10:26:41,905 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1da6054
10:26:41,905 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1da6054
10:26:41,906 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1da6054
10:26:41,906 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@df6513
10:26:41,906 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@df6513
10:26:41,907 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@df6513
10:26:41,907 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@52dd99
10:26:41,908 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@9a1621
10:26:41,911 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1a26520
10:26:41,911 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a26520
10:26:41,911 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1493111
10:26:41,915 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1340091
10:26:41,916 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1340091
10:26:41,918 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@959a7a
10:26:41,918 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@959a7a
10:26:41,918 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1076445
10:26:41,919 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9415ea
10:26:41,921 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@91f50
10:26:41,923 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a2e547
10:26:41,923 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a2e547
10:26:41,923 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
10:26:41,923 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@dc1165
10:26:41,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a76793
10:26:41,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9504f2
10:26:41,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efda65
10:26:41,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c329d
10:26:41,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e418
10:26:41,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1fd84ec
10:26:41,942  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:26:41,943  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:26:41,943  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:26:41,957  INFO MLog:92 - MLog clients using log4j logging.
10:26:42,161  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:26:42,189  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:26:42,202  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a3dea9f8 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@87b7c900 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v58e19cg3sbm|d1e874, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8171900e [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v58e19cg3sbm|fecda0, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v58e19cg3sbm|1cd0090, numHelperThreads -> 3 ]
10:26:42,297  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:26:42,407  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:26:42,408 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12b6749
10:26:42,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12b6749
10:26:42,409  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ae84c3
10:26:42,636 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1590cd
10:26:42,797  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:26:43,075  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:26:43,146 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:26:43,149 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:26:43,154 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:26:43,154 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:26:43,159 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:26:43,160 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:26:43,161 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:26:43,164 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:26:43,164 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:26:43,165 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:26:43,165 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:26:43,169 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:26:43,169 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:26:43,169 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode2]
10:26:43,169 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:26:43,169 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:26:43,170 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:26:43,170 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:27:13,903  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:27:13,906  INFO Environment:213 - HHH000206: hibernate.properties not found
10:27:13,907  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:27:13,927  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:27:14,061  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:27:14,076 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a2d1c9
10:27:14,077 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a2d1c9
10:27:14,077 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a2d1c9
10:27:14,078 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1accfb7
10:27:14,079 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@8dc539
10:27:14,079 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f8d48
10:27:14,080 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1a11c4f
10:27:14,080 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1a11c4f
10:27:14,080 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a11c4f
10:27:14,081 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@bc43e6
10:27:14,081 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@bc43e6
10:27:14,081 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@bc43e6
10:27:14,082 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5c3ba
10:27:14,082 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5c3ba
10:27:14,083 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b5c3ba
10:27:14,083 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@129ed01
10:27:14,084 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@129ed01
10:27:14,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@129ed01
10:27:14,085 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@12e79d0
10:27:14,085 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@12e79d0
10:27:14,085 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@12e79d0
10:27:14,086 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d31a9
10:27:14,086 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d31a9
10:27:14,087 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d31a9
10:27:14,087 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1d32fef
10:27:14,091 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1d32fef
10:27:14,092 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1d32fef
10:27:14,093 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17ca8c8
10:27:14,093 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17ca8c8
10:27:14,094 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@103ddfd
10:27:14,094 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@103ddfd
10:27:14,095 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6cea8a
10:27:14,095 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6cea8a
10:27:14,096 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e3f6d
10:27:14,096 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@168c350
10:27:14,097 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@fe1bc5
10:27:14,097 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fe1bc5
10:27:14,098 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1e18380
10:27:14,099 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e18380
10:27:14,100 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@195b5ad
10:27:14,100 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@195b5ad
10:27:14,101 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f8a03f
10:27:14,101 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f8a03f
10:27:14,101 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f8a03f
10:27:14,102 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e4ecd
10:27:14,103 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@b1f125
10:27:14,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b1f125
10:27:14,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b1f125
10:27:14,104 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1044f78
10:27:14,104 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@ed9a4d
10:27:14,104 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ed9a4d
10:27:14,105 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@d0f392
10:27:14,105 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d0f392
10:27:14,106 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a3d488
10:27:14,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a3d488
10:27:14,106 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@27445d
10:27:14,107 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27445d
10:27:14,108 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c18f44
10:27:14,108 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c18f44
10:27:14,108 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a0a884
10:27:14,109 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1e27131
10:27:14,110 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e27131
10:27:14,110 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1e27131
10:27:14,111 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@82190a
10:27:14,111 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@82190a
10:27:14,111 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@82190a
10:27:14,111 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2166f2
10:27:14,112 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@210f7d
10:27:14,112 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@210f7d
10:27:14,112 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@210f7d
10:27:14,113 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e1e74d
10:27:14,113 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e1e74d
10:27:14,113 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e1e74d
10:27:14,114 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@77b686
10:27:14,114 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@c9f768
10:27:14,118 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@11238a0
10:27:14,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@11238a0
10:27:14,118 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1588de9
10:27:14,122 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@c3d5ab
10:27:14,122 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c3d5ab
10:27:14,125 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@10d1c98
10:27:14,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10d1c98
10:27:14,125 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a570df
10:27:14,126 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ea8f9
10:27:14,127 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@666ef0
10:27:14,130 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@e99e46
10:27:14,130 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e99e46
10:27:14,130 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@dc1165
10:27:14,130 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a76793
10:27:14,130 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9504f2
10:27:14,130 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1efda65
10:27:14,131 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c329d
10:27:14,131 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e418
10:27:14,131 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1fd84ec
10:27:14,131 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6d006c
10:27:14,148  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:27:14,149  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:27:14,149  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:27:14,164  INFO MLog:92 - MLog clients using log4j logging.
10:27:14,280  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:27:14,307  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:27:14,321  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@d90bf61c [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@3d31d026 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v592tp1alp1gp|81e4a1, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@88ba5753 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v592tp1alp1gp|1c2dbc2, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v592tp1alp1gp|140b009, numHelperThreads -> 3 ]
10:27:14,423  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:27:14,530  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:27:14,532 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@89fcaf
10:27:14,532 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@89fcaf
10:27:14,532  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c18f44
10:27:14,760 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1b82279
10:27:14,922  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:27:15,209  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:27:15,281 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:27:15,284 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:27:15,287 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:27:15,287 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:27:15,293 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:27:15,294 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:27:15,295 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:27:15,298 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:27:15,298 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:27:15,299 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:27:15,299 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:27:15,328 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [19324530]
10:27:15,328 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [2]
10:27:15,331 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:27:15,332 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:27:15,332 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:27:15,332 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:27:15,332 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:27:15,332 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:27:15,333 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:27:34,141  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:27:34,143  INFO Environment:213 - HHH000206: hibernate.properties not found
10:27:34,144  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:27:34,165  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:27:34,303  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:27:34,320 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@184f97
10:27:34,320 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@184f97
10:27:34,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@184f97
10:27:34,321 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e39ebf
10:27:34,322 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56553e
10:27:34,322 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a2c255
10:27:34,323 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1fa7c6
10:27:34,323 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1fa7c6
10:27:34,324 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fa7c6
10:27:34,324 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@b6a52e
10:27:34,324 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@b6a52e
10:27:34,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b6a52e
10:27:34,326 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b14695
10:27:34,326 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b14695
10:27:34,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b14695
10:27:34,327 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4ee63e
10:27:34,327 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4ee63e
10:27:34,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4ee63e
10:27:34,328 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3837ba
10:27:34,329 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3837ba
10:27:34,329 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3837ba
10:27:34,330 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a3bffb
10:27:34,331 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a3bffb
10:27:34,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a3bffb
10:27:34,335 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@b15b5a
10:27:34,335 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@b15b5a
10:27:34,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b15b5a
10:27:34,337 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@150dd8
10:27:34,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@150dd8
10:27:34,338 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17380fc
10:27:34,338 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17380fc
10:27:34,339 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1159684
10:27:34,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1159684
10:27:34,340 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5cc7a5
10:27:34,341 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a8fff
10:27:34,342 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1a2efd3
10:27:34,342 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2efd3
10:27:34,343 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5feba
10:27:34,344 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5feba
10:27:34,345 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@19b747d
10:27:34,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19b747d
10:27:34,346 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dd9771
10:27:34,346 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dd9771
10:27:34,346 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dd9771
10:27:34,347 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17d43bf
10:27:34,348 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2a9a49
10:27:34,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a9a49
10:27:34,349 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a9a49
10:27:34,349 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e05ddd
10:27:34,350 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1202871
10:27:34,350 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1202871
10:27:34,350 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f3587
10:27:34,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f3587
10:27:34,351 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1852a95
10:27:34,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1852a95
10:27:34,352 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@95b81a
10:27:34,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@95b81a
10:27:34,353 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ef12fb
10:27:34,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ef12fb
10:27:34,354 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@88249c
10:27:34,354 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1134ee8
10:27:34,354 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1134ee8
10:27:34,355 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1134ee8
10:27:34,355 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1c81b84
10:27:34,356 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1c81b84
10:27:34,356 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1c81b84
10:27:34,356 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@dec6da
10:27:34,357 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@ede434
10:27:34,357 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@ede434
10:27:34,357 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@ede434
10:27:34,358 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ec08c7
10:27:34,358 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ec08c7
10:27:34,358 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ec08c7
10:27:34,359 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2dec81
10:27:34,359 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1982a25
10:27:34,362 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5821d0
10:27:34,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5821d0
10:27:34,362 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ad437e
10:27:34,367 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@112cbde
10:27:34,367 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@112cbde
10:27:34,369 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2d1f1f
10:27:34,369 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d1f1f
10:27:34,369 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19b2f32
10:27:34,370 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@e7df90
10:27:34,372 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1d25ec5
10:27:34,374 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1f2e206
10:27:34,374 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f2e206
10:27:34,375 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a76793
10:27:34,375 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9504f2
10:27:34,375 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1efda65
10:27:34,375 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c329d
10:27:34,375 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e418
10:27:34,375 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fd84ec
10:27:34,375 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d006c
10:27:34,376 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cf0c3
10:27:34,394  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:27:34,395  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:27:34,395  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:27:34,408  INFO MLog:92 - MLog clients using log4j logging.
10:27:34,522  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:27:34,547  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:27:34,562  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@b336a5f9 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@ba11d1c7 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v59ifzjhxk7y|bbcb8b, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@a417a1f7 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v59ifzjhxk7y|1f2e04c, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v59ifzjhxk7y|fd6f8a, numHelperThreads -> 3 ]
10:27:34,666  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:27:34,771  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:27:34,773 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@19f9baf
10:27:34,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@19f9baf
10:27:34,773  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ef12fb
10:27:35,000 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@7c992e
10:27:35,163  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:27:35,447  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:27:35,517 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:27:35,520 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:27:35,524 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:27:35,524 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:27:35,530 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:27:35,530 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:27:35,532 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:27:35,534 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:27:35,534 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:27:35,535 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:27:35,535 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:27:35,538 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:27:35,539 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:27:35,539 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:27:35,539 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:27:35,539 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:27:35,539 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:27:35,539 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:31:45,180  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:31:45,183  INFO Environment:213 - HHH000206: hibernate.properties not found
10:31:45,184  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:31:45,210  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:31:45,352  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:31:45,369 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e8184f
10:31:45,370 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e8184f
10:31:45,370 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e8184f
10:31:45,371 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@963f38
10:31:45,371 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@845f64
10:31:45,372 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@13c29f0
10:31:45,373 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1290b6f
10:31:45,374 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1290b6f
10:31:45,374 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1290b6f
10:31:45,375 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1d379d2
10:31:45,375 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1d379d2
10:31:45,376 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d379d2
10:31:45,377 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c08a64
10:31:45,377 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c08a64
10:31:45,377 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c08a64
10:31:45,379 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1279472
10:31:45,379 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1279472
10:31:45,379 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1279472
10:31:45,380 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e7872e
10:31:45,380 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e7872e
10:31:45,380 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e7872e
10:31:45,381 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c2ffca
10:31:45,382 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c2ffca
10:31:45,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c2ffca
10:31:45,383 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@110609a
10:31:45,383 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@110609a
10:31:45,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@110609a
10:31:45,389 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@55dedb
10:31:45,389 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@55dedb
10:31:45,390 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e4344
10:31:45,391 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e4344
10:31:45,392 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7918b0
10:31:45,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7918b0
10:31:45,393 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1856c2c
10:31:45,393 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a57633
10:31:45,394 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1110caf
10:31:45,394 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1110caf
10:31:45,395 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1f63402
10:31:45,396 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f63402
10:31:45,397 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1d91a7a
10:31:45,397 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d91a7a
10:31:45,398 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c81850
10:31:45,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c81850
10:31:45,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c81850
10:31:45,400 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7263d0
10:31:45,401 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1e05ddd
10:31:45,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e05ddd
10:31:45,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e05ddd
10:31:45,402 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@8adb01
10:31:45,403 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@dc504d
10:31:45,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@dc504d
10:31:45,403 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@e74a94
10:31:45,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@e74a94
10:31:45,404 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@774652
10:31:45,404 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@774652
10:31:45,405 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6fd685
10:31:45,405 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6fd685
10:31:45,406 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a0a884
10:31:45,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a0a884
10:31:45,407 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18add5e
10:31:45,408 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@b62081
10:31:45,408 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@b62081
10:31:45,408 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@b62081
10:31:45,409 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@108c175
10:31:45,409 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@108c175
10:31:45,409 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@108c175
10:31:45,410 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@54a835
10:31:45,411 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@200e2d
10:31:45,411 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@200e2d
10:31:45,411 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@200e2d
10:31:45,412 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1815364
10:31:45,412 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1815364
10:31:45,412 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1815364
10:31:45,412 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@9a1621
10:31:45,413 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1c33ccd
10:31:45,416 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1ad437e
10:31:45,416 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ad437e
10:31:45,417 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@10cc4c1
10:31:45,421 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1dbb35
10:31:45,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1dbb35
10:31:45,424 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b2f32
10:31:45,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b2f32
10:31:45,425 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10675c3
10:31:45,425 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d2a14b
10:31:45,427 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1697a64
10:31:45,430 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@cbc403
10:31:45,430 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@cbc403
10:31:45,430 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1defa49
10:31:45,430 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@261c14
10:31:45,431 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@121beab
10:31:45,431 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@36b7cc
10:31:45,431 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c2a1c7
10:31:45,431 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e15fbe
10:31:45,431 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cdd309
10:31:45,431 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@133fb54
10:31:45,452  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:31:45,452  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:31:45,452  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:31:45,467  INFO MLog:92 - MLog clients using log4j logging.
10:31:45,589  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:31:45,619  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:31:45,632  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@37259801 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@ac816b73 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v5ew5xord5iu|47aec7, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@816230d4 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5ew5xord5iu|195d3aa, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5ew5xord5iu|2bb74, numHelperThreads -> 3 ]
10:31:45,748  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:31:45,858  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:31:45,860 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d2fd7
10:31:45,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2d2fd7
10:31:45,860  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@a0a884
10:31:46,095 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@fa6afc
10:31:46,269  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:31:46,553  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:31:46,627 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:31:46,630 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:31:46,633 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:31:46,633 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:31:46,639 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:31:46,639 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:31:46,641 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:31:46,643 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:31:46,643 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:31:46,644 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:31:46,644 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:31:46,647 ERROR ErrorCounter:60 - line 1:8: expecting "into", found 'Stock'
10:31:46,648 ERROR ErrorCounter:55 - line 1:8: expecting "into", found 'Stock'
line 1:8: expecting "into", found 'Stock'
	at antlr.Parser.match(Parser.java:211)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.intoClause(HqlBaseParser.java:815)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.insertStatement(HqlBaseParser.java:353)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:192)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:279)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:298)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:236)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1825)
	at com.mtsmda.hibernate.RunMainHQL.insertHQL(RunMainHQL.java:61)
	at com.mtsmda.hibernate.RunMainHQL.main(RunMainHQL.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
10:31:59,561  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:31:59,563  INFO Environment:213 - HHH000206: hibernate.properties not found
10:31:59,564  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:31:59,587  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:31:59,735  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:31:59,750 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a14be0
10:31:59,750 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a14be0
10:31:59,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a14be0
10:31:59,751 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11d9ca5
10:31:59,752 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f8d48
10:31:59,753 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@543f11
10:31:59,754 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@231c67
10:31:59,754 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@231c67
10:31:59,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@231c67
10:31:59,755 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@a8171b
10:31:59,755 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@a8171b
10:31:59,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a8171b
10:31:59,757 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@9b675b
10:31:59,757 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@9b675b
10:31:59,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b675b
10:31:59,758 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@c09980
10:31:59,758 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@c09980
10:31:59,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c09980
10:31:59,759 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@e1572c
10:31:59,759 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@e1572c
10:31:59,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@e1572c
10:31:59,761 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16ba29
10:31:59,761 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16ba29
10:31:59,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16ba29
10:31:59,762 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1719f6d
10:31:59,766 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1719f6d
10:31:59,766 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1719f6d
10:31:59,767 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a260e7
10:31:59,767 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a260e7
10:31:59,768 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab05a3
10:31:59,768 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab05a3
10:31:59,770 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@c8aada
10:31:59,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@c8aada
10:31:59,771 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6bef53
10:31:59,771 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d21ef
10:31:59,772 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@131a0ae
10:31:59,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@131a0ae
10:31:59,773 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1b4aa68
10:31:59,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b4aa68
10:31:59,775 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@33967b
10:31:59,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33967b
10:31:59,776 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@13bf9ce
10:31:59,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13bf9ce
10:31:59,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13bf9ce
10:31:59,777 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f4011
10:31:59,778 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@58f809
10:31:59,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58f809
10:31:59,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58f809
10:31:59,779 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@43bd7
10:31:59,779 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1ac3689
10:31:59,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ac3689
10:31:59,780 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@b279f3
10:31:59,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b279f3
10:31:59,781 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@90b93b
10:31:59,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@90b93b
10:31:59,782 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@10c2a7a
10:31:59,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10c2a7a
10:31:59,783 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17cc8df
10:31:59,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17cc8df
10:31:59,783 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b2c566
10:31:59,784 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1925367
10:31:59,784 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1925367
10:31:59,784 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1925367
10:31:59,785 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a24fe7
10:31:59,785 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a24fe7
10:31:59,785 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a24fe7
10:31:59,786 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1182c93
10:31:59,787 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@19c2405
10:31:59,787 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@19c2405
10:31:59,787 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@19c2405
10:31:59,788 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@164b39d
10:31:59,788 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@164b39d
10:31:59,788 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@164b39d
10:31:59,788 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4561a6
10:31:59,789 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@10508f3
10:31:59,792 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@346322
10:31:59,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@346322
10:31:59,792 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ca7038
10:31:59,797 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@85a317
10:31:59,797 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@85a317
10:31:59,799 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@480e56
10:31:59,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@480e56
10:31:59,799 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ea8f9
10:31:59,800 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@97618e
10:31:59,803 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@d61dc3
10:31:59,806 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@54a99b
10:31:59,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54a99b
10:31:59,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1efda65
10:31:59,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c329d
10:31:59,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e418
10:31:59,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1fd84ec
10:31:59,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d006c
10:31:59,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5cf0c3
10:31:59,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10b4509
10:31:59,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54b365
10:31:59,825  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:31:59,826  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:31:59,826  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:31:59,840  INFO MLog:92 - MLog clients using log4j logging.
10:31:59,959  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:31:59,989  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:32:00,004  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@567a0561 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@1d662d26 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v5f794dw2wh9|1955233, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@d9017ed1 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5f794dw2wh9|1a6acb9, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5f794dw2wh9|2bb74, numHelperThreads -> 3 ]
10:32:00,108  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:32:00,216  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:32:00,218 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@16499c
10:32:00,218 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@16499c
10:32:00,218  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@17cc8df
10:32:00,451 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@2cc550
10:32:00,614  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:32:00,896  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:32:00,968 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:32:00,971 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:32:00,975 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:32:00,975 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:32:00,981 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:32:00,981 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:32:00,983 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:32:00,985 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:32:00,985 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:32:00,986 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:32:00,986 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:32:00,989 ERROR ErrorCounter:60 - line 1:41: unexpected token: values
10:32:00,990 ERROR ErrorCounter:55 - line 1:41: unexpected token: values
line 1:41: unexpected token: values
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom(HqlBaseParser.java:1078)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:731)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:323)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.insertStatement(HqlBaseParser.java:355)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:192)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:279)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:298)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:236)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1825)
	at com.mtsmda.hibernate.RunMainHQL.insertHQL(RunMainHQL.java:61)
	at com.mtsmda.hibernate.RunMainHQL.main(RunMainHQL.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
10:36:33,613  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:36:33,615  INFO Environment:213 - HHH000206: hibernate.properties not found
10:36:33,616  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:36:33,639  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:36:33,785  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:36:33,804 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e8184f
10:36:33,804 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e8184f
10:36:33,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e8184f
10:36:33,805 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@963f38
10:36:33,806 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@845f64
10:36:33,807 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@13c29f0
10:36:33,808 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1290b6f
10:36:33,808 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1290b6f
10:36:33,808 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1290b6f
10:36:33,809 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1d379d2
10:36:33,809 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1d379d2
10:36:33,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d379d2
10:36:33,810 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c08a64
10:36:33,811 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c08a64
10:36:33,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c08a64
10:36:33,812 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1279472
10:36:33,812 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1279472
10:36:33,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1279472
10:36:33,813 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e7872e
10:36:33,813 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e7872e
10:36:33,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e7872e
10:36:33,815 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c2ffca
10:36:33,815 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1c2ffca
10:36:33,815 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c2ffca
10:36:33,816 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@110609a
10:36:33,820 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@110609a
10:36:33,820 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@110609a
10:36:33,822 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@55dedb
10:36:33,822 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@55dedb
10:36:33,823 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e4344
10:36:33,823 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e4344
10:36:33,824 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7918b0
10:36:33,824 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7918b0
10:36:33,825 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1856c2c
10:36:33,826 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a57633
10:36:33,827 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1110caf
10:36:33,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1110caf
10:36:33,829 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1f63402
10:36:33,830 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f63402
10:36:33,831 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1d91a7a
10:36:33,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d91a7a
10:36:33,833 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c81850
10:36:33,833 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c81850
10:36:33,833 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c81850
10:36:33,834 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7263d0
10:36:33,835 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1e05ddd
10:36:33,835 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e05ddd
10:36:33,835 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e05ddd
10:36:33,836 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@8adb01
10:36:33,837 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@dc504d
10:36:33,837 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@dc504d
10:36:33,837 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@e74a94
10:36:33,837 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@e74a94
10:36:33,838 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@774652
10:36:33,838 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@774652
10:36:33,839 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6fd685
10:36:33,839 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6fd685
10:36:33,840 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a0a884
10:36:33,840 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a0a884
10:36:33,841 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18add5e
10:36:33,842 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@b62081
10:36:33,842 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@b62081
10:36:33,842 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@b62081
10:36:33,843 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@108c175
10:36:33,843 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@108c175
10:36:33,843 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@108c175
10:36:33,844 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@54a835
10:36:33,845 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@200e2d
10:36:33,845 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@200e2d
10:36:33,845 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@200e2d
10:36:33,846 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1815364
10:36:33,846 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1815364
10:36:33,846 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1815364
10:36:33,847 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@9a1621
10:36:33,848 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1c33ccd
10:36:33,851 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1ad437e
10:36:33,851 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ad437e
10:36:33,852 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@10cc4c1
10:36:33,857 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1dbb35
10:36:33,857 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1dbb35
10:36:33,860 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b2f32
10:36:33,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b2f32
10:36:33,860 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10675c3
10:36:33,861 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d2a14b
10:36:33,863 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1697a64
10:36:33,865 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@cbc403
10:36:33,866 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@cbc403
10:36:33,866 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1defa49
10:36:33,866 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@261c14
10:36:33,866 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@121beab
10:36:33,867 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@36b7cc
10:36:33,867 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c2a1c7
10:36:33,867 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e15fbe
10:36:33,867 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cdd309
10:36:33,867 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@133fb54
10:36:33,886  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:36:33,887  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:36:33,887  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:36:33,905  INFO MLog:92 - MLog clients using log4j logging.
10:36:34,032  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:36:34,062  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:36:34,077  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@640b292 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@b3a87f9 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v5l2q1wn6ja3|141b16b, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@1aba08be [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5l2q1wn6ja3|515bb7, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5l2q1wn6ja3|1700941, numHelperThreads -> 3 ]
10:36:34,184  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:36:34,294  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:36:34,296 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d2fd7
10:36:34,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2d2fd7
10:36:34,296  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@a0a884
10:36:34,524 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@85e6b1
10:36:34,689  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:36:34,994  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:36:35,071 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:36:35,074 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:36:35,079 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:36:35,079 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:36:35,085 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:36:35,086 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:36:35,087 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:36:35,090 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:36:35,090 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:36:35,091 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:36:35,091 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:36:35,117 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:36:35,136 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:36:35,136 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:36:35,136 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:36:35,137 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:36:35,137 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [3]
10:36:35,137 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
10:36:35,137 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
10:36:35,137 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:36:35,137 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:36:35,138 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:36:35,138 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#3]
10:36:35,138 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#3]
10:36:35,141 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [3]
10:38:24,621  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:38:24,624  INFO Environment:213 - HHH000206: hibernate.properties not found
10:38:24,625  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:38:24,649  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:38:24,795  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:38:24,810 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@ec0f07
10:38:24,811 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@ec0f07
10:38:24,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ec0f07
10:38:24,811 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cfbba2
10:38:24,813 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@192bb81
10:38:24,813 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@81205b
10:38:24,814 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@542721
10:38:24,814 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@542721
10:38:24,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@542721
10:38:24,815 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@862402
10:38:24,815 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@862402
10:38:24,816 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@862402
10:38:24,816 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@e1f2b6
10:38:24,817 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@e1f2b6
10:38:24,817 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e1f2b6
10:38:24,818 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@17f3921
10:38:24,818 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@17f3921
10:38:24,818 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17f3921
10:38:24,819 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@c3b6d2
10:38:24,819 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@c3b6d2
10:38:24,819 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c3b6d2
10:38:24,820 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@c60f03
10:38:24,820 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@c60f03
10:38:24,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c60f03
10:38:24,825 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1ec4d42
10:38:24,825 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1ec4d42
10:38:24,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ec4d42
10:38:24,826 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc5a2
10:38:24,826 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc5a2
10:38:24,827 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0fbe7
10:38:24,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0fbe7
10:38:24,828 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@118618d
10:38:24,828 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@118618d
10:38:24,829 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@168c350
10:38:24,830 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@211e40
10:38:24,831 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@182ac61
10:38:24,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@182ac61
10:38:24,833 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6faeb8
10:38:24,833 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6faeb8
10:38:24,834 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1f91f44
10:38:24,835 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1f91f44
10:38:24,836 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@8a3223
10:38:24,836 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@8a3223
10:38:24,837 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@8a3223
10:38:24,838 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f7fcd0
10:38:24,839 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@ff8399
10:38:24,839 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ff8399
10:38:24,839 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ff8399
10:38:24,840 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1597115
10:38:24,841 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1cfdf55
10:38:24,841 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1cfdf55
10:38:24,842 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4fcb33
10:38:24,842 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4fcb33
10:38:24,843 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@dfa7ca
10:38:24,843 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@dfa7ca
10:38:24,844 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1dc0bc7
10:38:24,844 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dc0bc7
10:38:24,845 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@88249c
10:38:24,846 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@88249c
10:38:24,846 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57b1ed
10:38:24,847 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@60db08
10:38:24,847 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@60db08
10:38:24,848 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@60db08
10:38:24,849 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30df0
10:38:24,849 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30df0
10:38:24,849 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30df0
10:38:24,850 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@ad6372
10:38:24,850 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@17ddc70
10:38:24,851 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@17ddc70
10:38:24,851 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@17ddc70
10:38:24,852 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52dd99
10:38:24,852 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52dd99
10:38:24,852 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52dd99
10:38:24,853 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@c9f768
10:38:24,853 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@f54792
10:38:24,857 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@367eeb
10:38:24,857 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@367eeb
10:38:24,858 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a663a4
10:38:24,862 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@19dfa2f
10:38:24,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@19dfa2f
10:38:24,865 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@9415ea
10:38:24,865 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@9415ea
10:38:24,865 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@88a346
10:38:24,866 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@da7c3
10:38:24,868 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@11c55b
10:38:24,870 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1288b76
10:38:24,870 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1288b76
10:38:24,870 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@261c14
10:38:24,870 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@121beab
10:38:24,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36b7cc
10:38:24,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c2a1c7
10:38:24,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e15fbe
10:38:24,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@cdd309
10:38:24,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@133fb54
10:38:24,872 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ff173
10:38:24,891  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:38:24,891  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:38:24,891  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:38:24,908  INFO MLog:92 - MLog clients using log4j logging.
10:38:25,039  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:38:25,074  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:38:25,090  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@5e0b338f [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@76835402 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v5ngdh14omgz6|549d4, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@b6ec070c [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5ngdh14omgz6|143bd5c, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5ngdh14omgz6|1e2efb, numHelperThreads -> 3 ]
10:38:25,195  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:38:25,314  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:38:25,316 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1679660
10:38:25,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1679660
10:38:25,317  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@88249c
10:38:25,554 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@127e9e9
10:38:25,716  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:38:26,008  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:38:26,078 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:38:26,081 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:38:26,085 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:38:26,085 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:38:26,091 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:38:26,091 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:38:26,092 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:38:26,095 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:38:26,095 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:38:26,096 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:38:26,096 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:38:26,107 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:38:26,110 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:38:26,111 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:38:26,111 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:38:26,111 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:38:26,111 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [3]
10:38:26,111 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
10:38:26,111 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
10:38:26,112 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [4]
10:38:26,112 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
10:38:26,112 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
10:38:26,112 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:38:26,112 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:38:26,112 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:38:26,115 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#3]
10:38:26,115 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#3]
10:38:26,116 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [3]
10:38:26,116 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#4]
10:38:26,116 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#4]
10:38:26,117 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [4]
10:38:26,120 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:38:26,153 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:38:26,184 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:38:26,185 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:39:30,441  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:39:30,444  INFO Environment:213 - HHH000206: hibernate.properties not found
10:39:30,445  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:39:30,468  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:39:30,607  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:39:30,622 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1ceb7ea
10:39:30,622 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1ceb7ea
10:39:30,623 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ceb7ea
10:39:30,623 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@27b534
10:39:30,624 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@543f11
10:39:30,624 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1737117
10:39:30,625 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@d52852
10:39:30,626 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@d52852
10:39:30,626 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d52852
10:39:30,626 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@a60ffc
10:39:30,627 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@a60ffc
10:39:30,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a60ffc
10:39:30,628 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5ba5d
10:39:30,628 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5ba5d
10:39:30,628 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ba5d
10:39:30,629 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@17fbbd6
10:39:30,629 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@17fbbd6
10:39:30,629 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17fbbd6
10:39:30,630 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@117a8df
10:39:30,630 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@117a8df
10:39:30,630 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@117a8df
10:39:30,632 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@103c1a5
10:39:30,632 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@103c1a5
10:39:30,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@103c1a5
10:39:30,635 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@c43a7a
10:39:30,636 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@c43a7a
10:39:30,636 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c43a7a
10:39:30,637 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e82a70
10:39:30,637 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e82a70
10:39:30,638 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4a19e2
10:39:30,638 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4a19e2
10:39:30,639 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1ac8e4a
10:39:30,639 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1ac8e4a
10:39:30,640 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@eedabc
10:39:30,641 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@491a97
10:39:30,642 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@31613
10:39:30,642 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31613
10:39:30,643 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@37f1db
10:39:30,644 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@37f1db
10:39:30,645 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@73c718
10:39:30,645 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@73c718
10:39:30,646 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@e1bafc
10:39:30,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@e1bafc
10:39:30,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@e1bafc
10:39:30,647 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f6fa3f
10:39:30,649 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@118d011
10:39:30,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@118d011
10:39:30,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@118d011
10:39:30,649 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10f30f5
10:39:30,650 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4f7590
10:39:30,650 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4f7590
10:39:30,651 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@a590d1
10:39:30,651 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a590d1
10:39:30,651 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e426
10:39:30,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e426
10:39:30,652 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1895cb9
10:39:30,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1895cb9
10:39:30,653 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ba1f1
10:39:30,653 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ba1f1
10:39:30,654 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16265c3
10:39:30,655 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@cc1164
10:39:30,655 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@cc1164
10:39:30,655 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@cc1164
10:39:30,656 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@882c7f
10:39:30,656 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@882c7f
10:39:30,656 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@882c7f
10:39:30,656 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@15bf497
10:39:30,657 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@135151
10:39:30,658 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@135151
10:39:30,658 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@135151
10:39:30,659 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52a793
10:39:30,659 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52a793
10:39:30,659 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52a793
10:39:30,660 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@191d67b
10:39:30,660 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@12de59c
10:39:30,664 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1c69e6a
10:39:30,665 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1c69e6a
10:39:30,665 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d7c10a
10:39:30,670 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@9454b3
10:39:30,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9454b3
10:39:30,672 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2af58b
10:39:30,673 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2af58b
10:39:30,673 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@97618e
10:39:30,674 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@811a37
10:39:30,676 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@b3eff7
10:39:30,679 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@dc1165
10:39:30,679 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc1165
10:39:30,679 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fd84ec
10:39:30,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d006c
10:39:30,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cf0c3
10:39:30,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@10b4509
10:39:30,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54b365
10:39:30,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@da1b43
10:39:30,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b982e2
10:39:30,681 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c696
10:39:30,700  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:39:30,700  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:39:30,700  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:39:30,717  INFO MLog:92 - MLog clients using log4j logging.
10:39:30,863  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:39:30,888  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:39:30,902  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@55bc1822 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@175ded6d [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v5ov5n1gpztw1|f61d6a, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@cb267fbf [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5ov5n1gpztw1|148530a, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5ov5n1gpztw1|9a8a2, numHelperThreads -> 3 ]
10:39:31,002  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:39:31,113  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:39:31,115 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c19925
10:39:31,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1c19925
10:39:31,115  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ba1f1
10:39:31,354 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@7053a9
10:39:31,519  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:39:31,795  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:39:31,866 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:39:31,869 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:39:31,873 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:39:31,873 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:39:31,879 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:39:31,879 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:39:31,881 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:39:31,883 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:39:31,884 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:39:31,884 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:39:31,885 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:39:31,896 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:39:31,900 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:39:31,900 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:39:31,900 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:39:31,900 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:39:31,901 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [5]
10:39:31,901 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
10:39:31,901 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
10:39:31,901 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:39:31,901 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:39:31,901 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:39:31,902 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#5]
10:39:31,902 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#5]
10:39:31,904 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [5]
10:39:31,908 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:39:31,908 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:39:31,911 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:39:31,911 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:46:02,442  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:46:02,444  INFO Environment:213 - HHH000206: hibernate.properties not found
10:46:02,445  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:46:02,468  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:46:02,604  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:46:02,621 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7907a0
10:46:02,621 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7907a0
10:46:02,622 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7907a0
10:46:02,622 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e0a1b9
10:46:02,623 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@81205b
10:46:02,624 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a325f0
10:46:02,625 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@17fd835
10:46:02,625 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@17fd835
10:46:02,625 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17fd835
10:46:02,626 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@a0eb51
10:46:02,626 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@a0eb51
10:46:02,626 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a0eb51
10:46:02,627 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1cf00a1
10:46:02,627 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1cf00a1
10:46:02,628 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1cf00a1
10:46:02,629 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@56e496
10:46:02,629 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@56e496
10:46:02,629 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56e496
10:46:02,631 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1fe8b7c
10:46:02,631 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1fe8b7c
10:46:02,631 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1fe8b7c
10:46:02,632 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a70128
10:46:02,633 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a70128
10:46:02,633 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a70128
10:46:02,634 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1fee685
10:46:02,637 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1fee685
10:46:02,637 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1fee685
10:46:02,639 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c433cb
10:46:02,639 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c433cb
10:46:02,639 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@827b51
10:46:02,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@827b51
10:46:02,640 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5cc7a5
10:46:02,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5cc7a5
10:46:02,641 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d21ef
10:46:02,642 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4c98f1
10:46:02,643 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1ec0b9d
10:46:02,643 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ec0b9d
10:46:02,644 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@19847e5
10:46:02,644 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@19847e5
10:46:02,645 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@189eebb
10:46:02,645 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@189eebb
10:46:02,647 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cdff0
10:46:02,647 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cdff0
10:46:02,647 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cdff0
10:46:02,648 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9b69e6
10:46:02,650 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@302723
10:46:02,650 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@302723
10:46:02,650 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@302723
10:46:02,651 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9838d9
10:46:02,653 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@11d5b59
10:46:02,653 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11d5b59
10:46:02,654 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@13541d7
10:46:02,654 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13541d7
10:46:02,655 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4ded8e
10:46:02,655 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4ded8e
10:46:02,656 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@136dc05
10:46:02,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@136dc05
10:46:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a300d2
10:46:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a300d2
10:46:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4c18ac
10:46:02,658 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1193540
10:46:02,658 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1193540
10:46:02,659 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1193540
10:46:02,659 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a5c9c6
10:46:02,659 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a5c9c6
10:46:02,660 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a5c9c6
10:46:02,660 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1da6054
10:46:02,661 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1513d1e
10:46:02,661 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1513d1e
10:46:02,661 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1513d1e
10:46:02,662 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@403263
10:46:02,662 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@403263
10:46:02,662 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@403263
10:46:02,663 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@10508f3
10:46:02,663 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1179714
10:46:02,667 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1496198
10:46:02,667 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1496198
10:46:02,667 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@116ee8c
10:46:02,672 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@812848
10:46:02,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@812848
10:46:02,674 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@11d737b
10:46:02,674 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@11d737b
10:46:02,675 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@da7c3
10:46:02,675 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c02dac
10:46:02,678 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1b9ec6c
10:46:02,681 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@177cbf7
10:46:02,681 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177cbf7
10:46:02,682 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c2a1c7
10:46:02,682 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e15fbe
10:46:02,682 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@cdd309
10:46:02,682 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@133fb54
10:46:02,682 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ff173
10:46:02,683 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@189ac1e
10:46:02,683 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d36bf2
10:46:02,683 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c26232
10:46:02,703  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:46:02,703  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:46:02,703  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:46:02,717  INFO MLog:92 - MLog clients using log4j logging.
10:46:02,891  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:46:02,917  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:46:02,931  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@3f95342e [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@951b638f [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v5x9mdhx4rph|2a0fad, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@416273a3 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5x9mdhx4rph|cc077d, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v5x9mdhx4rph|1c4fd92, numHelperThreads -> 3 ]
10:46:03,029  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:46:03,135  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:46:03,137 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11d491f
10:46:03,138 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11d491f
10:46:03,138  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@a300d2
10:46:03,375 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14ba039
10:46:03,539  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:46:03,841  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:46:03,915 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:46:03,918 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:46:03,921 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:46:03,921 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:46:03,927 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:46:03,927 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:46:03,930 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:46:03,933 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:46:03,933 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:46:03,934 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:46:03,934 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:46:03,946 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:46:03,951 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:46:03,952 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:46:03,952 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:46:03,952 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:46:03,952 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [6]
10:46:03,952 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
10:46:03,953 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
10:46:03,953 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:46:03,953 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:46:03,954 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:46:03,954 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#6]
10:46:03,954 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#6]
10:46:03,956 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [6]
10:46:03,960 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:46:03,961 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:46:03,964 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:46:03,964 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:58:05,367  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:58:05,383  INFO Environment:213 - HHH000206: hibernate.properties not found
10:58:05,384  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:58:05,407  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:58:05,609  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:58:05,626 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c7efa0
10:58:05,626 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c7efa0
10:58:05,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c7efa0
10:58:05,627 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@9a5c34
10:58:05,628 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a0898b
10:58:05,629 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e3a17
10:58:05,630 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@f2da0b
10:58:05,630 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@f2da0b
10:58:05,630 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@f2da0b
10:58:05,631 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1a75631
10:58:05,631 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1a75631
10:58:05,631 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1a75631
10:58:05,632 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@698adc
10:58:05,632 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@698adc
10:58:05,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@698adc
10:58:05,633 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@44f3a2
10:58:05,633 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@44f3a2
10:58:05,633 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44f3a2
10:58:05,635 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e640d2
10:58:05,635 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e640d2
10:58:05,635 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e640d2
10:58:05,636 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@195eb41
10:58:05,636 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@195eb41
10:58:05,636 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@195eb41
10:58:05,638 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@18ae41
10:58:05,638 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@18ae41
10:58:05,638 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@18ae41
10:58:05,639 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16bbdd7
10:58:05,642 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16bbdd7
10:58:05,644 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1156285
10:58:05,645 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1156285
10:58:05,645 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@19c7798
10:58:05,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@19c7798
10:58:05,646 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10e1fe9
10:58:05,647 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e54834
10:58:05,648 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1798075
10:58:05,648 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1798075
10:58:05,649 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@bb39fe
10:58:05,650 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@bb39fe
10:58:05,651 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1b050fd
10:58:05,651 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b050fd
10:58:05,652 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2a1389
10:58:05,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2a1389
10:58:05,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2a1389
10:58:05,654 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@bba6f9
10:58:05,654 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@e2ecb3
10:58:05,655 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e2ecb3
10:58:05,655 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e2ecb3
10:58:05,655 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15df92e
10:58:05,656 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@ae97a8
10:58:05,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ae97a8
10:58:05,657 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e78a4
10:58:05,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e78a4
10:58:05,658 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@10e4ee9
10:58:05,658 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10e4ee9
10:58:05,659 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@152701c
10:58:05,659 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@152701c
10:58:05,660 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@ed5a99
10:58:05,660 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@ed5a99
10:58:05,661 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1770114
10:58:05,662 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@144d4bb
10:58:05,662 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@144d4bb
10:58:05,662 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@144d4bb
10:58:05,663 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6edcf4
10:58:05,663 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6edcf4
10:58:05,663 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6edcf4
10:58:05,664 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1f95884
10:58:05,664 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1f566bc
10:58:05,664 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f566bc
10:58:05,665 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1f566bc
10:58:05,665 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bbddb2
10:58:05,665 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bbddb2
10:58:05,666 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bbddb2
10:58:05,666 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@faad28
10:58:05,667 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@41a0b4
10:58:05,670 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1931a2d
10:58:05,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1931a2d
10:58:05,671 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@344eb8
10:58:05,674 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1683756
10:58:05,674 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1683756
10:58:05,677 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1fbf047
10:58:05,677 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1fbf047
10:58:05,677 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@136157d
10:58:05,681 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bc7c8e
10:58:05,682 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@199c277
10:58:05,685 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@afc935
10:58:05,686 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@afc935
10:58:05,686 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f317c
10:58:05,686 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@95306c
10:58:05,686 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e0a7c8
10:58:05,686 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1918f6c
10:58:05,686 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@976434
10:58:05,687 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2fbdd3
10:58:05,687 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15a95c3
10:58:05,687 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1492cfe
10:58:05,705  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:58:05,705  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:58:05,706  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:58:05,723  INFO MLog:92 - MLog clients using log4j logging.
10:58:05,912  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:58:05,955  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:58:05,973  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@b5525648 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@49704f11 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6cri11f8aby0|176a8f, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@f278fffc [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6cri11f8aby0|d62dd4, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6cri11f8aby0|adf14, numHelperThreads -> 3 ]
10:58:06,088  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:58:06,206  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:58:06,208 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7e366c
10:58:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7e366c
10:58:06,211  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@ed5a99
10:58:06,556 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@f80021
10:58:06,956  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:58:07,292  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:58:07,380 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:58:07,384 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:58:07,388 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:58:07,388 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:58:07,396 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:58:07,396 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:58:07,398 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:58:07,401 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:58:07,401 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:58:07,402 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:58:07,404 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:58:07,422 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:58:07,604 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:58:07,604 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:58:07,605 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:58:07,605 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:58:07,605 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [7]
10:58:07,606 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
10:58:07,606 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
10:58:07,607 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:58:07,607 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:58:07,607 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:58:07,609 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#7]
10:58:07,609 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#7]
10:58:07,610 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [7]
10:58:07,618 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:58:07,620 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:58:07,657 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:58:07,658 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:58:07,668 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
10:58:07,669 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
10:59:25,128  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:59:25,131  INFO Environment:213 - HHH000206: hibernate.properties not found
10:59:25,133  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:59:25,164  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
10:59:25,355  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:59:25,377 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@13574a
10:59:25,377 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@13574a
10:59:25,378 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13574a
10:59:25,379 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@13bfe1
10:59:25,380 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a8346
10:59:25,381 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@919dca
10:59:25,382 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@10d4fcf
10:59:25,382 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@10d4fcf
10:59:25,383 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10d4fcf
10:59:25,384 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@157a747
10:59:25,384 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@157a747
10:59:25,384 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@157a747
10:59:25,385 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1966b77
10:59:25,386 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1966b77
10:59:25,386 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1966b77
10:59:25,387 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@269225
10:59:25,387 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@269225
10:59:25,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@269225
10:59:25,388 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@14a1209
10:59:25,388 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@14a1209
10:59:25,389 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14a1209
10:59:25,390 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19ced28
10:59:25,390 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19ced28
10:59:25,391 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19ced28
10:59:25,392 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f04078
10:59:25,392 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f04078
10:59:25,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f04078
10:59:25,394 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e65c6
10:59:25,398 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e65c6
10:59:25,401 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1fb43a2
10:59:25,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1fb43a2
10:59:25,402 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@122ad40
10:59:25,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@122ad40
10:59:25,404 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@139b2de
10:59:25,405 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b646d8
10:59:25,406 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5532ca
10:59:25,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5532ca
10:59:25,407 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@154326f
10:59:25,408 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@154326f
10:59:25,409 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@16730bb
10:59:25,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16730bb
10:59:25,410 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5dfb7e
10:59:25,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5dfb7e
10:59:25,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5dfb7e
10:59:25,412 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2848ae
10:59:25,413 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1419ddc
10:59:25,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1419ddc
10:59:25,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1419ddc
10:59:25,414 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d0d91c
10:59:25,415 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@147016c
10:59:25,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@147016c
10:59:25,416 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2c5b4e
10:59:25,416 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2c5b4e
10:59:25,417 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c53bf
10:59:25,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c53bf
10:59:25,418 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@e8174f
10:59:25,418 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e8174f
10:59:25,419 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@134da62
10:59:25,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@134da62
10:59:25,420 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f50665
10:59:25,421 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1f13e99
10:59:25,421 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1f13e99
10:59:25,421 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1f13e99
10:59:25,422 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@958d49
10:59:25,422 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@958d49
10:59:25,422 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@958d49
10:59:25,423 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3021c6
10:59:25,424 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@99fe0a
10:59:25,424 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@99fe0a
10:59:25,424 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@99fe0a
10:59:25,425 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@36483
10:59:25,425 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@36483
10:59:25,425 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@36483
10:59:25,426 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@974bf0
10:59:25,427 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1dad6a3
10:59:25,430 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@54382
10:59:25,430 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@54382
10:59:25,431 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e839f2
10:59:25,435 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@62b154
10:59:25,435 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62b154
10:59:25,439 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@a4eddb
10:59:25,439 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a4eddb
10:59:25,439 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5df7c6
10:59:25,443 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9fc304
10:59:25,444 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@18ec2d7
10:59:25,449 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1ab0c3a
10:59:25,449 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1ab0c3a
10:59:25,450 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18b628
10:59:25,450 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a9dbac
10:59:25,450 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9e31f0
10:59:25,450 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@275a2e
10:59:25,450 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15f0269
10:59:25,450 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@133c68a
10:59:25,450 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@57a236
10:59:25,451 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e54ad
10:59:25,470  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
10:59:25,471  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
10:59:25,471  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
10:59:25,487  INFO MLog:92 - MLog clients using log4j logging.
10:59:25,628  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
10:59:25,670  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
10:59:25,688  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@ce72e438 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@82a71fca [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6eh1q1os22fb|1d408f7, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@2616da3e [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6eh1q1os22fb|aa1162, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6eh1q1os22fb|16e0eb9, numHelperThreads -> 3 ]
10:59:25,812  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
10:59:25,936  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
10:59:25,938 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@be1b0d
10:59:25,941 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@be1b0d
10:59:25,941  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@134da62
10:59:26,236 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@17cb451
10:59:26,451  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
10:59:26,788  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:59:26,877 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
10:59:26,880 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:59:26,885 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
10:59:26,885 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
10:59:26,892 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
10:59:26,892 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
10:59:26,894 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:59:26,897 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
10:59:26,897 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
10:59:26,898 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
10:59:26,901 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
10:59:26,919 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
10:59:27,489 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:59:27,489 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:59:27,490 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
10:59:27,490 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
10:59:27,490 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [8]
10:59:27,491 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
10:59:27,491 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
10:59:27,491 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
10:59:27,492 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
10:59:27,492 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
10:59:27,494 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#8]
10:59:27,494 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#8]
10:59:27,495 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [8]
10:59:27,506 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:59:27,508 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
10:59:27,695 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
10:59:27,695 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
10:59:27,699 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
10:59:27,699 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
10:59:27,699 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
10:59:27,699 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
10:59:27,700 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
10:59:27,700 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:00:10,246  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:00:10,248  INFO Environment:213 - HHH000206: hibernate.properties not found
11:00:10,249  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:00:10,273  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:00:10,416  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:00:10,434 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c97dd
11:00:10,435 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@8c97dd
11:00:10,435 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8c97dd
11:00:10,436 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e99a3d
11:00:10,437 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f8a786
11:00:10,438 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5dc52
11:00:10,439 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4a43d2
11:00:10,439 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4a43d2
11:00:10,440 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a43d2
11:00:10,441 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@638da0
11:00:10,441 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@638da0
11:00:10,441 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@638da0
11:00:10,442 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@e6c33
11:00:10,443 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@e6c33
11:00:10,443 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e6c33
11:00:10,444 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@104f5f0
11:00:10,444 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@104f5f0
11:00:10,444 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@104f5f0
11:00:10,446 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@50079b
11:00:10,446 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@50079b
11:00:10,446 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@50079b
11:00:10,448 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19e3b3c
11:00:10,448 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19e3b3c
11:00:10,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19e3b3c
11:00:10,452 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@db5866
11:00:10,453 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@db5866
11:00:10,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@db5866
11:00:10,454 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@13a5041
11:00:10,455 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@13a5041
11:00:10,456 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e9635a
11:00:10,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e9635a
11:00:10,457 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1b1bbe8
11:00:10,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b1bbe8
11:00:10,458 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15a8fff
11:00:10,459 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@170c116
11:00:10,460 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@9e76f3
11:00:10,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@9e76f3
11:00:10,462 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@e76514
11:00:10,462 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@e76514
11:00:10,464 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@114021e
11:00:10,464 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@114021e
11:00:10,465 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1bb1dd2
11:00:10,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1bb1dd2
11:00:10,466 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1bb1dd2
11:00:10,467 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a7422e
11:00:10,468 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@43bd7
11:00:10,468 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43bd7
11:00:10,468 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43bd7
11:00:10,469 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@574b52
11:00:10,469 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@af7fab
11:00:10,470 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@af7fab
11:00:10,470 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1c68dc6
11:00:10,471 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c68dc6
11:00:10,472 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@102a59e
11:00:10,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@102a59e
11:00:10,473 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@126a4a2
11:00:10,473 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@126a4a2
11:00:10,474 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24df87
11:00:10,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24df87
11:00:10,475 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@106ee1f
11:00:10,476 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@189f302
11:00:10,476 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@189f302
11:00:10,476 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@189f302
11:00:10,477 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2166f2
11:00:10,477 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2166f2
11:00:10,477 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2166f2
11:00:10,478 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@171042
11:00:10,479 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3fb999
11:00:10,479 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3fb999
11:00:10,479 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3fb999
11:00:10,479 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77b686
11:00:10,480 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77b686
11:00:10,480 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77b686
11:00:10,480 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1982a25
11:00:10,481 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3d8738
11:00:10,484 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@ca7038
11:00:10,484 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ca7038
11:00:10,485 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c2921d
11:00:10,490 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@44f3aa
11:00:10,490 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44f3aa
11:00:10,493 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5ea8f9
11:00:10,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ea8f9
11:00:10,494 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@85e019
11:00:10,495 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e01b65
11:00:10,497 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@14f6357
11:00:10,500 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1fa254f
11:00:10,500 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1fa254f
11:00:10,501 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@121beab
11:00:10,501 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36b7cc
11:00:10,501 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c2a1c7
11:00:10,501 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e15fbe
11:00:10,502 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@cdd309
11:00:10,502 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@133fb54
11:00:10,502 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3ff173
11:00:10,502 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@189ac1e
11:00:10,526  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:00:10,527  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:00:10,527  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:00:10,544  INFO MLog:92 - MLog clients using log4j logging.
11:00:10,678  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:00:10,706  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:00:10,720  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@99987afb [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@a1b96f16 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6fft7ffrd6e|549d4, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@ed07ad20 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6fft7ffrd6e|143bd5c, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6fft7ffrd6e|1e2efb, numHelperThreads -> 3 ]
11:00:10,824  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:00:10,939  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:00:10,941 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c19925
11:00:10,941 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1c19925
11:00:10,942  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@24df87
11:00:11,178 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@16df6f5
11:00:11,334  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:00:11,609  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:00:11,679 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:00:11,682 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:00:11,686 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:00:11,686 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:00:11,691 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:00:11,691 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:00:11,693 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:00:11,696 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:00:11,696 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:00:11,696 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:00:11,697 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:00:11,708 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:00:12,059 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:00:12,059 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:00:12,060 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:00:12,060 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:00:12,060 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [9]
11:00:12,060 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:00:12,060 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:00:12,060 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:00:12,061 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:00:12,061 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:00:12,062 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#9]
11:00:12,062 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#9]
11:00:12,062 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [9]
11:00:12,069 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:00:12,070 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:00:12,285 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:00:12,285 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:00:12,288 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:00:12,289 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:00:12,289 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:00:12,289 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:00:12,289 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:00:12,290 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:01:31,516  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:01:31,519  INFO Environment:213 - HHH000206: hibernate.properties not found
11:01:31,521  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:01:31,546  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:01:31,705  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:01:31,723 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@14532ea
11:01:31,723 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@14532ea
11:01:31,723 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14532ea
11:01:31,724 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b6bab
11:01:31,725 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a60b26
11:01:31,726 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7cf85
11:01:31,727 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1c94115
11:01:31,727 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1c94115
11:01:31,728 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c94115
11:01:31,728 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@10bbe47
11:01:31,729 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@10bbe47
11:01:31,729 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@10bbe47
11:01:31,730 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@11bb153
11:01:31,730 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@11bb153
11:01:31,731 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11bb153
11:01:31,731 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@d7244e
11:01:31,732 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@d7244e
11:01:31,732 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d7244e
11:01:31,733 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1a9cd34
11:01:31,733 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1a9cd34
11:01:31,733 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9cd34
11:01:31,734 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1882760
11:01:31,734 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1882760
11:01:31,735 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1882760
11:01:31,736 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@585a96
11:01:31,736 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@585a96
11:01:31,736 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@585a96
11:01:31,738 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7caf9b
11:01:31,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7caf9b
11:01:31,743 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f7366d
11:01:31,744 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f7366d
11:01:31,744 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@16fda88
11:01:31,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@16fda88
11:01:31,745 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5132f5
11:01:31,746 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e76262
11:01:31,747 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1e0bb86
11:01:31,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e0bb86
11:01:31,749 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1dc8869
11:01:31,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1dc8869
11:01:31,750 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@954f6e
11:01:31,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@954f6e
11:01:31,751 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@68bfe0
11:01:31,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68bfe0
11:01:31,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68bfe0
11:01:31,753 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1cf5a20
11:01:31,754 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@220d76
11:01:31,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@220d76
11:01:31,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@220d76
11:01:31,754 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@925975
11:01:31,756 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@66a968
11:01:31,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66a968
11:01:31,757 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@827e06
11:01:31,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@827e06
11:01:31,758 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ec877
11:01:31,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ec877
11:01:31,759 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@13e4e54
11:01:31,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13e4e54
11:01:31,760 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@d71c51
11:01:31,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@d71c51
11:01:31,761 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e7c8cc
11:01:31,762 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1ea813d
11:01:31,762 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ea813d
11:01:31,762 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1ea813d
11:01:31,763 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c1c85
11:01:31,763 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c1c85
11:01:31,763 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c1c85
11:01:31,764 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1227563
11:01:31,765 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2bd522
11:01:31,765 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2bd522
11:01:31,766 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2bd522
11:01:31,767 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d7dfda
11:01:31,767 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d7dfda
11:01:31,767 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d7dfda
11:01:31,768 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@17e21b3
11:01:31,768 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@9d8da8
11:01:31,772 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@9b8f86
11:01:31,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@9b8f86
11:01:31,772 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c228c
11:01:31,775 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1090350
11:01:31,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1090350
11:01:31,778 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@15bd19e
11:01:31,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15bd19e
11:01:31,778 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bcc22a
11:01:31,781 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@95648d
11:01:31,782 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ae24e3
11:01:31,788 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@c2c549
11:01:31,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c2c549
11:01:31,788 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a9dbac
11:01:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9e31f0
11:01:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@275a2e
11:01:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15f0269
11:01:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@133c68a
11:01:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57a236
11:01:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e54ad
11:01:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@128f0f9
11:01:31,810  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:01:31,810  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:01:31,810  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:01:31,827  INFO MLog:92 - MLog clients using log4j logging.
11:01:31,963  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:01:32,002  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:01:32,021  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@b4dcf7dd [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@3b39e01c [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6h6jc5oywmo|176a8f, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@e4429107 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6h6jc5oywmo|d62dd4, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6h6jc5oywmo|adf14, numHelperThreads -> 3 ]
11:01:32,143  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:01:32,257  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:01:32,259 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13d874e
11:01:32,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@13d874e
11:01:32,262  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@d71c51
11:01:32,555 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@f80021
11:01:32,773  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:01:33,127  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:01:33,220 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:01:33,223 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:01:33,228 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:01:33,228 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:01:33,235 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:01:33,235 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:01:33,238 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:01:33,241 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:01:33,241 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:01:33,242 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:01:33,245 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:01:33,263 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:01:33,266 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:01:33,267 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:01:33,267 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:01:33,267 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:01:33,267 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [10]
11:01:33,267 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:01:33,267 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:01:33,267 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:01:33,268 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:01:33,268 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:01:33,268 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#10]
11:01:33,268 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#10]
11:01:33,269 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [10]
11:01:33,272 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:01:33,273 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:01:33,275 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:01:33,275 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:01:33,278 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:01:33,278 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:01:33,278 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:01:33,278 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:01:33,278 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:01:33,278 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:03:11,301  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:03:11,304  INFO Environment:213 - HHH000206: hibernate.properties not found
11:03:11,305  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:03:11,327  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:03:11,463  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:03:11,480 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@fe3e4f
11:03:11,481 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@fe3e4f
11:03:11,481 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fe3e4f
11:03:11,482 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b4b99
11:03:11,483 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@13c29f0
11:03:11,484 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@18f0b11
11:03:11,485 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1e9c826
11:03:11,485 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1e9c826
11:03:11,485 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e9c826
11:03:11,486 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6c96b
11:03:11,486 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6c96b
11:03:11,486 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6c96b
11:03:11,487 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1ba1c2b
11:03:11,487 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1ba1c2b
11:03:11,487 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ba1c2b
11:03:11,488 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1d51756
11:03:11,488 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1d51756
11:03:11,489 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d51756
11:03:11,490 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@ef59ba
11:03:11,490 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@ef59ba
11:03:11,490 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ef59ba
11:03:11,491 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@89e2f0
11:03:11,491 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@89e2f0
11:03:11,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@89e2f0
11:03:11,495 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@889b3c
11:03:11,495 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@889b3c
11:03:11,495 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@889b3c
11:03:11,497 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d6f833
11:03:11,497 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d6f833
11:03:11,498 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4fdf56
11:03:11,499 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4fdf56
11:03:11,500 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5e3f6d
11:03:11,500 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5e3f6d
11:03:11,500 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e7c7fb
11:03:11,501 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ae04c0
11:03:11,502 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1b60123
11:03:11,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b60123
11:03:11,504 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1ade71c
11:03:11,504 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ade71c
11:03:11,505 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1331b
11:03:11,505 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1331b
11:03:11,506 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1346e64
11:03:11,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1346e64
11:03:11,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1346e64
11:03:11,508 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18a1cf1
11:03:11,509 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@52fda6
11:03:11,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52fda6
11:03:11,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52fda6
11:03:11,509 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9f3578
11:03:11,510 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@b28200
11:03:11,510 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@b28200
11:03:11,511 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@193c227
11:03:11,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@193c227
11:03:11,512 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1cd6a5b
11:03:11,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1cd6a5b
11:03:11,512 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@125445a
11:03:11,513 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@125445a
11:03:11,514 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@b2c566
11:03:11,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@b2c566
11:03:11,514 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f04c4
11:03:11,515 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1d83ac7
11:03:11,516 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d83ac7
11:03:11,516 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1d83ac7
11:03:11,517 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dec6da
11:03:11,517 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dec6da
11:03:11,517 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dec6da
11:03:11,517 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@355d79
11:03:11,518 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@484dfd
11:03:11,518 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@484dfd
11:03:11,518 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@484dfd
11:03:11,520 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2dec81
11:03:11,520 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2dec81
11:03:11,520 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2dec81
11:03:11,520 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e18e8c
11:03:11,521 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@17343c7
11:03:11,524 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@ea288f
11:03:11,525 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ea288f
11:03:11,525 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e78eb9
11:03:11,530 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@bb138d
11:03:11,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@bb138d
11:03:11,533 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@e7df90
11:03:11,533 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e7df90
11:03:11,534 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d2a14b
11:03:11,534 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1db6c8c
11:03:11,536 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1b807ac
11:03:11,539 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@180f214
11:03:11,539 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@180f214
11:03:11,539 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@36b7cc
11:03:11,539 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c2a1c7
11:03:11,539 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e15fbe
11:03:11,539 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@cdd309
11:03:11,540 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@133fb54
11:03:11,540 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ff173
11:03:11,540 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@189ac1e
11:03:11,540 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d36bf2
11:03:11,560  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:03:11,560  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:03:11,560  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:03:11,574  INFO MLog:92 - MLog clients using log4j logging.
11:03:11,689  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:03:11,716  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:03:11,730  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@fff5c5ce [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@fa9ee6d7 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6jbhpoj84su|56cd93, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@aa7f2799 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6jbhpoj84su|d67afd, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6jbhpoj84su|22cebe, numHelperThreads -> 3 ]
11:03:11,826  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:03:11,935  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:03:11,937 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@ffca64
11:03:11,937 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@ffca64
11:03:11,937  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@b2c566
11:03:12,162 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@65f2d7
11:03:12,322  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:03:12,612  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:03:12,681 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:03:12,684 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:03:12,687 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:03:12,687 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:03:12,693 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:03:12,693 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:03:12,695 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:03:12,698 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:03:12,698 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:03:12,698 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:03:12,699 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:03:12,710 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:03:12,713 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:03:12,714 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:03:12,714 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:03:12,714 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:03:12,714 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [11]
11:03:12,714 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:03:12,714 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:03:12,714 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:03:12,715 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:03:12,715 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:03:12,715 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#11]
11:03:12,716 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#11]
11:03:12,718 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [11]
11:03:12,721 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:03:12,722 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:03:12,725 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:03:12,725 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:03:12,726 ERROR ErrorCounter:60 - line 1:24: unexpected token: Author
11:03:12,727 ERROR ErrorCounter:55 - line 1:24: unexpected token: Author
line 1:24: unexpected token: Author
	at org.hibernate.hql.internal.antlr.HqlBaseParser.aliasedExpression(HqlBaseParser.java:2416)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectedPropertiesList(HqlBaseParser.java:1415)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectClause(HqlBaseParser.java:1325)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom(HqlBaseParser.java:1062)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:731)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:323)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:186)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:279)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:298)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:236)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1825)
	at com.mtsmda.hibernate.RunMainHQL.selectHQL(RunMainHQL.java:45)
	at com.mtsmda.hibernate.RunMainHQL.main(RunMainHQL.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
11:03:23,288  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:03:23,290  INFO Environment:213 - HHH000206: hibernate.properties not found
11:03:23,291  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:03:23,312  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:03:23,449  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:03:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1accfb7
11:03:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1accfb7
11:03:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1accfb7
11:03:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e029ed
11:03:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e565d7
11:03:23,467 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1f8dfe
11:03:23,469 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1533bdf
11:03:23,469 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1533bdf
11:03:23,469 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1533bdf
11:03:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1919c1f
11:03:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1919c1f
11:03:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1919c1f
11:03:23,471 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18f7705
11:03:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18f7705
11:03:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18f7705
11:03:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@ef152b
11:03:23,473 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@ef152b
11:03:23,473 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ef152b
11:03:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1ebfc42
11:03:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1ebfc42
11:03:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1ebfc42
11:03:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9220cb
11:03:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9220cb
11:03:23,476 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9220cb
11:03:23,476 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@87a765
11:03:23,479 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@87a765
11:03:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@87a765
11:03:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1411104
11:03:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1411104
11:03:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1cfb151
11:03:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1cfb151
11:03:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1963c7b
11:03:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1963c7b
11:03:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1fa6e43
11:03:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ba0f74
11:03:23,485 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4a8e3
11:03:23,485 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a8e3
11:03:23,486 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1feb69
11:03:23,486 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1feb69
11:03:23,487 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@c2599f
11:03:23,488 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c2599f
11:03:23,488 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@13b8493
11:03:23,489 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13b8493
11:03:23,489 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13b8493
11:03:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@722fba
11:03:23,492 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@8adb01
11:03:23,492 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@8adb01
11:03:23,492 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@8adb01
11:03:23,492 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f90fe
11:03:23,493 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1750ae1
11:03:23,493 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1750ae1
11:03:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1afced9
11:03:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1afced9
11:03:23,495 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@101b9cf
11:03:23,495 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@101b9cf
11:03:23,495 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1aa994e
11:03:23,495 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1aa994e
11:03:23,496 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@bdd3e7
11:03:23,497 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@bdd3e7
11:03:23,497 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c202e5
11:03:23,498 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@fb1100
11:03:23,498 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fb1100
11:03:23,498 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@fb1100
11:03:23,499 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d13bb0
11:03:23,499 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d13bb0
11:03:23,499 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d13bb0
11:03:23,500 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@18bc78e
11:03:23,501 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@f834c8
11:03:23,501 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@f834c8
11:03:23,501 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@f834c8
11:03:23,502 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1023661
11:03:23,502 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1023661
11:03:23,502 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1023661
11:03:23,503 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@155927f
11:03:23,504 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@66cceb
11:03:23,507 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@10cc4c1
11:03:23,507 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10cc4c1
11:03:23,507 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b3b20
11:03:23,512 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@b556
11:03:23,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b556
11:03:23,514 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@10675c3
11:03:23,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10675c3
11:03:23,514 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b642c
11:03:23,515 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b36168
11:03:23,518 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@ffd40a
11:03:23,520 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@9504f2
11:03:23,520 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9504f2
11:03:23,521 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cf0c3
11:03:23,521 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10b4509
11:03:23,521 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54b365
11:03:23,521 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@da1b43
11:03:23,521 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b982e2
11:03:23,521 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c696
11:03:23,522 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@183093c
11:03:23,522 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@154173f
11:03:23,541  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:03:23,541  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:03:23,541  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:03:23,555  INFO MLog:92 - MLog clients using log4j logging.
11:03:23,672  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:03:23,701  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:03:23,714  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@d55a0087 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@d0032190 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6jkqh17bqvsj|56cd93, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@7fe36252 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6jkqh17bqvsj|d67afd, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6jkqh17bqvsj|22cebe, numHelperThreads -> 3 ]
11:03:23,813  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:03:23,921  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:03:23,944 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@ffca64
11:03:23,944 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@ffca64
11:03:23,945  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@bdd3e7
11:03:24,172 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@65f2d7
11:03:24,334  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:03:24,611  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:03:24,680 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:03:24,683 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:03:24,687 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:03:24,687 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:03:24,693 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:03:24,693 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:03:24,694 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:03:24,697 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:03:24,698 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:03:24,698 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:03:24,698 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:03:24,709 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:03:24,733 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:03:24,734 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:03:24,734 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:03:24,734 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:03:24,734 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [12]
11:03:24,734 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:03:24,734 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:03:24,735 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:03:24,735 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:03:24,735 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:03:24,735 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#12]
11:03:24,736 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#12]
11:03:24,736 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [12]
11:03:24,741 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:03:24,742 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:03:24,745 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:03:24,745 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:03:24,747 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:03:24,748 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:03:24,748 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:05:09,473  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:05:09,476  INFO Environment:213 - HHH000206: hibernate.properties not found
11:05:09,477  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:05:09,501  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:05:09,649  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:05:09,665 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@fe3e4f
11:05:09,666 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@fe3e4f
11:05:09,666 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fe3e4f
11:05:09,667 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b4b99
11:05:09,668 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@13c29f0
11:05:09,668 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@18f0b11
11:05:09,669 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1e9c826
11:05:09,669 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1e9c826
11:05:09,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e9c826
11:05:09,670 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6c96b
11:05:09,671 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6c96b
11:05:09,671 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6c96b
11:05:09,672 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1ba1c2b
11:05:09,672 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1ba1c2b
11:05:09,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ba1c2b
11:05:09,673 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1d51756
11:05:09,673 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1d51756
11:05:09,673 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d51756
11:05:09,675 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@ef59ba
11:05:09,675 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@ef59ba
11:05:09,675 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ef59ba
11:05:09,676 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@89e2f0
11:05:09,676 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@89e2f0
11:05:09,676 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@89e2f0
11:05:09,677 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@889b3c
11:05:09,681 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@889b3c
11:05:09,681 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@889b3c
11:05:09,682 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d6f833
11:05:09,682 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d6f833
11:05:09,683 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4fdf56
11:05:09,683 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4fdf56
11:05:09,684 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5e3f6d
11:05:09,684 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5e3f6d
11:05:09,685 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e7c7fb
11:05:09,686 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ae04c0
11:05:09,686 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1b60123
11:05:09,687 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b60123
11:05:09,688 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1ade71c
11:05:09,688 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ade71c
11:05:09,690 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1331b
11:05:09,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1331b
11:05:09,691 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1346e64
11:05:09,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1346e64
11:05:09,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1346e64
11:05:09,692 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18a1cf1
11:05:09,693 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@52fda6
11:05:09,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52fda6
11:05:09,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52fda6
11:05:09,694 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9f3578
11:05:09,695 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@b28200
11:05:09,695 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@b28200
11:05:09,696 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@193c227
11:05:09,696 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@193c227
11:05:09,696 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1cd6a5b
11:05:09,697 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1cd6a5b
11:05:09,697 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@125445a
11:05:09,697 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@125445a
11:05:09,698 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@b2c566
11:05:09,698 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@b2c566
11:05:09,699 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f04c4
11:05:09,699 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1d83ac7
11:05:09,700 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d83ac7
11:05:09,700 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1d83ac7
11:05:09,700 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dec6da
11:05:09,701 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dec6da
11:05:09,701 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dec6da
11:05:09,701 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@355d79
11:05:09,702 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@484dfd
11:05:09,702 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@484dfd
11:05:09,702 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@484dfd
11:05:09,703 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2dec81
11:05:09,703 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2dec81
11:05:09,703 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2dec81
11:05:09,704 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e18e8c
11:05:09,704 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@17343c7
11:05:09,708 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@ea288f
11:05:09,708 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ea288f
11:05:09,709 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e78eb9
11:05:09,713 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@bb138d
11:05:09,713 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@bb138d
11:05:09,716 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@e7df90
11:05:09,716 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e7df90
11:05:09,716 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d2a14b
11:05:09,717 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1db6c8c
11:05:09,719 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1b807ac
11:05:09,722 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@180f214
11:05:09,722 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@180f214
11:05:09,722 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@36b7cc
11:05:09,722 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c2a1c7
11:05:09,723 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e15fbe
11:05:09,723 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@cdd309
11:05:09,723 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@133fb54
11:05:09,723 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ff173
11:05:09,723 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@189ac1e
11:05:09,723 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d36bf2
11:05:09,741  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:05:09,741  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:05:09,741  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:05:09,757  INFO MLog:92 - MLog clients using log4j logging.
11:05:09,881  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:05:09,908  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:05:09,921  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a64967ba [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@a0f288c3 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6luom1e1l5b6|56cd93, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@50d2c985 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6luom1e1l5b6|d67afd, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6luom1e1l5b6|22cebe, numHelperThreads -> 3 ]
11:05:10,030  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:05:10,141  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:05:10,143 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@140a531
11:05:10,143 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@140a531
11:05:10,144  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@b2c566
11:05:10,371 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@12a2a7d
11:05:10,535  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:05:10,818  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:05:10,888 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:05:10,890 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:05:10,894 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:05:10,895 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:05:10,901 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:05:10,901 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:05:10,903 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:05:10,905 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:05:10,906 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:05:10,906 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:05:10,907 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:05:10,918 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:05:10,922 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:05:10,922 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:05:10,923 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:05:10,923 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:05:10,923 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [13]
11:05:10,923 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:05:10,923 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:05:10,923 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:05:10,924 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:05:10,924 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:05:10,924 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#13]
11:05:10,924 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#13]
11:05:10,925 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [13]
11:05:10,930 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:05:10,931 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:05:10,933 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:05:10,934 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:05:10,935 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:05:10,936 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:05:10,936 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:05:10,937 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:05:10,938 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:05:10,938 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:05:10,938 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:05:10,938 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:05:10,938 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:05:34,701  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:05:34,703  INFO Environment:213 - HHH000206: hibernate.properties not found
11:05:34,704  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:05:34,725  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:05:34,870  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:05:34,888 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1accfb7
11:05:34,888 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1accfb7
11:05:34,888 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1accfb7
11:05:34,889 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e029ed
11:05:34,890 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e565d7
11:05:34,891 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1f8dfe
11:05:34,892 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1533bdf
11:05:34,892 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1533bdf
11:05:34,892 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1533bdf
11:05:34,893 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1919c1f
11:05:34,893 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1919c1f
11:05:34,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1919c1f
11:05:34,894 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18f7705
11:05:34,894 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18f7705
11:05:34,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18f7705
11:05:34,896 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@ef152b
11:05:34,896 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@ef152b
11:05:34,896 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ef152b
11:05:34,898 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1ebfc42
11:05:34,898 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1ebfc42
11:05:34,898 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1ebfc42
11:05:34,900 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9220cb
11:05:34,900 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9220cb
11:05:34,900 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9220cb
11:05:34,904 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1fee685
11:05:34,904 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1fee685
11:05:34,904 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1fee685
11:05:34,905 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1411104
11:05:34,906 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1411104
11:05:34,907 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1cfb151
11:05:34,907 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1cfb151
11:05:34,908 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1963c7b
11:05:34,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1963c7b
11:05:34,909 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1fa6e43
11:05:34,910 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ba0f74
11:05:34,910 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4a8e3
11:05:34,911 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a8e3
11:05:34,912 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1feb69
11:05:34,912 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1feb69
11:05:34,913 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@c2599f
11:05:34,913 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c2599f
11:05:34,914 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@13b8493
11:05:34,915 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13b8493
11:05:34,915 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13b8493
11:05:34,916 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@722fba
11:05:34,917 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@8adb01
11:05:34,917 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@8adb01
11:05:34,917 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@8adb01
11:05:34,918 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f90fe
11:05:34,918 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1750ae1
11:05:34,918 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1750ae1
11:05:34,919 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1afced9
11:05:34,919 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1afced9
11:05:34,920 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@101b9cf
11:05:34,920 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@101b9cf
11:05:34,920 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1aa994e
11:05:34,921 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1aa994e
11:05:34,922 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@bdd3e7
11:05:34,922 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@bdd3e7
11:05:34,923 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c202e5
11:05:34,924 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@fb1100
11:05:34,924 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fb1100
11:05:34,924 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@fb1100
11:05:34,925 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d13bb0
11:05:34,925 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d13bb0
11:05:34,925 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d13bb0
11:05:34,926 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@18bc78e
11:05:34,927 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@f834c8
11:05:34,927 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@f834c8
11:05:34,927 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@f834c8
11:05:34,928 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1023661
11:05:34,928 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1023661
11:05:34,929 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1023661
11:05:34,929 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@155927f
11:05:34,930 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@66cceb
11:05:34,933 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@10cc4c1
11:05:34,933 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10cc4c1
11:05:34,933 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b3b20
11:05:34,937 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@b556
11:05:34,937 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b556
11:05:34,940 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@10675c3
11:05:34,940 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10675c3
11:05:34,940 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b642c
11:05:34,940 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b36168
11:05:34,942 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@ffd40a
11:05:34,945 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@9504f2
11:05:34,945 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9504f2
11:05:34,946 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cf0c3
11:05:34,946 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10b4509
11:05:34,946 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54b365
11:05:34,946 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@da1b43
11:05:34,946 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b982e2
11:05:34,946 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c696
11:05:34,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@183093c
11:05:34,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@154173f
11:05:34,964  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:05:34,964  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:05:34,964  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:05:34,982  INFO MLog:92 - MLog clients using log4j logging.
11:05:35,114  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:05:35,145  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:05:35,159  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@42484b0d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@1ec47b2e [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6me5c5eutb2|d290f2, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@43d8ecec [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6me5c5eutb2|124acca, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6me5c5eutb2|1332124, numHelperThreads -> 3 ]
11:05:35,263  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:05:35,367  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:05:35,369 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11d491f
11:05:35,369 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11d491f
11:05:35,369  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@bdd3e7
11:05:35,611 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14ba039
11:05:35,769  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:05:36,053  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:05:36,127 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:05:36,130 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:05:36,133 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:05:36,134 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:05:36,140 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:05:36,140 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:05:36,141 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:05:36,144 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:05:36,144 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:05:36,145 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:05:36,145 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:05:36,157 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:05:36,161 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:05:36,161 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:05:36,162 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:05:36,162 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:05:36,162 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [14]
11:05:36,162 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:05:36,162 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:05:36,162 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:05:36,162 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:05:36,163 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:05:36,163 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#14]
11:05:36,163 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#14]
11:05:36,165 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [14]
11:05:36,169 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:05:36,170 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:05:36,172 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:05:36,172 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:05:36,174 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:05:36,174 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:05:36,174 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:05:36,176 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:05:36,177 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:05:36,177 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:05:36,177 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:05:36,177 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:05:36,177 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:09:04,004  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:09:04,006  INFO Environment:213 - HHH000206: hibernate.properties not found
11:09:04,007  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:09:04,032  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:09:04,180  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:09:04,196 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@12467d8
11:09:04,196 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@12467d8
11:09:04,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12467d8
11:09:04,197 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56553e
11:09:04,198 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18f0b11
11:09:04,198 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1aaecbe
11:09:04,200 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@24655f
11:09:04,200 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@24655f
11:09:04,200 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@24655f
11:09:04,201 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@973f09
11:09:04,201 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@973f09
11:09:04,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@973f09
11:09:04,202 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@129ed01
11:09:04,202 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@129ed01
11:09:04,202 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@129ed01
11:09:04,203 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@f4b681
11:09:04,204 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@f4b681
11:09:04,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f4b681
11:09:04,205 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7ce531
11:09:04,205 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7ce531
11:09:04,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ce531
11:09:04,206 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@ebd302
11:09:04,206 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@ebd302
11:09:04,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ebd302
11:09:04,208 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1145a0c
11:09:04,208 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1145a0c
11:09:04,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1145a0c
11:09:04,212 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103ddfd
11:09:04,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103ddfd
11:09:04,214 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f987a
11:09:04,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f987a
11:09:04,215 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6bef53
11:09:04,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6bef53
11:09:04,216 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f33511
11:09:04,217 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a2efd3
11:09:04,218 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@16b58fa
11:09:04,218 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16b58fa
11:09:04,220 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@81b50e
11:09:04,220 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@81b50e
11:09:04,221 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2b5ba8
11:09:04,221 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b5ba8
11:09:04,222 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d5ee81
11:09:04,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d5ee81
11:09:04,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d5ee81
11:09:04,223 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cb216f
11:09:04,224 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1121eb9
11:09:04,224 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1121eb9
11:09:04,225 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1121eb9
11:09:04,225 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@829a91
11:09:04,226 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@26f7af
11:09:04,226 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26f7af
11:09:04,226 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@12df081
11:09:04,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12df081
11:09:04,227 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@169eec2
11:09:04,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@169eec2
11:09:04,228 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@c26e4a
11:09:04,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c26e4a
11:09:04,229 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16265c3
11:09:04,229 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16265c3
11:09:04,230 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15792a0
11:09:04,230 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@111ebb3
11:09:04,231 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@111ebb3
11:09:04,231 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@111ebb3
11:09:04,231 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@320e7a
11:09:04,232 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@320e7a
11:09:04,232 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@320e7a
11:09:04,233 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@ede434
11:09:04,233 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@f6ab36
11:09:04,234 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@f6ab36
11:09:04,234 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@f6ab36
11:09:04,235 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@19b6363
11:09:04,235 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@19b6363
11:09:04,235 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@19b6363
11:09:04,236 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@cce1b1
11:09:04,236 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@e13409
11:09:04,240 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@106bb21
11:09:04,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@106bb21
11:09:04,240 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@19dd00d
11:09:04,245 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@e8605a
11:09:04,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e8605a
11:09:04,248 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@13b8dae
11:09:04,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13b8dae
11:09:04,248 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1db6c8c
11:09:04,249 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1bca7ab
11:09:04,251 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@eac619
11:09:04,253 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1defa49
11:09:04,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1defa49
11:09:04,254 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@cdd309
11:09:04,254 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@133fb54
11:09:04,254 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3ff173
11:09:04,254 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@189ac1e
11:09:04,254 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d36bf2
11:09:04,254 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c26232
11:09:04,254 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@dda65
11:09:04,255 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b0c124
11:09:04,276  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:09:04,276  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:09:04,276  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:09:04,290  INFO MLog:92 - MLog clients using log4j logging.
11:09:04,411  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:09:04,443  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:09:04,461  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@340ffc2 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@fe1e38ee [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6qvnf1wrqj8l|942210, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@16673fa7 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6qvnf1wrqj8l|c325b, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6qvnf1wrqj8l|62ef09, numHelperThreads -> 3 ]
11:09:04,563  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:09:04,669  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:09:04,672 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@ea0a39
11:09:04,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@ea0a39
11:09:04,672  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@16265c3
11:09:04,907 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@59657a
11:09:05,075  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:09:05,361  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:09:05,429 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:09:05,434 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:09:05,438 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:09:05,438 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:09:05,444 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:09:05,444 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:09:05,446 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,448 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:09:05,449 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:09:05,449 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:09:05,449 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:09:05,461 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,488 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:09:05,488 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:09:05,489 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:09:05,489 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:09:05,489 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [15]
11:09:05,489 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:09:05,489 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:09:05,489 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:09:05,489 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:09:05,490 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:09:05,490 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#15]
11:09:05,490 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#15]
11:09:05,491 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [15]
11:09:05,495 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:09:05,496 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:09:05,524 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:09:05,525 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:09:05,527 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:09:05,527 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:09:05,527 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:09:05,529 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:09:05,529 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:09:05,529 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:09:05,529 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:09:05,530 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:09:05,530 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:09:05,533 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:09:05,534 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:09:05,534 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:09:05,534 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:09:05,534 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:09:05,534 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:09:05,534 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:09:05,535 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:09:05,535 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:09:05,535 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:09:05,535 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:09:05,535 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:09:05,537 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [3]
11:09:05,558 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:09:05,559 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,560 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,560 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,560 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,561 TRACE BasicExtractor:61 - extracted value ([book_des2_2_2_] : [VARCHAR]) - [Java 8 description]
11:09:05,561 TRACE BasicExtractor:61 - extracted value ([book_nam3_2_2_] : [VARCHAR]) - [Java 8]
11:09:05,561 TRACE BasicExtractor:61 - extracted value ([created_1_1_1_] : [VARCHAR]) - [Ivanov]
11:09:05,561 TRACE BasicExtractor:61 - extracted value ([created_2_1_1_] : [DATE]) - [2015-12-21]
11:09:05,561 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,562 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,562 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,562 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Book.bookAuthors#1]
11:09:05,563  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,563 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,564 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,564 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,564 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,564 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,564 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,567 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,567  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,567 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,568 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,568 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,569 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,569 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,569 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,570 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,570  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,570 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,572 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,572 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,573 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,573 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,573 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,574 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,574  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,575 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,576 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,576 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,577 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,578 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,578 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,579 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,579  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,579 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,580 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,581 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,581 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,581 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,582 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,582 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,583  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,583 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,584 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,586 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,586 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,587 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,587 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,587 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,588  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,588 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,589 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,590 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,590 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,591 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,592 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,593 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,594  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,595 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,596 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,596 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,597 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,597 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,598 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,598 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,600  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,601 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,602 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,602 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,603 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,603 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,604 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,604 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,605  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,607 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,608 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,609 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,610 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,611 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,611 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,612 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,613  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,614 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,616 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,616 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,617 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,618 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,618 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,619 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,621  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,621 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,623 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,623 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,624 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,625 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,625 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,627 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,628  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,628 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,630 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,630 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,631 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,632 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,634 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,634 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,635  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,636 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,638 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,638 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,640 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,641 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,642 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,643 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,645  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,645 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,648 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,649 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,649 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,650 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,651 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,652 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,654  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,655 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,657 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,658 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,659 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,661 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,662 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,663 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,664  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,665 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,667 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,669 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,669 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,670 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,671 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,673 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,674  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,675 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,677 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,678 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,680 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,681 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,682 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,683 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,684  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,686 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,688 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,689 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,690 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,691 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,692 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,693 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,694  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,695 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,698 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,699 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,701 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,702 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,704 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,705 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,706  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,707 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,708 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,710 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,711 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,712 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,713 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,715 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,716  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,717 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,718 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,720 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,721 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,722 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,723 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,725 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,726  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,727 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,729 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,731 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,732 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,733 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,734 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,736 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,737  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,738 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,740 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,741 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,742 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,743 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,746 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,747 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,749  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,750 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,753 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,755 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,756 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,758 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,759 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,760 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,761  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,763 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,765 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,767 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,769 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,770 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,772 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,773 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,775  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,776 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,778 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,780 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,781 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,782 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,785 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,787 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,788  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,790 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,793 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,794 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,795 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,797 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,799 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,800 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,803  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,804 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,806 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,808 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,810 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,811 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,813 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,814 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,816  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,818 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,820 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,821 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,823 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,825 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,826 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,828 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,830  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,831 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,834 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,836 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,837 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,839 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,841 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,842 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,845  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,846 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,848 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,850 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,852 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,854 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,856 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,858 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,859  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,862 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,864 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,866 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,868 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,869 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,872 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,873 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,875  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,877 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,879 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,881 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,883 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,885 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,887 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,888 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,890  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,892 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,894 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,897 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,898 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,900 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,902 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,903 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,905  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,907 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,909 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,912 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,913 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,915 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,917 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,919 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,921  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,923 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,925 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,928 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,929 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,932 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,933 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,935 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,937  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,939 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,942 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,944 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,946 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,948 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,950 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,952 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,954  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,956 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,958 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,960 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,962 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,964 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,966 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,968 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,970  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,972 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,974 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,976 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,978 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,980 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,982 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,984 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:05,987  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:05,989 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:05,992 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:05,993 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:05,996 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:05,998 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:05,999 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,002 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,004  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,006 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,009 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,010 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,013 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,014 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,017 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,019 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,022  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,023 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,026 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,028 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,030 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,033 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,034 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,036 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,039  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,040 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,043 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,045 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,048 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,049 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,051 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,053 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,055  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,058 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,060 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,062 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,065 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,067 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,069 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,071 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,074  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,076 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,079 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,082 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,084 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,087 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,088 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,090 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,093  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,095 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,099 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,100 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,103 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,105 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,106 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,109 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,111  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,114 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,116 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,117 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,120 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,122 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,124 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,126 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,129  INFO GooGooStatementCache:459 - Multiply prepared statement! select bookauthor0_.author_id as author_i3_1_0_, bookauthor0_.book_id as book_id4_1_0_, bookauthor0_.author_id as author_i3_1_1_, bookauthor0_.book_id as book_id4_1_1_, bookauthor0_.created_by as created_1_1_1_, bookauthor0_.created_date as created_2_1_1_, book1_.book_id as book_id1_2_2_, book1_.book_desc as book_des2_2_2_, book1_.book_name as book_nam3_2_2_ from book_author bookauthor0_ left outer join books book1_ on bookauthor0_.book_id=book1_.book_id where bookauthor0_.author_id=?
11:09:06,130 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,133 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,135 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,137 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,139 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,141 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,142 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,145 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,147 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,150 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,152 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,154 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,156 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,157 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,160 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,162 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,164 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,166 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,167 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,170 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,172 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,175 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,177 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,180 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,182 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,184 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,186 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,188 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,196 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,199 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,200 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,203 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,205 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,207 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,209 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,212 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,214 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,216 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,218 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,220 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,223 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,224 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,226 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,229 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,231 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,234 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,235 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,238 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,240 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,241 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,245 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,246 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,249 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,251 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,252 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,255 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,257 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,260 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,262 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,264 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,266 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,268 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,271 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,273 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,276 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,278 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,279 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,282 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,283 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,286 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,288 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,291 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,292 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,294 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,297 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,299 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,301 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,303 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,305 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,308 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,309 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,312 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,313 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,316 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,318 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,320 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,322 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,324 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,326 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,328 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,330 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,333 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,335 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,337 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,339 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,341 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,343 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,345 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,347 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,349 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,352 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,354 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,356 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,358 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,360 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,363 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,365 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,368 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,369 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,371 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,373 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,375 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,378 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,380 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,382 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,384 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,386 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,389 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,391 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,393 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,395 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,397 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,399 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,401 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,403 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,405 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,406 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,410 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,411 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,414 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,416 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,418 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,420 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,422 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,425 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,427 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,429 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,431 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,432 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,435 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,437 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,440 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,442 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,444 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,446 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,447 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,450 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,452 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,455 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,456 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,458 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,461 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,462 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,465 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,467 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,470 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,472 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,473 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,476 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,478 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,480 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,482 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,485 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,487 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,489 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,492 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,493 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,496 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,498 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,500 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,502 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,504 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,507 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,508 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,510 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,513 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,515 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,518 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,519 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,522 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,523 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,525 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,528 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,530 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,532 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,534 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,536 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,538 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,540 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,543 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,545 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,548 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,549 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,551 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,554 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,555 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,558 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,560 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,562 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,565 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,566 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,569 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,570 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,573 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,575 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,577 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,579 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,581 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,584 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,585 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,587 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,590 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,592 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,594 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,596 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,599 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,601 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,603 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,606 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,607 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,610 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,612 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,614 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,616 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,618 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,622 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,623 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,626 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,628 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,630 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,632 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,634 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,637 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,639 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,641 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,643 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,645 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,648 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,650 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,653 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,654 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,656 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,659 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,660 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,663 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,664 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,667 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,670 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,671 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,674 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,675 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,678 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,680 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,682 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,685 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,686 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,689 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,691 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,693 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,696 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,698 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,701 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,703 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,706 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,708 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,710 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,713 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,715 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,718 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,720 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,722 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,725 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,727 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,730 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,732 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,735 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,736 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,738 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,741 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,743 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,745 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,748 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,750 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,752 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,754 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,757 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,759 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,762 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,764 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,766 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,769 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,771 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,773 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,775 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,777 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,780 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,781 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,784 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,786 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,789 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,790 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,792 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,796 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,797 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,800 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,802 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,804 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,807 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,808 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,812 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,814 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,817 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,819 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,820 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,823 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,825 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,829 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,830 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,832 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,835 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,836 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,839 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,841 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,845 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,846 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,848 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,851 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,853 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,856 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,858 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,861 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,864 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,866 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,868 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,870 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,873 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,875 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,877 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,880 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,882 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,885 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,887 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,888 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,892 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,894 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,897 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,899 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,903 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,905 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,907 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,910 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,912 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,915 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,916 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,918 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,921 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,922 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,925 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,927 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,930 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,931 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,933 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,935 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,937 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,940 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,942 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,943 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,946 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,948 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,950 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,952 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,955 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,957 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,958 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,961 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,963 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,965 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,967 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,968 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,972 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,973 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,976 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,977 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,980 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,981 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,983 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:06,986 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:06,988 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:06,991 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:06,992 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,994 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:06,996 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:06,998 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,002 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,003 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,006 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,008 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,010 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,012 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,014 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,017 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,019 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,020 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,023 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,025 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,028 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,030 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,033 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,038 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,041 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,051 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,053 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,056 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,058 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,060 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,062 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,064 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,068 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,071 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,075 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,077 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,080 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,083 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,084 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,087 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,089 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,091 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,094 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,096 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,099 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,101 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,104 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,105 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,107 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,111 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,113 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,116 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,118 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,120 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,122 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,124 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,127 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,129 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,132 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,133 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,135 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,138 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,140 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,143 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,145 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,146 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,149 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,151 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,154 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,156 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,159 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,161 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,162 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,165 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,167 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,169 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,171 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,173 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,176 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,178 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,180 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,182 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,185 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,186 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,188 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,191 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,193 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,196 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,198 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,199 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,202 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,204 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,207 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,209 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,212 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,213 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,215 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,219 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,221 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,224 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,226 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,227 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,230 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,232 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,235 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,238 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,242 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,243 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,245 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,248 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,250 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,253 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,255 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,257 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,260 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,261 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,264 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,266 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,268 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,270 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,272 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,275 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,277 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,279 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,281 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,282 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,285 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,288 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,290 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,292 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,295 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,296 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,298 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,301 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,303 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,306 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,308 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,309 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,312 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,314 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,317 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,319 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,321 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,323 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,324 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,328 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,329 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,332 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,334 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,336 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,339 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,340 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,343 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,345 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,348 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,350 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,352 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,355 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,357 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,360 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,361 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,363 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,366 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,368 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,371 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,372 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,375 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,377 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,378 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,381 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,383 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,386 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,387 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,389 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,392 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,394 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,397 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,399 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,401 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,403 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,405 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,407 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,409 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,413 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,415 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,416 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,419 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,421 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,423 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,425 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,428 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,430 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,432 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,434 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,436 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,439 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,441 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,443 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,446 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,447 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,450 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,452 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,455 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,457 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,460 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,463 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,465 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,467 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,469 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,471 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,474 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,476 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,479 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,481 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,484 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,485 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,487 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,490 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,492 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,495 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,497 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,499 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,501 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,503 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,506 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,508 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,511 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,513 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,515 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,518 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,519 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,522 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,524 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,526 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,529 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,531 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,534 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,535 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,538 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,540 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,542 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,545 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,546 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,549 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,550 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,552 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,556 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,557 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,561 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,562 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,565 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,566 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,568 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,571 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,573 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,576 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,578 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,579 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,582 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,584 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,587 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,589 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,592 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,594 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,596 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,599 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,600 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,604 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,605 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,607 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,610 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,611 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,614 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,616 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,620 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,622 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,623 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,626 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,628 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,630 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,632 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,634 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,637 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,639 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,642 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,644 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,647 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,650 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,652 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,655 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,657 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,660 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,662 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,664 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,667 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,670 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,673 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,675 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,678 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,680 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,682 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,686 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,688 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,691 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,693 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,695 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,698 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,699 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,702 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,704 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,707 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,709 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,711 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,713 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,715 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,718 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,720 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,722 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,725 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,726 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,729 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,732 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,735 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,737 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,738 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,741 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,743 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,746 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,747 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,749 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,753 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,754 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,757 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,759 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,762 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,763 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,766 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,769 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,771 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,774 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,775 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,777 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,780 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,782 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,785 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,787 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,790 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,792 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,793 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,796 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,798 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,801 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,803 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,804 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,807 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,809 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,812 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,814 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,817 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,819 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,821 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,824 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,826 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,829 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,830 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,833 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,835 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,837 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,840 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,842 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,844 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,846 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,849 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,852 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,853 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,856 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,858 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,860 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,863 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,865 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,868 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,870 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,873 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,875 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,876 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,880 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,882 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,885 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,887 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,889 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,892 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,895 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,899 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,903 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,907 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,909 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,912 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,915 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,918 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,922 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,925 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,928 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,931 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,933 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,937 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,939 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,943 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,946 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,949 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,953 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,955 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,958 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,961 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,963 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,968 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,970 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,974 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,976 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,980 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,982 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:07,984 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:07,989 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:07,991 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:07,995 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:07,997 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:07,999 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,002 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,005 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,010 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,012 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,016 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,017 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,019 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,022 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,023 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,028 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,030 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,032 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,035 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,037 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,040 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,042 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,046 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,047 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,049 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,052 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,054 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,057 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,059 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,062 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,065 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,067 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,070 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,072 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,075 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,077 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,080 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,084 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,086 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,089 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,091 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,092 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,096 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,099 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,103 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,105 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,108 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,111 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,112 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,115 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,118 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,121 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,123 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,125 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,128 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,130 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,133 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,136 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,139 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,141 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,142 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,145 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,147 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,150 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,153 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,155 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,158 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,159 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,162 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,164 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:08,167 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:08,170 TRACE BasicExtractor:61 - extracted value ([author_i3_1_1_] : [INTEGER]) - [1]
11:09:08,171 TRACE BasicExtractor:61 - extracted value ([book_id4_1_1_] : [INTEGER]) - [1]
11:09:08,174 TRACE BasicExtractor:61 - extracted value ([book_id1_2_2_] : [INTEGER]) - [1]
11:09:08,176 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,179 TRACE BasicExtractor:61 - extracted value ([author_i3_1_0_] : [INTEGER]) - [1]
11:09:08,180 TRACE BasicExtractor:61 - extracted value ([book_id4_1_0_] : [INTEGER]) - [1]
11:09:37,967  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:09:37,970  INFO Environment:213 - HHH000206: hibernate.properties not found
11:09:37,971  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:09:37,991  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:09:38,142  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:09:38,158 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@cb15bf
11:09:38,159 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@cb15bf
11:09:38,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@cb15bf
11:09:38,160 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8dc539
11:09:38,161 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5dc52
11:09:38,161 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@163f2fb
11:09:38,162 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1269273
11:09:38,162 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1269273
11:09:38,162 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1269273
11:09:38,163 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3a1eb3
11:09:38,163 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3a1eb3
11:09:38,164 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a1eb3
11:09:38,165 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1933923
11:09:38,165 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1933923
11:09:38,165 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1933923
11:09:38,166 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1492721
11:09:38,166 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1492721
11:09:38,166 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1492721
11:09:38,167 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c7a25d
11:09:38,168 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c7a25d
11:09:38,168 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7a25d
11:09:38,169 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1226445
11:09:38,169 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1226445
11:09:38,169 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1226445
11:09:38,170 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@366ea0
11:09:38,174 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@366ea0
11:09:38,175 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@366ea0
11:09:38,176 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20fa96
11:09:38,177 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20fa96
11:09:38,178 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1214a13
11:09:38,178 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1214a13
11:09:38,179 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@dddeac
11:09:38,179 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@dddeac
11:09:38,180 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c70722
11:09:38,181 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@fe1bc5
11:09:38,182 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@dd851d
11:09:38,182 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@dd851d
11:09:38,184 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1058579
11:09:38,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1058579
11:09:38,185 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7586b2
11:09:38,185 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7586b2
11:09:38,186 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b77801
11:09:38,186 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b77801
11:09:38,186 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b77801
11:09:38,187 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cd036c
11:09:38,188 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@10f30f5
11:09:38,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10f30f5
11:09:38,189 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10f30f5
11:09:38,189 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a2d5e
11:09:38,190 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1d21a9b
11:09:38,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d21a9b
11:09:38,190 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@83413f
11:09:38,191 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@83413f
11:09:38,191 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1f93efa
11:09:38,191 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1f93efa
11:09:38,192 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@14043f5
11:09:38,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@14043f5
11:09:38,193 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1cb7c74
11:09:38,193 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1cb7c74
11:09:38,194 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@118648b
11:09:38,194 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1ce5858
11:09:38,195 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ce5858
11:09:38,195 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1ce5858
11:09:38,195 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1182c93
11:09:38,196 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1182c93
11:09:38,196 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1182c93
11:09:38,197 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@210f7d
11:09:38,198 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@9fe17d
11:09:38,198 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@9fe17d
11:09:38,198 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@9fe17d
11:09:38,199 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4561a6
11:09:38,199 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4561a6
11:09:38,199 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4561a6
11:09:38,200 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@df7236
11:09:38,200 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@14b5526
11:09:38,203 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1d7c10a
11:09:38,203 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d7c10a
11:09:38,203 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c0c9c4
11:09:38,208 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@17e1dd2
11:09:38,208 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17e1dd2
11:09:38,211 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@97618e
11:09:38,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@97618e
11:09:38,212 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e01b65
11:09:38,212 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@182918f
11:09:38,214 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1e3cf1f
11:09:38,216 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1eb5a67
11:09:38,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1eb5a67
11:09:38,217 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e15fbe
11:09:38,217 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@cdd309
11:09:38,217 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@133fb54
11:09:38,217 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ff173
11:09:38,217 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@189ac1e
11:09:38,217 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d36bf2
11:09:38,217 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c26232
11:09:38,218 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@dda65
11:09:38,236  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:09:38,236  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:09:38,237  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:09:38,251  INFO MLog:92 - MLog clients using log4j logging.
11:09:38,372  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:09:38,400  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:09:38,416  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@ba19ba56 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@7ba388d [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6rlusoikh2o|16b302c, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@ed7ceb24 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6rlusoikh2o|ffaa35, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6rlusoikh2o|1e38d90, numHelperThreads -> 3 ]
11:09:38,521  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:09:38,628  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:09:38,630 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1abbcda
11:09:38,630 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1abbcda
11:09:38,630  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1cb7c74
11:09:38,875 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14ba039
11:09:39,036  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:09:39,325  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:09:39,397 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:09:39,400 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:09:39,404 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:09:39,404 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:09:39,409 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:09:39,410 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:09:39,411 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:39,414 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:09:39,414 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:09:39,415 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:09:39,415 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:09:39,427 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:09:39,431 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:09:39,432 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:09:39,432 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:09:39,432 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:09:39,432 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [16]
11:09:39,433 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:09:39,433 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:09:39,433 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:09:39,433 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:09:39,433 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:09:39,434 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#16]
11:09:39,434 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#16]
11:09:39,437 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [16]
11:09:39,441 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:09:39,442 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:09:39,444 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:09:39,444 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:09:39,446 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:09:39,446 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:09:39,447 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:09:39,448 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:09:39,449 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:09:39,449 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:09:39,449 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:09:39,449 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:09:39,449 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:09:39,453 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:09:39,453 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:09:39,453 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:09:39,453 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:09:39,454 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:09:39,454 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:09:39,454 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:09:39,454 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:09:39,454 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:09:39,454 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:09:39,455 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:09:39,455 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:09:59,749  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:09:59,751  INFO Environment:213 - HHH000206: hibernate.properties not found
11:09:59,752  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:09:59,775  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:09:59,916  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:09:59,932 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@100c385
11:09:59,932 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@100c385
11:09:59,932 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@100c385
11:09:59,933 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18f59e3
11:09:59,934 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c3b8a3
11:09:59,934 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e579f9
11:09:59,935 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@158d955
11:09:59,935 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@158d955
11:09:59,935 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@158d955
11:09:59,936 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1b5b562
11:09:59,936 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1b5b562
11:09:59,936 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b5b562
11:09:59,937 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@8c35f3
11:09:59,938 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@8c35f3
11:09:59,938 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8c35f3
11:09:59,938 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1a8209b
11:09:59,939 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1a8209b
11:09:59,939 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a8209b
11:09:59,940 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1748ba8
11:09:59,940 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1748ba8
11:09:59,940 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1748ba8
11:09:59,942 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@e50215
11:09:59,942 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@e50215
11:09:59,942 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e50215
11:09:59,946 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1145a0c
11:09:59,946 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1145a0c
11:09:59,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1145a0c
11:09:59,947 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@123a47c
11:09:59,948 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@123a47c
11:09:59,948 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@864ae7
11:09:59,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@864ae7
11:09:59,950 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@46128d
11:09:59,950 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@46128d
11:09:59,950 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a57633
11:09:59,951 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d12826
11:09:59,952 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@14e6393
11:09:59,952 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14e6393
11:09:59,953 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@17df584
11:09:59,954 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17df584
11:09:59,955 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1de3027
11:09:59,955 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1de3027
11:09:59,956 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1279d82
11:09:59,956 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1279d82
11:09:59,956 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1279d82
11:09:59,958 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19bb21f
11:09:59,958 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@574b52
11:09:59,959 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@574b52
11:09:59,959 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@574b52
11:09:59,959 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e8b404
11:09:59,960 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@d0f392
11:09:59,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d0f392
11:09:59,961 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@130be8c
11:09:59,961 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@130be8c
11:09:59,961 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@95b81a
11:09:59,961 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@95b81a
11:09:59,962 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d95bf
11:09:59,962 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d95bf
11:09:59,963 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@57b1ed
11:09:59,964 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@57b1ed
11:09:59,964 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@710a3e
11:09:59,965 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@9fa55
11:09:59,965 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9fa55
11:09:59,965 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@9fa55
11:09:59,966 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@169390
11:09:59,966 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@169390
11:09:59,966 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@169390
11:09:59,967 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7fee2d
11:09:59,967 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@8cd8f0
11:09:59,967 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@8cd8f0
11:09:59,967 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@8cd8f0
11:09:59,968 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@10df626
11:09:59,968 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@10df626
11:09:59,968 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@10df626
11:09:59,969 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1c33ccd
11:09:59,969 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@c35868
11:09:59,972 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1c2921d
11:09:59,972 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1c2921d
11:09:59,973 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fe9baa
11:09:59,977 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@d7e89c
11:09:59,977 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d7e89c
11:09:59,979 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@85e019
11:09:59,979 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@85e019
11:09:59,980 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@269856
11:09:59,980 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1225fc1
11:09:59,982 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@133066c
11:09:59,985 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7c329d
11:09:59,985 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7c329d
11:09:59,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54b365
11:09:59,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@da1b43
11:09:59,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b982e2
11:09:59,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c696
11:09:59,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@183093c
11:09:59,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@154173f
11:09:59,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@bcff11
11:09:59,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17d565c
11:10:00,004  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:10:00,004  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:10:00,004  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:10:00,018  INFO MLog:92 - MLog clients using log4j logging.
11:10:00,147  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:10:00,175  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:10:00,189  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@30127e61 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@36b375fe [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6s2ng1mgnswz|279c82, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@db4eeef4 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6s2ng1mgnswz|ffae4c, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6s2ng1mgnswz|62ef09, numHelperThreads -> 3 ]
11:10:00,292  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:10:00,401  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:10:00,403 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fba08e
11:10:00,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1fba08e
11:10:00,403  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@57b1ed
11:10:00,627 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@b36c7e
11:10:00,787  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:10:01,072  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:10:01,146 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:10:01,149 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:01,153 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:10:01,153 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:10:01,159 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:10:01,159 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:10:01,160 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:10:01,163 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:10:01,163 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:10:01,164 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:10:01,164 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:10:01,175 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:10:01,179 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:01,179 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:10:01,179 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:10:01,179 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:10:01,179 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [17]
11:10:01,180 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:10:01,180 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:10:01,180 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:10:01,180 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:10:01,180 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:10:01,181 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#17]
11:10:01,181 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#17]
11:10:01,183 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [17]
11:10:01,187 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:10:01,187 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:10:01,190 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:01,190 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:10:01,192 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:10:01,192 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:10:01,192 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:10:01,194 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:10:01,194 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:10:01,194 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:10:01,194 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:10:01,194 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:10:01,194 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:10:01,198 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:10:01,198 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:10:01,198 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:10:01,198 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:10:01,198 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:10:01,198 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:10:01,199 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:10:01,199 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:10:01,199 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:10:01,199 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:10:01,199 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:10:01,199 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:10:24,701  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:10:24,704  INFO Environment:213 - HHH000206: hibernate.properties not found
11:10:24,706  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:10:24,726  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:10:24,870  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:10:24,888 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@cb15bf
11:10:24,888 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@cb15bf
11:10:24,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@cb15bf
11:10:24,889 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8dc539
11:10:24,890 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5dc52
11:10:24,891 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@163f2fb
11:10:24,892 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1269273
11:10:24,892 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1269273
11:10:24,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1269273
11:10:24,894 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3a1eb3
11:10:24,894 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3a1eb3
11:10:24,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a1eb3
11:10:24,896 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1933923
11:10:24,896 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1933923
11:10:24,896 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1933923
11:10:24,897 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1492721
11:10:24,897 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1492721
11:10:24,897 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1492721
11:10:24,898 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c7a25d
11:10:24,898 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c7a25d
11:10:24,898 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7a25d
11:10:24,899 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1226445
11:10:24,900 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1226445
11:10:24,900 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1226445
11:10:24,901 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@366ea0
11:10:24,904 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@366ea0
11:10:24,904 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@366ea0
11:10:24,906 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20fa96
11:10:24,906 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20fa96
11:10:24,907 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1214a13
11:10:24,907 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1214a13
11:10:24,908 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@dddeac
11:10:24,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@dddeac
11:10:24,909 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c70722
11:10:24,910 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@fe1bc5
11:10:24,911 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@dd851d
11:10:24,911 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@dd851d
11:10:24,913 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1058579
11:10:24,913 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1058579
11:10:24,915 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7586b2
11:10:24,915 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7586b2
11:10:24,916 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b77801
11:10:24,916 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b77801
11:10:24,916 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b77801
11:10:24,918 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cd036c
11:10:24,918 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@10f30f5
11:10:24,919 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10f30f5
11:10:24,919 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10f30f5
11:10:24,919 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a2d5e
11:10:24,920 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1d21a9b
11:10:24,920 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d21a9b
11:10:24,921 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@83413f
11:10:24,921 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@83413f
11:10:24,921 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1f93efa
11:10:24,922 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1f93efa
11:10:24,922 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@14043f5
11:10:24,922 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@14043f5
11:10:24,923 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1cb7c74
11:10:24,923 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1cb7c74
11:10:24,924 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@118648b
11:10:24,925 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1ce5858
11:10:24,925 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ce5858
11:10:24,925 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1ce5858
11:10:24,926 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1182c93
11:10:24,926 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1182c93
11:10:24,926 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1182c93
11:10:24,926 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@210f7d
11:10:24,927 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@9fe17d
11:10:24,927 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@9fe17d
11:10:24,927 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@9fe17d
11:10:24,928 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4561a6
11:10:24,928 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4561a6
11:10:24,928 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4561a6
11:10:24,929 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@df7236
11:10:24,929 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@14b5526
11:10:24,933 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1d7c10a
11:10:24,933 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d7c10a
11:10:24,934 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c0c9c4
11:10:24,938 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@17e1dd2
11:10:24,939 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17e1dd2
11:10:24,941 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@97618e
11:10:24,941 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@97618e
11:10:24,941 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e01b65
11:10:24,942 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@182918f
11:10:24,944 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1e3cf1f
11:10:24,946 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1eb5a67
11:10:24,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1eb5a67
11:10:24,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e15fbe
11:10:24,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@cdd309
11:10:24,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@133fb54
11:10:24,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ff173
11:10:24,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@189ac1e
11:10:24,947 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d36bf2
11:10:24,948 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c26232
11:10:24,948 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@dda65
11:10:24,967  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:10:24,967  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:10:24,967  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:10:24,983  INFO MLog:92 - MLog clients using log4j logging.
11:10:25,120  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:10:25,147  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:10:25,163  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@c27804ff [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@10188336 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6slwz1lpylq6|16b302c, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@fe46275b [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6slwz1lpylq6|ffaa35, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6slwz1lpylq6|1e38d90, numHelperThreads -> 3 ]
11:10:25,269  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:10:25,377  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:10:25,379 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fba08e
11:10:25,379 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1fba08e
11:10:25,379  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1cb7c74
11:10:25,611 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1156949
11:10:25,774  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:10:26,070  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:10:26,145 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:10:26,151 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:26,155 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:10:26,155 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:10:26,161 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:10:26,161 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:10:26,163 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:10:26,165 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:10:26,165 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:10:26,166 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:10:26,166 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:10:26,178 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:10:26,222 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:26,222 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:10:26,222 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:10:26,222 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:10:26,222 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [18]
11:10:26,222 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:10:26,223 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:10:26,223 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:10:26,223 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:10:26,223 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:10:26,224 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#18]
11:10:26,224 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#18]
11:10:26,226 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [18]
11:10:26,229 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:10:26,230 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:10:26,233 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:26,233 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:10:26,235 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:10:26,235 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:10:26,235 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:10:26,237 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:10:26,237 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:10:26,237 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:10:26,238 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:10:26,238 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:10:26,238 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:10:26,241 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:10:26,241 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:10:26,242 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:10:26,242 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:10:26,242 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:10:26,242 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:10:26,242 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:10:26,242 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:10:26,242 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:10:26,243 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:10:26,243 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:10:26,243 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:10:34,495  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:10:34,497  INFO Environment:213 - HHH000206: hibernate.properties not found
11:10:34,499  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:10:34,520  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:10:34,650  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:10:34,665 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@cb15bf
11:10:34,666 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@cb15bf
11:10:34,666 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@cb15bf
11:10:34,666 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8dc539
11:10:34,667 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5dc52
11:10:34,668 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@163f2fb
11:10:34,669 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1269273
11:10:34,669 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1269273
11:10:34,669 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1269273
11:10:34,670 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3a1eb3
11:10:34,670 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3a1eb3
11:10:34,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a1eb3
11:10:34,671 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1933923
11:10:34,671 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1933923
11:10:34,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1933923
11:10:34,672 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1492721
11:10:34,672 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1492721
11:10:34,673 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1492721
11:10:34,674 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c7a25d
11:10:34,674 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c7a25d
11:10:34,674 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7a25d
11:10:34,675 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1226445
11:10:34,675 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1226445
11:10:34,675 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1226445
11:10:34,679 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@19904f4
11:10:34,679 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@19904f4
11:10:34,680 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19904f4
11:10:34,681 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20fa96
11:10:34,681 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20fa96
11:10:34,681 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1214a13
11:10:34,682 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1214a13
11:10:34,682 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@dddeac
11:10:34,682 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@dddeac
11:10:34,683 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c70722
11:10:34,684 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@fe1bc5
11:10:34,684 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@dd851d
11:10:34,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@dd851d
11:10:34,686 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1058579
11:10:34,686 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1058579
11:10:34,687 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7586b2
11:10:34,687 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7586b2
11:10:34,688 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b77801
11:10:34,688 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b77801
11:10:34,689 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b77801
11:10:34,690 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cd036c
11:10:34,690 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@10f30f5
11:10:34,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10f30f5
11:10:34,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10f30f5
11:10:34,691 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a2d5e
11:10:34,692 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1d21a9b
11:10:34,692 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d21a9b
11:10:34,693 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@83413f
11:10:34,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@83413f
11:10:34,693 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1f93efa
11:10:34,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1f93efa
11:10:34,694 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@14043f5
11:10:34,694 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@14043f5
11:10:34,695 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1cb7c74
11:10:34,695 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1cb7c74
11:10:34,696 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@118648b
11:10:34,696 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1ce5858
11:10:34,696 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ce5858
11:10:34,697 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1ce5858
11:10:34,697 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1182c93
11:10:34,697 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1182c93
11:10:34,698 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1182c93
11:10:34,698 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@210f7d
11:10:34,699 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@9fe17d
11:10:34,699 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@9fe17d
11:10:34,699 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@9fe17d
11:10:34,700 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4561a6
11:10:34,700 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4561a6
11:10:34,700 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4561a6
11:10:34,700 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@df7236
11:10:34,701 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@14b5526
11:10:34,704 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1d7c10a
11:10:34,704 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d7c10a
11:10:34,704 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c0c9c4
11:10:34,709 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@17e1dd2
11:10:34,709 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17e1dd2
11:10:34,712 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@97618e
11:10:34,712 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@97618e
11:10:34,712 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e01b65
11:10:34,713 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@182918f
11:10:34,714 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1e3cf1f
11:10:34,717 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1eb5a67
11:10:34,717 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1eb5a67
11:10:34,717 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e15fbe
11:10:34,717 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@cdd309
11:10:34,717 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@133fb54
11:10:34,717 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ff173
11:10:34,718 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@189ac1e
11:10:34,718 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d36bf2
11:10:34,718 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c26232
11:10:34,718 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@dda65
11:10:34,737  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:10:34,737  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:10:34,737  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:10:34,752  INFO MLog:92 - MLog clients using log4j logging.
11:10:34,873  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:10:34,902  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:10:34,920  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@becac9c6 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@c6b47fd [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v6stg8irootu|16b302c, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@2fb42db4 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6stg8irootu|ffaa35, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v6stg8irootu|1e38d90, numHelperThreads -> 3 ]
11:10:35,025  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:10:35,133  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:10:35,135 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fba08e
11:10:35,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1fba08e
11:10:35,136  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1cb7c74
11:10:35,360 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1156949
11:10:35,527  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:10:35,811  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:10:35,886 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:10:35,888 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:35,892 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:10:35,892 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:10:35,898 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:10:35,898 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:10:35,900 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:10:35,903 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:10:35,903 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:10:35,904 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:10:35,904 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:10:35,916 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:10:35,995 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:35,995 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:10:35,996 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:10:35,996 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:10:35,996 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [19]
11:10:35,996 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:10:35,996 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:10:35,996 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:10:35,997 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:10:35,997 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:10:35,997 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#19]
11:10:35,998 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#19]
11:10:35,998 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [19]
11:10:36,004 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:10:36,005 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:10:36,008 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:10:36,008 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:10:36,010 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:10:36,010 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:10:36,010 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:10:36,012 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:10:36,012 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:10:36,013 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:10:36,013 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:10:36,013 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:10:36,013 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:10:36,016 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:10:36,017 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:10:36,017 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:10:36,017 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:10:36,017 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:10:36,017 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:10:36,018 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:10:36,018 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:10:36,018 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:10:36,018 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:10:36,018 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:10:36,018 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:28:56,818  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:28:56,822  INFO Environment:213 - HHH000206: hibernate.properties not found
11:28:56,823  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:28:56,850  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:28:57,032  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:28:57,049 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@17ec7b9
11:28:57,049 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@17ec7b9
11:28:57,049 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@17ec7b9
11:28:57,050 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8b11f5
11:28:57,051 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1741e63
11:28:57,051 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1d7d689
11:28:57,053 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@54cd1b
11:28:57,053 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@54cd1b
11:28:57,053 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54cd1b
11:28:57,054 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@a98936
11:28:57,054 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@a98936
11:28:57,054 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a98936
11:28:57,055 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c94604
11:28:57,055 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c94604
11:28:57,056 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c94604
11:28:57,057 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7d8dfe
11:28:57,057 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7d8dfe
11:28:57,057 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7d8dfe
11:28:57,059 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e1401
11:28:57,059 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e1401
11:28:57,059 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e1401
11:28:57,061 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@13ef890
11:28:57,061 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@13ef890
11:28:57,061 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@13ef890
11:28:57,062 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@915c8c
11:28:57,063 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@915c8c
11:28:57,063 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@915c8c
11:28:57,064 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@141cf89
11:28:57,067 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@141cf89
11:28:57,070 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d427a
11:28:57,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d427a
11:28:57,071 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1401778
11:28:57,072 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1401778
11:28:57,072 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e54834
11:28:57,073 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@820699
11:28:57,074 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@469b16
11:28:57,074 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@469b16
11:28:57,076 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@c4c624
11:28:57,076 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@c4c624
11:28:57,077 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@17c1ee0
11:28:57,077 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17c1ee0
11:28:57,078 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b243a2
11:28:57,078 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b243a2
11:28:57,079 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b243a2
11:28:57,080 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2febac
11:28:57,080 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4766d2
11:28:57,081 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4766d2
11:28:57,081 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4766d2
11:28:57,081 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1f47e63
11:28:57,082 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@a801a2
11:28:57,082 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a801a2
11:28:57,083 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1fa16c3
11:28:57,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1fa16c3
11:28:57,084 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@b981c0
11:28:57,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b981c0
11:28:57,085 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@12a5296
11:28:57,085 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12a5296
11:28:57,087 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@100b4e0
11:28:57,087 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@100b4e0
11:28:57,087 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a39c81
11:28:57,088 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@a09298
11:28:57,088 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@a09298
11:28:57,088 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@a09298
11:28:57,089 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1796279
11:28:57,089 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1796279
11:28:57,090 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1796279
11:28:57,090 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@19cdf24
11:28:57,091 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@edadfa
11:28:57,091 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@edadfa
11:28:57,091 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@edadfa
11:28:57,092 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1de3998
11:28:57,092 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1de3998
11:28:57,093 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1de3998
11:28:57,093 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@41a0b4
11:28:57,094 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@170e466
11:28:57,098 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@135cd73
11:28:57,098 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@135cd73
11:28:57,099 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1beb87c
11:28:57,103 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1df4449
11:28:57,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1df4449
11:28:57,106 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@657855
11:28:57,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@657855
11:28:57,106 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8135a0
11:28:57,110 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@ef43f1
11:28:57,111 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@92eefe
11:28:57,115 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5f317c
11:28:57,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f317c
11:28:57,115 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e54ad
11:28:57,115 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@128f0f9
11:28:57,115 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@116639
11:28:57,115 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1326f8f
11:28:57,116 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1fa6c48
11:28:57,116 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fe35d2
11:28:57,116 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e43d5e
11:28:57,116 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68e679
11:28:57,138  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:28:57,138  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:28:57,138  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:28:57,158  INFO MLog:92 - MLog clients using log4j logging.
11:28:57,329  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:28:57,374  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:28:57,394  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a2b12ada [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@d99ba17a [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v7gg30k5bglf|fea5c7, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@a52c41fd [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v7gg30k5bglf|135cc8e, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v7gg30k5bglf|13beecf, numHelperThreads -> 3 ]
11:28:57,520  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:28:57,631  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:28:57,639 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13d4535
11:28:57,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@13d4535
11:28:57,640  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@100b4e0
11:28:57,946 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@2f0571
11:28:58,168  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:28:58,522  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:28:58,611 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:28:58,614 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:28:58,619 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:28:58,619 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:28:58,627 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:28:58,627 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:28:58,629 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:28:58,632 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:28:58,633 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:28:58,633 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:28:58,636 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:28:58,654 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:28:58,657 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:28:58,658 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:28:58,658 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:28:58,658 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:28:58,658 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [20]
11:28:58,658 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:28:58,658 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:28:58,659 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:28:58,659 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:28:58,659 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:28:58,660 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#20]
11:28:58,660 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#20]
11:28:58,660 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [20]
11:28:58,663 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:28:58,664 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:28:58,666 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:28:58,667 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:28:58,669 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:28:58,669 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:28:58,669 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:28:58,669 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Yasha]
11:28:58,669 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Maxim]
11:28:58,669 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Jenya]
11:28:58,669 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Gotcha]
11:29:17,808 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:29:17,809 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,809 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:29:17,810 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:29:17,810 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:29:17,811 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:29:17,811 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Yasha]
11:29:17,811 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,812 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Maxim]
11:29:17,812 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,813 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Jenya]
11:29:17,813 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,813 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Gotcha]
11:29:17,814 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:29:17,825 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [4]
11:29:17,826 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Yasha]
11:29:17,826 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,827 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:29:17,827 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:29:17,828 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,828 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [5]
11:29:17,829 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Maxim]
11:29:17,835 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,835 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [6]
11:29:17,836 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Jenya]
11:29:17,836 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:17,837 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:29:17,837 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:29:17,838 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:29:17,838 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:29:17,839 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:29:17,839 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:29:17,840 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [7]
11:29:17,840 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Gotcha]
11:29:17,840 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:29:17,841 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#4]
11:29:17,841 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:29:17,842 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#5]
11:29:17,842 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#6]
11:29:17,843 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:29:17,844 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:29:17,844 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#7]
11:29:17,876  WARN SqlExceptionHelper:127 - SQL Error: 0, SQLState: 42803
11:29:17,876 ERROR SqlExceptionHelper:129 - ??????: ??????? "author0_.author_lastname" ?????? ???????????? ? ??????????? GROUP BY ??? ?????????????? ? ?????????? ???????
  Position: 8
11:29:27,221  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:29:27,224  INFO Environment:213 - HHH000206: hibernate.properties not found
11:29:27,226  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:29:27,260  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:29:27,434  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:29:27,452 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1be5f6d
11:29:27,452 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1be5f6d
11:29:27,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1be5f6d
11:29:27,454 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@22d1f4
11:29:27,455 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c5e1d4
11:29:27,455 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@824fb4
11:29:27,456 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@268c02
11:29:27,456 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@268c02
11:29:27,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@268c02
11:29:27,457 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2ef9bd
11:29:27,457 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2ef9bd
11:29:27,458 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2ef9bd
11:29:27,459 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1bb703d
11:29:27,459 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1bb703d
11:29:27,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1bb703d
11:29:27,460 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@31feed
11:29:27,461 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@31feed
11:29:27,461 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31feed
11:29:27,462 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@ca99c9
11:29:27,462 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@ca99c9
11:29:27,462 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ca99c9
11:29:27,464 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@67d59a
11:29:27,464 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@67d59a
11:29:27,464 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67d59a
11:29:27,466 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d0e91
11:29:27,466 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d0e91
11:29:27,466 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d0e91
11:29:27,468 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1081cc0
11:29:27,473 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1081cc0
11:29:27,476 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@105062c
11:29:27,476 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@105062c
11:29:27,478 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@19c9fe7
11:29:27,478 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@19c9fe7
11:29:27,479 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@f24d61
11:29:27,480 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c68f7c
11:29:27,481 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@fc48ce
11:29:27,482 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fc48ce
11:29:27,484 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@197680c
11:29:27,485 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@197680c
11:29:27,486 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@16aee36
11:29:27,487 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16aee36
11:29:27,488 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@19a7f62
11:29:27,488 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19a7f62
11:29:27,489 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19a7f62
11:29:27,490 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5af47d
11:29:27,491 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@d0cb66
11:29:27,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d0cb66
11:29:27,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d0cb66
11:29:27,492 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77b7a0
11:29:27,493 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@371b8b
11:29:27,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@371b8b
11:29:27,495 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1021b8a
11:29:27,495 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1021b8a
11:29:27,496 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@63921a
11:29:27,496 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@63921a
11:29:27,497 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1ee470d
11:29:27,498 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ee470d
11:29:27,499 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e7c8cc
11:29:27,499 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e7c8cc
11:29:27,500 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@194547c
11:29:27,501 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@49cda3
11:29:27,501 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@49cda3
11:29:27,501 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@49cda3
11:29:27,502 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fc58f3
11:29:27,503 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fc58f3
11:29:27,503 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fc58f3
11:29:27,504 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4a084c
11:29:27,505 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f9ec4
11:29:27,505 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f9ec4
11:29:27,505 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f9ec4
11:29:27,506 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17e4f19
11:29:27,506 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17e4f19
11:29:27,506 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17e4f19
11:29:27,506 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@881bd3
11:29:27,507 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@104df84
11:29:27,511 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@117cb47
11:29:27,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@117cb47
11:29:27,512 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f5b2c4
11:29:27,516 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@13cc523
11:29:27,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@13cc523
11:29:27,520 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@8d8008
11:29:27,520 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@8d8008
11:29:27,521 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@113e52f
11:29:27,524 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75f756
11:29:27,525 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1a343f7
11:29:27,529 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@654ae7
11:29:27,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@654ae7
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57a236
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e54ad
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@128f0f9
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@116639
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1326f8f
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fa6c48
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1fe35d2
11:29:27,530 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e43d5e
11:29:27,550  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:29:27,550  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:29:27,550  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:29:27,566  INFO MLog:92 - MLog clients using log4j logging.
11:29:27,703  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:29:27,749  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:29:27,772  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@14963d2b [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@1222ab36 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v7h3jjjdfjm2|44adb2, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@bcec9c18 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v7h3jjjdfjm2|f2aa38, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v7h3jjjdfjm2|1f3529, numHelperThreads -> 3 ]
11:29:27,899  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:29:28,021  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:29:28,024 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d677b
11:29:28,027 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2d677b
11:29:28,027  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e7c8cc
11:29:28,319 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@15e8b58
11:29:28,534  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:29:28,878  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:29:28,968 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:29:28,972 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:29:28,976 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:29:28,977 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:29:28,984 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:29:28,984 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:29:28,986 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:29:28,989 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:29:28,989 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:29:28,990 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:29:28,993 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:29:29,012 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:29:29,042 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:29:29,042 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:29:29,042 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:29:29,042 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:29:29,042 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [21]
11:29:29,042 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:29:29,042 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:29:29,043 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:29:29,043 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:29:29,043 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:29:29,044 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#21]
11:29:29,044 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#21]
11:29:29,044 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [21]
11:29:29,048 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:29:29,048 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:29:29,051 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:29:29,051 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:29:29,053 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:29:29,053 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:29:29,053 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:29:29,053 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Yasha]
11:29:29,054 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Maxim]
11:29:29,054 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Jenya]
11:29:29,054 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Gotcha]
11:29:29,056 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:29:29,056 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,056 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Yasha]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Maxim]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,057 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Jenya]
11:29:29,058 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,058 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Gotcha]
11:29:29,058 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:29:29,062 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [4]
11:29:29,062 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Yasha]
11:29:29,062 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,062 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:29:29,062 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:29:29,062 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,063 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [5]
11:29:29,063 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Maxim]
11:29:29,065 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,065 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [6]
11:29:29,065 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Jenya]
11:29:29,065 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:29,065 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:29:29,065 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:29:29,066 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:29:29,066 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:29:29,066 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:29:29,066 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:29:29,066 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [7]
11:29:29,066 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Gotcha]
11:29:29,067 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:29:29,067 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#4]
11:29:29,067 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:29:29,067 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#5]
11:29:29,067 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#6]
11:29:29,067 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:29:29,067 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:29:29,068 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#7]
11:29:29,080  WARN SqlExceptionHelper:127 - SQL Error: 0, SQLState: 42803
11:29:29,080 ERROR SqlExceptionHelper:129 - ??????: ??????? "author0_.author_lastname" ?????? ???????????? ? ??????????? GROUP BY ??? ?????????????? ? ?????????? ???????
  Position: 8
11:29:53,008  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:29:53,010  INFO Environment:213 - HHH000206: hibernate.properties not found
11:29:53,011  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:29:53,034  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
11:29:53,187  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:29:53,204 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@d1305d
11:29:53,204 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@d1305d
11:29:53,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d1305d
11:29:53,205 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@186644c
11:29:53,206 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48f8cb
11:29:53,206 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7dd26e
11:29:53,208 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@33b2e7
11:29:53,208 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@33b2e7
11:29:53,208 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33b2e7
11:29:53,209 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@438289
11:29:53,210 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@438289
11:29:53,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@438289
11:29:53,211 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@123bead
11:29:53,211 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@123bead
11:29:53,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@123bead
11:29:53,212 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@18f3dc
11:29:53,212 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@18f3dc
11:29:53,212 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@18f3dc
11:29:53,214 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@14e49bb
11:29:53,214 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@14e49bb
11:29:53,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14e49bb
11:29:53,218 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3826d
11:29:53,218 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3826d
11:29:53,218 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3826d
11:29:53,220 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1214223
11:29:53,220 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1214223
11:29:53,220 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1214223
11:29:53,223 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34e67d
11:29:53,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34e67d
11:29:53,230 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@922dec
11:29:53,230 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@922dec
11:29:53,231 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@f9a477
11:29:53,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@f9a477
11:29:53,232 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1d0ac94
11:29:53,233 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b1cfe0
11:29:53,234 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@191d41b
11:29:53,234 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@191d41b
11:29:53,236 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1d4acb8
11:29:53,237 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1d4acb8
11:29:53,238 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@3f9952
11:29:53,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f9952
11:29:53,239 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@b24bfb
11:29:53,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b24bfb
11:29:53,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b24bfb
11:29:53,241 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1973602
11:29:53,242 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2f1be6
11:29:53,242 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f1be6
11:29:53,243 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f1be6
11:29:53,243 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e1ae5
11:29:53,244 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@cb8f74
11:29:53,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cb8f74
11:29:53,245 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@142b716
11:29:53,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@142b716
11:29:53,246 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1164a3b
11:29:53,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1164a3b
11:29:53,247 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@c2ef53
11:29:53,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c2ef53
11:29:53,249 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1770114
11:29:53,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1770114
11:29:53,250 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@fe268a
11:29:53,251 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@e96a6b
11:29:53,251 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@e96a6b
11:29:53,251 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@e96a6b
11:29:53,252 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dcb533
11:29:53,253 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dcb533
11:29:53,253 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dcb533
11:29:53,254 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1639ad4
11:29:53,255 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@342fd2
11:29:53,255 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@342fd2
11:29:53,255 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@342fd2
11:29:53,256 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@dbf050
11:29:53,256 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@dbf050
11:29:53,256 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@dbf050
11:29:53,257 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1f437e
11:29:53,258 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@147bde8
11:29:53,263 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1203b56
11:29:53,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1203b56
11:29:53,264 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f072a1
11:29:53,268 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1235f2a
11:29:53,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1235f2a
11:29:53,270 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@16f5657
11:29:53,270 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16f5657
11:29:53,271 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d03fe9
11:29:53,274 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@18dad71
11:29:53,275 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@cbeac9
11:29:53,280 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1c88831
11:29:53,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c88831
11:29:53,280 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2fbdd3
11:29:53,281 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15a95c3
11:29:53,281 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1492cfe
11:29:53,281 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e489c6
11:29:53,281 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e2837
11:29:53,281 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a17f3
11:29:53,281 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1daed02
11:29:53,281 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7fafa4
11:29:53,301  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
11:29:53,301  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
11:29:53,301  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
11:29:53,322  INFO MLog:92 - MLog clients using log4j logging.
11:29:53,463  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
11:29:53,507  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
11:29:53,524  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@98a1a4ea [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@38251fd2 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v7hneze3dobe|1193e3b, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@2d4dc0c1 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v7hneze3dobe|16c349e, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v7hneze3dobe|e007c9, numHelperThreads -> 3 ]
11:29:53,636  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
11:29:53,747  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
11:29:53,750 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@e4c79c
11:29:53,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@e4c79c
11:29:53,753  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1770114
11:29:54,041 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@e4c71
11:29:54,260  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
11:29:54,594  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:29:54,683 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [stockCode1]
11:29:54,686 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:29:54,691 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [stockCode1]
11:29:54,691 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName1]
11:29:54,699 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
11:29:54,699 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
11:29:54,701 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:29:54,704 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
11:29:54,704 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
11:29:54,705 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
11:29:54,708 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
11:29:54,726 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
11:29:55,032 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:29:55,033 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:29:55,033 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [19324530]
11:29:55,034 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [stockName2]
11:29:55,034 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [22]
11:29:55,034 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_] : [VARCHAR]) - [Java 8]
11:29:55,035 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_] : [VARCHAR]) - [Java 8 description]
11:29:55,035 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
11:29:55,036 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
11:29:55,036 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
11:29:55,038 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#22]
11:29:55,038 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#22]
11:29:55,038 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [22]
11:29:55,045 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:29:55,046 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Java 8]
11:29:55,224 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [1]
11:29:55,224 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_] : [INTEGER]) - [2]
11:29:55,227 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:29:55,227 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:29:55,227 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:29:55,227 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Yasha]
11:29:55,227 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Maxim]
11:29:55,227 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Jenya]
11:29:55,228 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Gotcha]
11:29:55,230 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasilii]
11:29:55,230 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,230 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivanov]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigorii]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Grigoriev]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Yasha]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Maxim]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,231 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Jenya]
11:29:55,232 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,232 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Gotcha]
11:29:55,232 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [VARCHAR]) - [Ivan]
11:29:55,236 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [4]
11:29:55,237 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Yasha]
11:29:55,237 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,237 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [1]
11:29:55,237 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Vasilii]
11:29:55,237 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,237 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [5]
11:29:55,240 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Maxim]
11:29:55,240 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,240 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [6]
11:29:55,240 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Jenya]
11:29:55,241 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,241 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [2]
11:29:55,241 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Ivanov]
11:29:55,241 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:29:55,241 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [3]
11:29:55,241 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Grigorii]
11:29:55,241 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Grigoriev]
11:29:55,242 TRACE BasicExtractor:61 - extracted value ([author_i1_0_] : [INTEGER]) - [7]
11:29:55,242 TRACE BasicExtractor:61 - extracted value ([author_f2_0_] : [VARCHAR]) - [Gotcha]
11:29:55,242 TRACE BasicExtractor:61 - extracted value ([author_l3_0_] : [VARCHAR]) - [Ivan]
11:29:55,242 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#4]
11:29:55,242 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#1]
11:29:55,242 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#5]
11:29:55,242 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#6]
11:29:55,243 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#2]
11:29:55,243 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#3]
11:29:55,243 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#7]
11:29:55,252 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Grigoriev]
11:29:55,252 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [BIGINT]) - [1]
11:29:55,252 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Vasiliev]
11:29:55,253 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [BIGINT]) - [4]
11:29:55,253 TRACE BasicExtractor:61 - extracted value ([col_0_0_] : [VARCHAR]) - [Ivan]
11:29:55,253 TRACE BasicExtractor:61 - extracted value ([col_1_0_] : [BIGINT]) - [2]
12:17:18,088  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:17:18,091  INFO Environment:213 - HHH000206: hibernate.properties not found
12:17:18,093  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:17:18,114  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:17:18,246  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:17:18,262 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:17:18,262 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:17:18,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b2288
12:17:18,263 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7907a0
12:17:18,264 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18f59e3
12:17:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@547840
12:17:18,266 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:17:18,266 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:17:18,266 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49b16d
12:17:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@dd75f
12:17:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@dd75f
12:17:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@dd75f
12:17:18,268 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:17:18,268 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:17:18,269 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44fec1
12:17:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@187108a
12:17:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@187108a
12:17:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@187108a
12:17:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:17:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:17:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f7574
12:17:18,273 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:17:18,273 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:17:18,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d74f7d
12:17:18,277 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:17:18,278 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:17:18,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d5e2b
12:17:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12ceb70
12:17:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12ceb70
12:17:18,280 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e33fd4
12:17:18,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e33fd4
12:17:18,281 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@9a3139
12:17:18,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@9a3139
12:17:18,281 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1963c7b
12:17:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@eedabc
12:17:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@d12826
12:17:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d12826
12:17:18,285 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@8057d3
12:17:18,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8057d3
12:17:18,286 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1ca8007
12:17:18,286 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ca8007
12:17:18,287 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e08f43
12:17:18,288 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e08f43
12:17:18,288 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e08f43
12:17:18,289 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f77e2f
12:17:18,290 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4eeef7
12:17:18,290 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4eeef7
12:17:18,290 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4eeef7
12:17:18,291 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fd5908
12:17:18,291 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@12d5cb0
12:17:18,291 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12d5cb0
12:17:18,292 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@26f7af
12:17:18,292 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26f7af
12:17:18,293 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d649c5
12:17:18,293 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d649c5
12:17:18,294 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1f93efa
12:17:18,294 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f93efa
12:17:18,295 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:17:18,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:17:18,296 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1979448
12:17:18,297 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1758781
12:17:18,297 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1758781
12:17:18,298 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1758781
12:17:18,299 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13a03b0
12:17:18,299 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13a03b0
12:17:18,299 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13a03b0
12:17:18,300 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@edb080
12:17:18,301 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7fee2d
12:17:18,301 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fee2d
12:17:18,302 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7fee2d
12:17:18,303 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11879ea
12:17:18,303 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11879ea
12:17:18,303 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11879ea
12:17:18,304 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1702f3f
12:17:18,304 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@191d67b
12:17:18,307 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@143b5da
12:17:18,308 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@143b5da
12:17:18,308 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cccd19
12:17:18,312 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1010970
12:17:18,313 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1010970
12:17:18,315 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1d072fc
12:17:18,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d072fc
12:17:18,316 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@195575f
12:17:18,316 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a79fbb
12:17:18,318 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@fd54ec
12:17:18,320 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1961bac
12:17:18,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1961bac
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fa254f
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@180f214
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@177cbf7
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1eb5a67
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1defa49
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@261c14
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@121beab
12:17:18,321 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36b7cc
12:17:18,340  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
12:17:18,340  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:17:18,340  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:17:18,355  INFO MLog:92 - MLog clients using log4j logging.
12:17:18,478  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:17:18,505  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:17:18,518  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@9d487806 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@a07cb98c [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v96mnfxvhlhz|1c90649, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@9cfcccca [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v96mnfxvhlhz|1e9a396, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v96mnfxvhlhz|1e55c09, numHelperThreads -> 3 ]
12:17:18,623  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
12:17:18,736  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:17:18,739 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12c6850
12:17:18,739 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12c6850
12:17:18,739  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1a4d25d
12:17:18,978 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@be9067
12:17:19,143  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
12:17:19,899 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [19056]
12:17:19,902 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [1]
12:17:19,906 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2015-12-21 17:13:20.39]
12:17:19,907 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [19.0]
12:17:19,907 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [21.5]
12:17:19,907 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [15.9]
12:17:19,907 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:17:19,908 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [19056]
12:17:54,974  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:17:54,976  INFO Environment:213 - HHH000206: hibernate.properties not found
12:17:54,977  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:17:55,000  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:17:55,161  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:17:55,180 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:17:55,180 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:17:55,180 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b2288
12:17:55,181 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7907a0
12:17:55,182 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18f59e3
12:17:55,183 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@547840
12:17:55,184 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:17:55,184 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:17:55,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49b16d
12:17:55,185 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@dd75f
12:17:55,185 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@dd75f
12:17:55,185 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@dd75f
12:17:55,186 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:17:55,187 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:17:55,187 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44fec1
12:17:55,187 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@187108a
12:17:55,188 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@187108a
12:17:55,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@187108a
12:17:55,189 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:17:55,189 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:17:55,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f7574
12:17:55,191 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:17:55,191 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:17:55,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d74f7d
12:17:55,196 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:17:55,197 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:17:55,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d5e2b
12:17:55,199 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12ceb70
12:17:55,199 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12ceb70
12:17:55,200 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e33fd4
12:17:55,200 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e33fd4
12:17:55,200 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@9a3139
12:17:55,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@9a3139
12:17:55,201 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1963c7b
12:17:55,202 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@eedabc
12:17:55,203 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@d12826
12:17:55,203 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d12826
12:17:55,204 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@8057d3
12:17:55,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8057d3
12:17:55,206 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1ca8007
12:17:55,206 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ca8007
12:17:55,207 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e08f43
12:17:55,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e08f43
12:17:55,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e08f43
12:17:55,208 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f77e2f
12:17:55,209 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4eeef7
12:17:55,209 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4eeef7
12:17:55,209 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4eeef7
12:17:55,210 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fd5908
12:17:55,211 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@12d5cb0
12:17:55,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12d5cb0
12:17:55,211 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@26f7af
12:17:55,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26f7af
12:17:55,212 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d649c5
12:17:55,212 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d649c5
12:17:55,213 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1f93efa
12:17:55,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f93efa
12:17:55,214 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:17:55,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:17:55,215 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1979448
12:17:55,215 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1758781
12:17:55,216 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1758781
12:17:55,216 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1758781
12:17:55,216 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13a03b0
12:17:55,217 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13a03b0
12:17:55,217 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13a03b0
12:17:55,217 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@edb080
12:17:55,218 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7fee2d
12:17:55,218 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fee2d
12:17:55,218 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7fee2d
12:17:55,219 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11879ea
12:17:55,219 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11879ea
12:17:55,219 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11879ea
12:17:55,220 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1702f3f
12:17:55,220 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@191d67b
12:17:55,223 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@143b5da
12:17:55,223 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@143b5da
12:17:55,224 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cccd19
12:17:55,228 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1010970
12:17:55,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1010970
12:17:55,231 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1d072fc
12:17:55,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d072fc
12:17:55,232 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@195575f
12:17:55,232 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a79fbb
12:17:55,235 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@fd54ec
12:17:55,238 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1961bac
12:17:55,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1961bac
12:17:55,239 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fa254f
12:17:55,239 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@180f214
12:17:55,239 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@177cbf7
12:17:55,239 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1eb5a67
12:17:55,240 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1defa49
12:17:55,240 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@261c14
12:17:55,240 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@121beab
12:17:55,240 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36b7cc
12:17:55,258  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
12:17:55,258  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:17:55,258  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:17:55,273  INFO MLog:92 - MLog clients using log4j logging.
12:17:55,399  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:17:55,427  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:17:55,442  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@e9e2bc56 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@f0bde824 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v97f4y1u9wjwg|bbcb8b, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@42ee573a [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v97f4y1u9wjwg|1f2e04c, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v97f4y1u9wjwg|fd6f8a, numHelperThreads -> 3 ]
12:17:55,545  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
12:17:55,655  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:17:55,657 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12c6850
12:17:55,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12c6850
12:17:55,657  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1a4d25d
12:17:55,896 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14e41bf
12:17:56,074  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
12:17:56,382 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [19056]
12:17:56,385 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [1]
12:17:56,389 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2015-12-21 17:13:20.39]
12:17:56,390 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [19.0]
12:17:56,390 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [21.5]
12:17:56,390 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [15.9]
12:17:56,390 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:17:56,390 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [19056]
12:17:56,399 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:17:56,402 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_0_] : [VARCHAR]) - [19324530]
12:17:56,403 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_0_] : [VARCHAR]) - [stockName2]
12:17:56,407 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
12:17:56,407 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
12:17:56,408 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:15,794  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:18:15,796  INFO Environment:213 - HHH000206: hibernate.properties not found
12:18:15,797  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:18:15,818  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:18:15,959  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:18:15,977 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@184f97
12:18:15,977 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@184f97
12:18:15,978 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@184f97
12:18:15,978 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e39ebf
12:18:15,979 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56553e
12:18:15,980 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a2c255
12:18:15,982 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1fa7c6
12:18:15,982 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1fa7c6
12:18:15,982 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fa7c6
12:18:15,983 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@b6a52e
12:18:15,983 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@b6a52e
12:18:15,984 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b6a52e
12:18:15,985 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b14695
12:18:15,985 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b14695
12:18:15,986 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b14695
12:18:15,987 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4ee63e
12:18:15,987 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4ee63e
12:18:15,987 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4ee63e
12:18:15,989 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3837ba
12:18:15,989 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3837ba
12:18:15,989 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3837ba
12:18:15,990 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a3bffb
12:18:15,990 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1a3bffb
12:18:15,991 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a3bffb
12:18:15,996 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@b15b5a
12:18:15,996 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@b15b5a
12:18:15,996 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b15b5a
12:18:15,998 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@150dd8
12:18:15,998 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@150dd8
12:18:15,999 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17380fc
12:18:15,999 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17380fc
12:18:16,000 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1159684
12:18:16,000 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1159684
12:18:16,001 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5cc7a5
12:18:16,002 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a8fff
12:18:16,003 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1a2efd3
12:18:16,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2efd3
12:18:16,005 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5feba
12:18:16,005 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5feba
12:18:16,007 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@19b747d
12:18:16,007 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19b747d
12:18:16,008 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dd9771
12:18:16,008 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dd9771
12:18:16,008 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dd9771
12:18:16,009 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17d43bf
12:18:16,010 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2a9a49
12:18:16,011 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a9a49
12:18:16,011 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a9a49
12:18:16,011 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e05ddd
12:18:16,012 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1202871
12:18:16,012 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1202871
12:18:16,013 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f3587
12:18:16,013 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f3587
12:18:16,014 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1852a95
12:18:16,014 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1852a95
12:18:16,015 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@95b81a
12:18:16,015 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@95b81a
12:18:16,016 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ef12fb
12:18:16,016 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ef12fb
12:18:16,016 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@88249c
12:18:16,017 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1134ee8
12:18:16,018 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1134ee8
12:18:16,018 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1134ee8
12:18:16,018 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1c81b84
12:18:16,019 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1c81b84
12:18:16,019 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1c81b84
12:18:16,019 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@dec6da
12:18:16,020 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@ede434
12:18:16,020 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@ede434
12:18:16,020 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@ede434
12:18:16,021 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ec08c7
12:18:16,021 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ec08c7
12:18:16,021 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ec08c7
12:18:16,022 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2dec81
12:18:16,022 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1982a25
12:18:16,026 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5821d0
12:18:16,026 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5821d0
12:18:16,027 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ad437e
12:18:16,033 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@112cbde
12:18:16,033 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@112cbde
12:18:16,036 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2d1f1f
12:18:16,036 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d1f1f
12:18:16,037 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19b2f32
12:18:16,037 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@e7df90
12:18:16,040 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1d25ec5
12:18:16,044 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1f2e206
12:18:16,045 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f2e206
12:18:16,045 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a76793
12:18:16,045 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9504f2
12:18:16,045 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1efda65
12:18:16,046 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c329d
12:18:16,046 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e418
12:18:16,046 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fd84ec
12:18:16,046 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d006c
12:18:16,046 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cf0c3
12:18:16,070  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
12:18:16,070  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:18:16,070  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:18:16,086  INFO MLog:92 - MLog clients using log4j logging.
12:18:16,214  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:18:16,243  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:18:16,256  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@52563ed5 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@59316aa3 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v97v77tnfgqf|bbcb8b, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@e8eb249b [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v97v77tnfgqf|1f2e04c, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v97v77tnfgqf|fd6f8a, numHelperThreads -> 3 ]
12:18:16,356  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
12:18:16,462  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:18:16,464 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:16,464 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:16,465  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ef12fb
12:18:16,706 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14e41bf
12:18:16,871  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
12:18:17,171 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [190156]
12:18:24,139  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:18:24,141  INFO Environment:213 - HHH000206: hibernate.properties not found
12:18:24,142  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:18:24,164  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:18:24,311  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:18:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a0a4ca
12:18:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a0a4ca
12:18:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a0a4ca
12:18:24,329 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@fe3e4f
12:18:24,330 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@199ae79
12:18:24,330 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@c9277d
12:18:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@105d3ff
12:18:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@105d3ff
12:18:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@105d3ff
12:18:24,332 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@b6bb33
12:18:24,332 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@b6bb33
12:18:24,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b6bb33
12:18:24,333 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1c4c648
12:18:24,334 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1c4c648
12:18:24,334 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c4c648
12:18:24,335 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@8c35f3
12:18:24,335 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@8c35f3
12:18:24,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8c35f3
12:18:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c5e4c5
12:18:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1c5e4c5
12:18:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c5e4c5
12:18:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@e96af5
12:18:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@e96af5
12:18:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e96af5
12:18:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@70b657
12:18:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@70b657
12:18:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70b657
12:18:24,345 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26fc47
12:18:24,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26fc47
12:18:24,346 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@123a47c
12:18:24,347 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@123a47c
12:18:24,348 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1b23bb1
12:18:24,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b23bb1
12:18:24,349 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a78257
12:18:24,350 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@80c29c
12:18:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@cd2fd0
12:18:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@cd2fd0
12:18:24,352 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@123eee
12:18:24,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@123eee
12:18:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@81b50e
12:18:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@81b50e
12:18:24,356 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4a9acb
12:18:24,356 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4a9acb
12:18:24,356 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4a9acb
12:18:24,357 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d4e47
12:18:24,358 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@124e
12:18:24,358 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@124e
12:18:24,358 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@124e
12:18:24,359 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58f809
12:18:24,360 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@71db31
12:18:24,360 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71db31
12:18:24,360 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1d21a9b
12:18:24,361 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d21a9b
12:18:24,361 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@90fc4b
12:18:24,361 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@90fc4b
12:18:24,362 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@4ded8e
12:18:24,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ded8e
12:18:24,363 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8e3ede
12:18:24,364 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8e3ede
12:18:24,364 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@102d3d2
12:18:24,365 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1837e72
12:18:24,365 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1837e72
12:18:24,365 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1837e72
12:18:24,366 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fb58c9
12:18:24,366 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fb58c9
12:18:24,366 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fb58c9
12:18:24,366 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@882c7f
12:18:24,367 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1ea4043
12:18:24,367 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ea4043
12:18:24,367 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1ea4043
12:18:24,368 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@64f82f
12:18:24,368 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@64f82f
12:18:24,368 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@64f82f
12:18:24,369 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@52a793
12:18:24,369 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@22d4f0
12:18:24,372 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@9d1dd7
12:18:24,372 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@9d1dd7
12:18:24,373 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@346322
12:18:24,377 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1115c51
12:18:24,377 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1115c51
12:18:24,379 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1d0f32d
12:18:24,379 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d0f32d
12:18:24,380 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@480e56
12:18:24,380 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2af58b
12:18:24,382 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@e6eb5e
12:18:24,384 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@17ac43d
12:18:24,384 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@17ac43d
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1288b76
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1fa254f
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@180f214
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@177cbf7
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1eb5a67
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1defa49
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@261c14
12:18:24,385 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@121beab
12:18:24,403  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
12:18:24,404  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:18:24,404  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:18:24,418  INFO MLog:92 - MLog clients using log4j logging.
12:18:24,533  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:18:24,559  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:18:24,571  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@e4684b0f [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@354d90d3 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v981mhf4bsto|81e4a1, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@9416ac46 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v981mhf4bsto|1c2dbc2, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v981mhf4bsto|140b009, numHelperThreads -> 3 ]
12:18:24,667  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
12:18:24,771  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:18:24,773 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:24,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:24,773  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@8e3ede
12:18:25,007 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14e41bf
12:18:25,171  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
12:18:25,472 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [19055]
12:18:25,475 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [1]
12:18:25,479 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2015-12-21 17:13:20.39]
12:18:25,479 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [19.0]
12:18:25,479 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [21.5]
12:18:25,479 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [15.9]
12:18:25,480 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:18:25,480 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [19056]
12:18:25,488 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:25,490 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_0_] : [VARCHAR]) - [19324530]
12:18:25,491 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_0_] : [VARCHAR]) - [stockName2]
12:18:25,495 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
12:18:25,496 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
12:18:25,496 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:30,320  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:18:30,322  INFO Environment:213 - HHH000206: hibernate.properties not found
12:18:30,323  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:18:30,344  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:18:30,481  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:18:30,497 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:18:30,498 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:18:30,498 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b2288
12:18:30,498 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7907a0
12:18:30,499 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18f59e3
12:18:30,500 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@547840
12:18:30,501 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:18:30,501 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:18:30,501 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49b16d
12:18:30,502 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@dd75f
12:18:30,502 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@dd75f
12:18:30,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@dd75f
12:18:30,503 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:18:30,503 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:18:30,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44fec1
12:18:30,504 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@187108a
12:18:30,504 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@187108a
12:18:30,505 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@187108a
12:18:30,506 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:18:30,506 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:18:30,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f7574
12:18:30,507 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:18:30,507 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:18:30,507 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d74f7d
12:18:30,511 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:18:30,511 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:18:30,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d5e2b
12:18:30,512 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12ceb70
12:18:30,513 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12ceb70
12:18:30,513 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e33fd4
12:18:30,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e33fd4
12:18:30,514 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@9a3139
12:18:30,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@9a3139
12:18:30,515 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1963c7b
12:18:30,516 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@eedabc
12:18:30,516 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@d12826
12:18:30,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d12826
12:18:30,518 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@8057d3
12:18:30,518 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8057d3
12:18:30,519 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1ca8007
12:18:30,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ca8007
12:18:30,520 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e08f43
12:18:30,520 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e08f43
12:18:30,521 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e08f43
12:18:30,522 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f77e2f
12:18:30,523 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4eeef7
12:18:30,523 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4eeef7
12:18:30,523 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4eeef7
12:18:30,523 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fd5908
12:18:30,524 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@12d5cb0
12:18:30,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12d5cb0
12:18:30,525 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@26f7af
12:18:30,525 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26f7af
12:18:30,526 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d649c5
12:18:30,526 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d649c5
12:18:30,527 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1f93efa
12:18:30,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f93efa
12:18:30,528 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:18:30,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:18:30,529 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1979448
12:18:30,530 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1758781
12:18:30,530 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1758781
12:18:30,531 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1758781
12:18:30,532 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13a03b0
12:18:30,532 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13a03b0
12:18:30,533 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13a03b0
12:18:30,533 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@edb080
12:18:30,534 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7fee2d
12:18:30,534 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fee2d
12:18:30,535 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7fee2d
12:18:30,535 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11879ea
12:18:30,536 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11879ea
12:18:30,536 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11879ea
12:18:30,536 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1702f3f
12:18:30,537 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@191d67b
12:18:30,541 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@143b5da
12:18:30,541 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@143b5da
12:18:30,541 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cccd19
12:18:30,546 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1010970
12:18:30,546 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1010970
12:18:30,549 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1d072fc
12:18:30,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d072fc
12:18:30,550 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@195575f
12:18:30,550 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a79fbb
12:18:30,553 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@fd54ec
12:18:30,555 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1961bac
12:18:30,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1961bac
12:18:30,556 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fa254f
12:18:30,556 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@180f214
12:18:30,556 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@177cbf7
12:18:30,556 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1eb5a67
12:18:30,556 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1defa49
12:18:30,556 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@261c14
12:18:30,557 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@121beab
12:18:30,557 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36b7cc
12:18:30,578  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
12:18:30,579  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:18:30,579  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:18:30,595  INFO MLog:92 - MLog clients using log4j logging.
12:18:30,729  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:18:30,756  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:18:30,769  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@11b42693 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@14e86819 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v986e61gl5w45|1c90649, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@11687b57 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v986e61gl5w45|1e9a396, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v986e61gl5w45|1e55c09, numHelperThreads -> 3 ]
12:18:30,867  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
12:18:30,974  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:18:30,975 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:30,976 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:30,976  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1a4d25d
12:18:31,203 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14e41bf
12:18:31,369  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
12:18:31,674 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [19]
12:18:31,677 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [1]
12:18:31,681 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2015-12-21 17:13:20.39]
12:18:31,682 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [19.0]
12:18:31,682 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [21.5]
12:18:31,682 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [15.9]
12:18:31,682 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:18:31,682 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [19056]
12:18:31,683 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [2]
12:18:31,685 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2010-10-10 00:00:00.0]
12:18:31,685 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [25.0]
12:18:31,685 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [321.2]
12:18:31,686 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [255.1]
12:18:31,686 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:18:31,686 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [205]
12:18:31,692 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:31,695 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_0_] : [VARCHAR]) - [19324530]
12:18:31,695 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_0_] : [VARCHAR]) - [stockName2]
12:18:31,700 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
12:18:31,700 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
12:18:31,700 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:43,544  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:18:43,546  INFO Environment:213 - HHH000206: hibernate.properties not found
12:18:43,547  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:18:43,568  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:18:43,725  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:18:43,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a2d1c9
12:18:43,742 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a2d1c9
12:18:43,742 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a2d1c9
12:18:43,743 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1accfb7
12:18:43,743 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@8dc539
12:18:43,744 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f8d48
12:18:43,745 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1a11c4f
12:18:43,745 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1a11c4f
12:18:43,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a11c4f
12:18:43,746 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@bc43e6
12:18:43,746 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@bc43e6
12:18:43,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@bc43e6
12:18:43,748 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5c3ba
12:18:43,748 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5c3ba
12:18:43,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b5c3ba
12:18:43,750 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@129ed01
12:18:43,750 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@129ed01
12:18:43,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@129ed01
12:18:43,752 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@12e79d0
12:18:43,752 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@12e79d0
12:18:43,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@12e79d0
12:18:43,754 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d31a9
12:18:43,754 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d31a9
12:18:43,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d31a9
12:18:43,759 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f00b6a
12:18:43,759 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f00b6a
12:18:43,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f00b6a
12:18:43,760 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17ca8c8
12:18:43,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17ca8c8
12:18:43,761 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@103ddfd
12:18:43,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@103ddfd
12:18:43,763 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6cea8a
12:18:43,763 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6cea8a
12:18:43,764 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e3f6d
12:18:43,765 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@168c350
12:18:43,766 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@fe1bc5
12:18:43,766 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fe1bc5
12:18:43,768 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1e18380
12:18:43,768 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e18380
12:18:43,769 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@195b5ad
12:18:43,769 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@195b5ad
12:18:43,770 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f8a03f
12:18:43,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f8a03f
12:18:43,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f8a03f
12:18:43,771 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e4ecd
12:18:43,772 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@b1f125
12:18:43,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b1f125
12:18:43,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b1f125
12:18:43,773 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1044f78
12:18:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@ed9a4d
12:18:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ed9a4d
12:18:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@d0f392
12:18:43,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d0f392
12:18:43,775 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a3d488
12:18:43,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a3d488
12:18:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@27445d
12:18:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27445d
12:18:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c18f44
12:18:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c18f44
12:18:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a0a884
12:18:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1e27131
12:18:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e27131
12:18:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1e27131
12:18:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@82190a
12:18:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@82190a
12:18:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@82190a
12:18:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2166f2
12:18:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@210f7d
12:18:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@210f7d
12:18:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@210f7d
12:18:43,782 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e1e74d
12:18:43,782 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e1e74d
12:18:43,782 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e1e74d
12:18:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@77b686
12:18:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@c9f768
12:18:43,786 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@11238a0
12:18:43,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@11238a0
12:18:43,786 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1588de9
12:18:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@c3d5ab
12:18:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c3d5ab
12:18:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@10d1c98
12:18:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10d1c98
12:18:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a570df
12:18:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ea8f9
12:18:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@666ef0
12:18:43,799 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@e99e46
12:18:43,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e99e46
12:18:43,800 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@dc1165
12:18:43,800 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a76793
12:18:43,800 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9504f2
12:18:43,800 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1efda65
12:18:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c329d
12:18:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e418
12:18:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1fd84ec
12:18:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6d006c
12:18:43,819  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
12:18:43,819  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:18:43,819  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:18:43,833  INFO MLog:92 - MLog clients using log4j logging.
12:18:43,955  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:18:43,981  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:18:43,994  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@f8f51fac [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@2db53496 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v98glvb0e9yo|81e4a1, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@a8a380e3 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v98glvb0e9yo|1c2dbc2, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v98glvb0e9yo|140b009, numHelperThreads -> 3 ]
12:18:44,100  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
12:18:44,211  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:18:44,213 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:44,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:44,213  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c18f44
12:18:44,442 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@14e41bf
12:18:44,608  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
12:18:44,909 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [19]
12:18:44,912 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [1]
12:18:44,915 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2015-12-21 17:13:20.39]
12:18:44,916 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [19.0]
12:18:44,916 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [21.5]
12:18:44,916 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [15.9]
12:18:44,916 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:18:44,917 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [19056]
12:18:44,917 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [2]
12:18:44,920 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2010-10-10 00:00:00.0]
12:18:44,920 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [25.0]
12:18:44,920 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [321.2]
12:18:44,920 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [255.1]
12:18:44,920 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:18:44,920 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [205]
12:18:44,926 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:44,928 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_0_] : [VARCHAR]) - [19324530]
12:18:44,929 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_0_] : [VARCHAR]) - [stockName2]
12:18:44,933 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
12:18:44,933 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
12:18:44,934 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:58,311  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:18:58,313  INFO Environment:213 - HHH000206: hibernate.properties not found
12:18:58,314  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:18:58,337  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
12:18:58,474  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:18:58,491 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:18:58,491 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7b2288
12:18:58,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b2288
12:18:58,493 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7907a0
12:18:58,494 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18f59e3
12:18:58,494 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@547840
12:18:58,495 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:18:58,496 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b16d
12:18:58,496 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49b16d
12:18:58,497 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@dd75f
12:18:58,497 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@dd75f
12:18:58,497 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@dd75f
12:18:58,499 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:18:58,499 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@44fec1
12:18:58,500 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44fec1
12:18:58,501 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@187108a
12:18:58,501 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@187108a
12:18:58,501 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@187108a
12:18:58,503 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:18:58,503 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f7574
12:18:58,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f7574
12:18:58,505 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:18:58,505 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d74f7d
12:18:58,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d74f7d
12:18:58,510 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:18:58,510 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d5e2b
12:18:58,510 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d5e2b
12:18:58,511 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12ceb70
12:18:58,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12ceb70
12:18:58,512 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e33fd4
12:18:58,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e33fd4
12:18:58,513 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@9a3139
12:18:58,513 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@9a3139
12:18:58,514 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1963c7b
12:18:58,515 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@eedabc
12:18:58,515 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@d12826
12:18:58,516 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d12826
12:18:58,518 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@8057d3
12:18:58,518 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8057d3
12:18:58,520 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1ca8007
12:18:58,520 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ca8007
12:18:58,521 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e08f43
12:18:58,522 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e08f43
12:18:58,522 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e08f43
12:18:58,523 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f77e2f
12:18:58,524 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4eeef7
12:18:58,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4eeef7
12:18:58,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4eeef7
12:18:58,525 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fd5908
12:18:58,525 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@12d5cb0
12:18:58,526 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12d5cb0
12:18:58,526 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@26f7af
12:18:58,526 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26f7af
12:18:58,527 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d649c5
12:18:58,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d649c5
12:18:58,528 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1f93efa
12:18:58,528 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f93efa
12:18:58,529 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:18:58,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1a4d25d
12:18:58,529 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1979448
12:18:58,530 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1758781
12:18:58,530 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1758781
12:18:58,530 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1758781
12:18:58,531 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13a03b0
12:18:58,531 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13a03b0
12:18:58,532 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13a03b0
12:18:58,532 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@edb080
12:18:58,533 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7fee2d
12:18:58,533 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fee2d
12:18:58,534 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7fee2d
12:18:58,534 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11879ea
12:18:58,534 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11879ea
12:18:58,535 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11879ea
12:18:58,535 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1702f3f
12:18:58,536 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@191d67b
12:18:58,539 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@143b5da
12:18:58,539 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@143b5da
12:18:58,539 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cccd19
12:18:58,544 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1010970
12:18:58,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1010970
12:18:58,546 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1d072fc
12:18:58,547 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d072fc
12:18:58,547 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@195575f
12:18:58,547 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a79fbb
12:18:58,549 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@fd54ec
12:18:58,551 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1961bac
12:18:58,552 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1961bac
12:18:58,552 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fa254f
12:18:58,552 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@180f214
12:18:58,552 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@177cbf7
12:18:58,552 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1eb5a67
12:18:58,553 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1defa49
12:18:58,553 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@261c14
12:18:58,553 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@121beab
12:18:58,553 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36b7cc
12:18:58,572  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
12:18:58,572  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
12:18:58,572  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
12:18:58,587  INFO MLog:92 - MLog clients using log4j logging.
12:18:58,717  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
12:18:58,747  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
12:18:58,761  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@be37c673 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@a7af18ef [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1v98rzp1if0x1i|81e4a1, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@6de627aa [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v98rzp1if0x1i|1c2dbc2, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1v98rzp1if0x1i|140b009, numHelperThreads -> 3 ]
12:18:58,865  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
12:18:58,983  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
12:18:58,985 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:58,986 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@12c6850
12:18:58,986  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1a4d25d
12:18:59,225 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@be9067
12:18:59,393  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
12:18:59,714 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [19]
12:18:59,716 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [1]
12:18:59,721 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2015-12-21 17:13:20.39]
12:18:59,721 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [19.0]
12:18:59,721 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [21.5]
12:18:59,721 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [15.9]
12:18:59,722 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:18:59,722 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [19056]
12:18:59,725 TRACE BasicExtractor:61 - extracted value ([record_i1_7_0_] : [INTEGER]) - [2]
12:18:59,725 TRACE BasicExtractor:61 - extracted value ([record_d2_7_0_] : [TIMESTAMP]) - [2010-10-10 00:00:00.0]
12:18:59,725 TRACE BasicExtractor:61 - extracted value ([price_ch3_7_0_] : [FLOAT]) - [25.0]
12:18:59,725 TRACE BasicExtractor:61 - extracted value ([price_cl4_7_0_] : [FLOAT]) - [321.2]
12:18:59,725 TRACE BasicExtractor:61 - extracted value ([price_op5_7_0_] : [FLOAT]) - [255.1]
12:18:59,726 TRACE BasicExtractor:61 - extracted value ([stock_id7_7_0_] : [INTEGER]) - [2]
12:18:59,726 TRACE BasicExtractor:61 - extracted value ([volume6_7_0_] : [BIGINT]) - [205]
12:18:59,731 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
12:18:59,734 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_0_] : [VARCHAR]) - [19324530]
12:18:59,734 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_0_] : [VARCHAR]) - [stockName2]
12:18:59,739 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
12:18:59,739 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
12:18:59,740 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
13:15:02,166  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:15:02,168  INFO Environment:213 - HHH000206: hibernate.properties not found
13:15:02,169  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:15:02,189  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
13:15:02,334  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:15:02,352 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4324d9
13:15:02,353 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4324d9
13:15:02,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4324d9
13:15:02,354 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ec0f07
13:15:02,355 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@8d4344
13:15:02,355 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@18f59e3
13:15:02,356 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1aaecbe
13:15:02,357 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1aaecbe
13:15:02,357 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aaecbe
13:15:02,357 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1269273
13:15:02,358 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1269273
13:15:02,358 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1269273
13:15:02,359 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@d72882
13:15:02,359 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@d72882
13:15:02,359 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d72882
13:15:02,360 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@18f7705
13:15:02,360 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@18f7705
13:15:02,360 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@18f7705
13:15:02,361 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19ca1fb
13:15:02,361 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19ca1fb
13:15:02,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19ca1fb
13:15:02,363 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@af468f
13:15:02,363 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@af468f
13:15:02,363 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@af468f
13:15:02,367 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1139f1b
13:15:02,367 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1139f1b
13:15:02,367 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1139f1b
13:15:02,368 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d326bb
13:15:02,369 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d326bb
13:15:02,370 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c433cb
13:15:02,370 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c433cb
13:15:02,372 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@fcc66a
13:15:02,372 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@fcc66a
13:15:02,374 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@118618d
13:15:02,375 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2d67b4
13:15:02,376 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1ae04c0
13:15:02,376 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ae04c0
13:15:02,378 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@17da0d1
13:15:02,378 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17da0d1
13:15:02,380 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@981eab
13:15:02,380 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@981eab
13:15:02,381 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@180a5c
13:15:02,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@180a5c
13:15:02,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@180a5c
13:15:02,383 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c85632
13:15:02,384 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@cd036c
13:15:02,385 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cd036c
13:15:02,385 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cd036c
13:15:02,385 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f74e81
13:15:02,386 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4a2d5e
13:15:02,386 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a2d5e
13:15:02,387 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1750ae1
13:15:02,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1750ae1
13:15:02,388 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@130be8c
13:15:02,388 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@130be8c
13:15:02,389 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@c7423b
13:15:02,389 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c7423b
13:15:02,390 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1eb0640
13:15:02,390 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1eb0640
13:15:02,390 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b220a3
13:15:02,391 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1407cec
13:15:02,391 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1407cec
13:15:02,391 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1407cec
13:15:02,392 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e530d5
13:15:02,392 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e530d5
13:15:02,393 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e530d5
13:15:02,393 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@108c175
13:15:02,394 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@355d79
13:15:02,394 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@355d79
13:15:02,394 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@355d79
13:15:02,395 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14defcc
13:15:02,395 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14defcc
13:15:02,395 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14defcc
13:15:02,396 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1815364
13:15:02,396 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@10df626
13:15:02,399 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7cb0b4
13:15:02,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cb0b4
13:15:02,399 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1404d1
13:15:02,404 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@aefb01
13:15:02,404 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@aefb01
13:15:02,406 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@c7b3a3
13:15:02,407 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c7b3a3
13:15:02,407 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56337e
13:15:02,408 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19b2f32
13:15:02,411 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@910c30
13:15:02,413 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@fbef54
13:15:02,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@fbef54
13:15:02,413 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b3f1a
13:15:02,414 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
13:15:02,414 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@dc1165
13:15:02,414 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a76793
13:15:02,414 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9504f2
13:15:02,414 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1efda65
13:15:02,414 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7c329d
13:15:02,414 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e418
13:15:02,432  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
13:15:02,433  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
13:15:02,433  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
13:15:02,447  INFO MLog:92 - MLog clients using log4j logging.
13:15:02,570  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
13:15:02,601  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
13:15:02,614  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@e8abcaac [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@6b5fd35d [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1vb8vk8io222k|1dea27e, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@383ca9b6 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vb8vk8io222k|4d61c2, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vb8vk8io222k|d8adc0, numHelperThreads -> 3 ]
13:15:02,725  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
13:15:02,842  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
13:15:02,844 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6fe905
13:15:02,844 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6fe905
13:15:02,844  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1eb0640
13:15:03,073 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@7c992e
13:15:03,236  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
13:15:22,846  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:15:22,848  INFO Environment:213 - HHH000206: hibernate.properties not found
13:15:22,849  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:15:22,872  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
13:15:23,018  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:15:23,036 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a73d7d
13:15:23,037 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a73d7d
13:15:23,037 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a73d7d
13:15:23,038 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a7d653
13:15:23,039 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@cfbba2
13:15:23,039 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e0a1b9
13:15:23,040 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@fcd20
13:15:23,040 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@fcd20
13:15:23,041 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@fcd20
13:15:23,042 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1533bdf
13:15:23,042 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1533bdf
13:15:23,042 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1533bdf
13:15:23,043 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5b562
13:15:23,043 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5b562
13:15:23,043 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b5b562
13:15:23,044 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@e6c33
13:15:23,045 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@e6c33
13:15:23,045 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e6c33
13:15:23,046 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f9e52f
13:15:23,046 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f9e52f
13:15:23,046 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f9e52f
13:15:23,047 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1af75dd
13:15:23,047 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1af75dd
13:15:23,048 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1af75dd
13:15:23,052 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1226445
13:15:23,052 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1226445
13:15:23,052 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1226445
13:15:23,053 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8e5360
13:15:23,054 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8e5360
13:15:23,054 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13a5041
13:15:23,055 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13a5041
13:15:23,055 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1d37602
13:15:23,055 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d37602
13:15:23,056 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@48dcf9
13:15:23,057 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1373a71
13:15:23,057 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@211e40
13:15:23,057 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@211e40
13:15:23,059 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@de42ca
13:15:23,059 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@de42ca
13:15:23,060 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@19d0cb7
13:15:23,060 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19d0cb7
13:15:23,061 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7586b2
13:15:23,061 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7586b2
13:15:23,062 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7586b2
13:15:23,063 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@786a44
13:15:23,063 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@18a1cf1
13:15:23,063 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18a1cf1
13:15:23,064 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18a1cf1
13:15:23,064 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@124e
13:15:23,065 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@9f3578
13:15:23,065 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f3578
13:15:23,065 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f7590
13:15:23,066 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f7590
13:15:23,066 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1afced9
13:15:23,066 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1afced9
13:15:23,067 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@a9f04e
13:15:23,067 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a9f04e
13:15:23,068 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ee667c
13:15:23,069 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ee667c
13:15:23,069 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a4d25d
13:15:23,070 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@15792a0
13:15:23,070 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@15792a0
13:15:23,070 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@15792a0
13:15:23,071 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@111ebb3
13:15:23,071 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@111ebb3
13:15:23,072 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@111ebb3
13:15:23,072 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@715d44
13:15:23,073 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@ad6372
13:15:23,073 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@ad6372
13:15:23,073 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@ad6372
13:15:23,074 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f6ab36
13:15:23,074 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f6ab36
13:15:23,074 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f6ab36
13:15:23,074 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@dbd887
13:15:23,075 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1023661
13:15:23,078 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@23b026
13:15:23,078 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23b026
13:15:23,079 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9d1dd7
13:15:23,083 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1936199
13:15:23,083 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1936199
13:15:23,087 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7ac7c5
13:15:23,087 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7ac7c5
13:15:23,087 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d0f32d
13:15:23,088 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1076445
13:15:23,091 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@144809c
13:15:23,093 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@9bee3a
13:15:23,093 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9bee3a
13:15:23,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ebcda1
13:15:23,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54a99b
13:15:23,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b3f1a
13:15:23,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b1e0f7
13:15:23,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@dc1165
13:15:23,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a76793
13:15:23,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9504f2
13:15:23,095 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1efda65
13:15:23,115  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
13:15:23,115  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
13:15:23,116  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
13:15:23,132  INFO MLog:92 - MLog clients using log4j logging.
13:15:23,253  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
13:15:23,280  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
13:15:23,294  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@13a7470b [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@16126687 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1vb9bis1kmi8la|1afe37f, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@de5b799 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vb9bis1kmi8la|1fa5e49, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vb9bis1kmi8la|1d5c1ed, numHelperThreads -> 3 ]
13:15:23,402  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
13:15:23,512  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
13:15:23,514 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17a7d15
13:15:23,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@17a7d15
13:15:23,514  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ee667c
13:15:23,745 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1b82279
13:15:23,906  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
13:15:24,234 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [4]
13:15:24,234 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [6]
13:15:24,237 TRACE BasicExtractor:61 - extracted value ([author_id] : [INTEGER]) - [4]
13:15:24,243 TRACE BasicExtractor:61 - extracted value ([author_firstname] : [VARCHAR]) - [Yasha]
13:15:24,243 TRACE BasicExtractor:61 - extracted value ([author_lastname] : [VARCHAR]) - [Vasiliev]
13:15:24,244 TRACE BasicExtractor:61 - extracted value ([author_id] : [INTEGER]) - [5]
13:15:24,244 TRACE BasicExtractor:61 - extracted value ([author_firstname] : [VARCHAR]) - [Maxim]
13:15:24,244 TRACE BasicExtractor:61 - extracted value ([author_lastname] : [VARCHAR]) - [Vasiliev]
13:15:24,244 TRACE BasicExtractor:61 - extracted value ([author_id] : [INTEGER]) - [6]
13:15:24,245 TRACE BasicExtractor:61 - extracted value ([author_firstname] : [VARCHAR]) - [Jenya]
13:15:24,245 TRACE BasicExtractor:61 - extracted value ([author_lastname] : [VARCHAR]) - [Vasiliev]
13:15:24,250 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#4]
13:15:24,251 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#5]
13:15:24,251 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.manyToManyExtraColumns.Author.bookAuthors#6]
13:27:03,375  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:27:03,377  INFO Environment:213 - HHH000206: hibernate.properties not found
13:27:03,378  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:27:03,401  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
13:27:03,548  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:27:03,566 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a193a
13:27:03,566 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1a193a
13:27:03,566 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a193a
13:27:03,567 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@116674
13:27:03,568 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11d9ca5
13:27:03,568 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@27b534
13:27:03,569 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5dc52
13:27:03,570 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5dc52
13:27:03,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5dc52
13:27:03,570 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@542721
13:27:03,571 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@542721
13:27:03,571 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@542721
13:27:03,572 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6c96b
13:27:03,572 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6c96b
13:27:03,572 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c96b
13:27:03,573 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@14812a6
13:27:03,573 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@14812a6
13:27:03,574 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14812a6
13:27:03,575 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@56e496
13:27:03,575 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@56e496
13:27:03,575 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@56e496
13:27:03,576 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7798a9
13:27:03,576 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7798a9
13:27:03,576 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7798a9
13:27:03,581 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@142e40c
13:27:03,582 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@142e40c
13:27:03,582 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@142e40c
13:27:03,583 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@123fca5
13:27:03,584 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@123fca5
13:27:03,585 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@658a39
13:27:03,585 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@658a39
13:27:03,586 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@827b51
13:27:03,586 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@827b51
13:27:03,587 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1159684
13:27:03,588 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b1bbe8
13:27:03,589 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5d21ef
13:27:03,589 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d21ef
13:27:03,591 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@cfaced
13:27:03,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@cfaced
13:27:03,593 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1f63402
13:27:03,593 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1f63402
13:27:03,594 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@97388b
13:27:03,595 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@97388b
13:27:03,595 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@97388b
13:27:03,596 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b19476
13:27:03,598 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1f712df
13:27:03,598 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f712df
13:27:03,598 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f712df
13:27:03,599 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9b69e6
13:27:03,600 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@302723
13:27:03,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@302723
13:27:03,601 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1306155
13:27:03,601 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1306155
13:27:03,602 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4fcb33
13:27:03,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4fcb33
13:27:03,603 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@542de3
13:27:03,603 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@542de3
13:27:03,604 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17a863f
13:27:03,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17a863f
13:27:03,605 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1eb0640
13:27:03,606 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1c202e5
13:27:03,606 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1c202e5
13:27:03,606 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1c202e5
13:27:03,607 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@fb1100
13:27:03,607 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@fb1100
13:27:03,608 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@fb1100
13:27:03,608 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@82190a
13:27:03,609 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1182c93
13:27:03,609 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1182c93
13:27:03,609 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1182c93
13:27:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f834c8
13:27:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f834c8
13:27:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f834c8
13:27:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e1e74d
13:27:03,611 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@52dd99
13:27:03,614 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@13f668d
13:27:03,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13f668d
13:27:03,614 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9a111f
13:27:03,619 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1ce3a26
13:27:03,619 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ce3a26
13:27:03,621 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@71a9f3
13:27:03,621 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71a9f3
13:27:03,621 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b139c9
13:27:03,622 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@10d1c98
13:27:03,624 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@a40b04
13:27:03,626 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@180deea
13:27:03,626 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@180deea
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17ac43d
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1961bac
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d4fbfd
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1093095
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b2f7f
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@cbc403
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1288b76
13:27:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1fa254f
13:27:03,645  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
13:27:03,646  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
13:27:03,646  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
13:27:03,660  INFO MLog:92 - MLog clients using log4j logging.
13:27:03,779  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
13:27:03,808  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
13:27:03,825  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@5faa4868 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@5fb84342 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1vboc1w1q0hh5k|1ecf98f, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@d5658f55 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vboc1w1q0hh5k|4734a, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vboc1w1q0hh5k|1edf0d4, numHelperThreads -> 3 ]
13:27:03,933  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
13:27:04,042  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
13:27:04,044 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@193ba0
13:27:04,044 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@193ba0
13:27:04,044  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@17a863f
13:27:04,278 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@e46f29
13:27:04,441  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
13:27:04,693  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
13:27:04,797 TRACE BasicExtractor:61 - extracted value ([category1_3_] : [INTEGER]) - [1]
13:27:04,801 TRACE BasicExtractor:61 - extracted value ([category2_3_] : [VARCHAR]) - [Java]
13:27:04,807 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Category.stocks#1]
13:27:04,809 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
13:27:04,812 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_1_] : [INTEGER]) - [1]
13:27:04,813 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_1_] : [VARCHAR]) - [stockCode1]
13:27:04,813 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_1_] : [VARCHAR]) - [stockName1]
13:27:04,813 TRACE BasicExtractor:61 - extracted value ([category2_6_0_] : [INTEGER]) - [1]
13:27:04,813 TRACE BasicExtractor:61 - extracted value ([stock_id1_6_0_] : [INTEGER]) - [1]
13:27:04,814 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_1_] : [INTEGER]) - [2]
13:27:04,815 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_1_] : [VARCHAR]) - [19324530]
13:27:04,815 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_1_] : [VARCHAR]) - [stockName2]
13:27:04,815 TRACE BasicExtractor:61 - extracted value ([category2_6_0_] : [INTEGER]) - [1]
13:27:04,815 TRACE BasicExtractor:61 - extracted value ([stock_id1_6_0_] : [INTEGER]) - [2]
13:27:04,815 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
13:27:04,815 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
13:27:04,816 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
13:27:04,817 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
13:27:04,817 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
13:27:04,818 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
13:27:04,818 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
13:27:04,819 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
13:27:04,821 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
13:27:04,821 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
13:28:10,419  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:28:10,421  INFO Environment:213 - HHH000206: hibernate.properties not found
13:28:10,422  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:28:10,444  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
13:28:10,611  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:28:10,630 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1ac5790
13:28:10,631 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1ac5790
13:28:10,631 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ac5790
13:28:10,632 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fcbc19
13:28:10,633 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f74fc5
13:28:10,633 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@8d4344
13:28:10,635 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@18f0b11
13:28:10,635 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@18f0b11
13:28:10,636 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18f0b11
13:28:10,637 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4a43d2
13:28:10,637 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4a43d2
13:28:10,637 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a43d2
13:28:10,638 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a0eb51
13:28:10,639 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a0eb51
13:28:10,639 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0eb51
13:28:10,640 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@bdc543
13:28:10,640 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@bdc543
13:28:10,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@bdc543
13:28:10,641 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1492721
13:28:10,642 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1492721
13:28:10,642 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1492721
13:28:10,643 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1748ba8
13:28:10,644 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1748ba8
13:28:10,644 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1748ba8
13:28:10,645 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@89e2f0
13:28:10,646 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@89e2f0
13:28:10,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@89e2f0
13:28:10,651 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31d499
13:28:10,651 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31d499
13:28:10,652 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19a3160
13:28:10,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19a3160
13:28:10,653 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1214a13
13:28:10,654 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1214a13
13:28:10,655 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@17c6631
13:28:10,656 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e3f6d
13:28:10,656 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1c70722
13:28:10,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1c70722
13:28:10,658 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@f4fe7d
13:28:10,658 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f4fe7d
13:28:10,660 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6faeb8
13:28:10,660 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6faeb8
13:28:10,661 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c2599f
13:28:10,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c2599f
13:28:10,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c2599f
13:28:10,663 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6edffb
13:28:10,664 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1f6fa3f
13:28:10,665 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f6fa3f
13:28:10,665 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f6fa3f
13:28:10,665 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@cd036c
13:28:10,666 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@10f30f5
13:28:10,667 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10f30f5
13:28:10,667 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@dc504d
13:28:10,668 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@dc504d
13:28:10,669 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1c68dc6
13:28:10,669 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1c68dc6
13:28:10,670 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@170e652
13:28:10,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@170e652
13:28:10,671 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13f8452
13:28:10,671 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13f8452
13:28:10,672 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ae84c3
13:28:10,673 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1e802ee
13:28:10,673 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e802ee
13:28:10,673 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1e802ee
13:28:10,674 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f71a09
13:28:10,674 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f71a09
13:28:10,675 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f71a09
13:28:10,675 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1c81b84
13:28:10,676 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@320e7a
13:28:10,676 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@320e7a
13:28:10,676 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@320e7a
13:28:10,677 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@83bbd2
13:28:10,677 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@83bbd2
13:28:10,677 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@83bbd2
13:28:10,678 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1ec08c7
13:28:10,678 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@77b686
13:28:10,681 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1e5b5f1
13:28:10,681 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e5b5f1
13:28:10,682 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7cb0b4
13:28:10,687 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@87b565
13:28:10,687 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@87b565
13:28:10,690 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@cdc69b
13:28:10,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@cdc69b
13:28:10,690 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c7b3a3
13:28:10,690 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d1f1f
13:28:10,692 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4d1082
13:28:10,695 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1934d9d
13:28:10,695 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1934d9d
13:28:10,695 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1961bac
13:28:10,695 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d4fbfd
13:28:10,695 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1093095
13:28:10,695 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b2f7f
13:28:10,696 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@cbc403
13:28:10,696 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1288b76
13:28:10,696 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1fa254f
13:28:10,696 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@180f214
13:28:10,717  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
13:28:10,718  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
13:28:10,718  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
13:28:10,733  INFO MLog:92 - MLog clients using log4j logging.
13:28:10,853  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
13:28:10,887  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
13:28:10,901  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@9fbf7e16 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@24e91a59 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1vbprt21bo6zk2|1290a1d, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@5ffe2414 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vbprt21bo6zk2|2a8bfb, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vbprt21bo6zk2|851e0, numHelperThreads -> 3 ]
13:28:11,003  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
13:28:11,111  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
13:28:11,113 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1736ec2
13:28:11,113 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1736ec2
13:28:11,114  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@13f8452
13:28:11,352 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1f86d6e
13:28:11,526  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
13:28:11,770  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
13:28:11,873 TRACE BasicExtractor:61 - extracted value ([category1_3_] : [INTEGER]) - [1]
13:28:11,877 TRACE BasicExtractor:61 - extracted value ([category2_3_] : [VARCHAR]) - [Java]
13:28:11,882 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Category.stocks#1]
13:28:11,885 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
13:28:11,888 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_1_] : [INTEGER]) - [1]
13:28:11,889 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_1_] : [VARCHAR]) - [stockCode1]
13:28:11,889 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_1_] : [VARCHAR]) - [stockName1]
13:28:11,889 TRACE BasicExtractor:61 - extracted value ([category2_6_0_] : [INTEGER]) - [1]
13:28:11,889 TRACE BasicExtractor:61 - extracted value ([stock_id1_6_0_] : [INTEGER]) - [1]
13:28:11,890 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_1_] : [INTEGER]) - [2]
13:28:11,890 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_1_] : [VARCHAR]) - [19324530]
13:28:11,891 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_1_] : [VARCHAR]) - [stockName2]
13:28:11,891 TRACE BasicExtractor:61 - extracted value ([category2_6_0_] : [INTEGER]) - [1]
13:28:11,891 TRACE BasicExtractor:61 - extracted value ([stock_id1_6_0_] : [INTEGER]) - [2]
13:28:11,891 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
13:28:11,891 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
13:28:11,892 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
13:28:11,893 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
13:28:11,893 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
13:28:11,894 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
13:28:11,894 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
13:28:11,894 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
13:28:11,895 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
13:28:11,897 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
13:28:11,902 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
13:28:11,903 TRACE BasicExtractor:61 - extracted value ([category_id] : [INTEGER]) - [1]
13:28:18,636  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:28:18,638  INFO Environment:213 - HHH000206: hibernate.properties not found
13:28:18,639  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:28:18,659  WARN deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
13:28:18,798  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:28:18,813 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@77712c
13:28:18,813 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@77712c
13:28:18,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77712c
13:28:18,814 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c7fc2
13:28:18,815 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1095a1
13:28:18,816 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e029ed
13:28:18,817 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1a325f0
13:28:18,817 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1a325f0
13:28:18,817 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a325f0
13:28:18,818 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1e9c826
13:28:18,818 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1e9c826
13:28:18,818 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e9c826
13:28:18,819 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3a1eb3
13:28:18,819 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3a1eb3
13:28:18,820 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a1eb3
13:28:18,820 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5ba5d
13:28:18,821 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5ba5d
13:28:18,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ba5d
13:28:18,822 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@f4b681
13:28:18,822 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@f4b681
13:28:18,822 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@f4b681
13:28:18,823 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1ab0086
13:28:18,823 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1ab0086
13:28:18,823 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ab0086
13:28:18,824 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1a70128
13:28:18,824 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1a70128
13:28:18,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a70128
13:28:18,829 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c999c4
13:28:18,829 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c999c4
13:28:18,830 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e82a70
13:28:18,830 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e82a70
13:28:18,831 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@9f987a
13:28:18,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@9f987a
13:28:18,832 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c8aada
13:28:18,833 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5cc7a5
13:28:18,834 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1f33511
13:28:18,834 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f33511
13:28:18,836 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@124a94
13:28:18,836 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@124a94
13:28:18,838 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@e76514
13:28:18,838 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e76514
13:28:18,839 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@984b44
13:28:18,839 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@984b44
13:28:18,839 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@984b44
13:28:18,840 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c9f31e
13:28:18,841 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1ea0f2c
13:28:18,841 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ea0f2c
13:28:18,841 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ea0f2c
13:28:18,842 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@cb216f
13:28:18,842 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1121eb9
13:28:18,843 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1121eb9
13:28:18,843 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1cfdf55
13:28:18,843 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1cfdf55
13:28:18,844 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@193c227
13:28:18,844 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@193c227
13:28:18,845 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@774652
13:28:18,845 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@774652
13:28:18,846 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@37a013
13:28:18,846 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@37a013
13:28:18,847 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c18f44
13:28:18,847 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@710a3e
13:28:18,848 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@710a3e
13:28:18,848 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@710a3e
13:28:18,848 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@9fa55
13:28:18,849 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@9fa55
13:28:18,849 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@9fa55
13:28:18,849 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@ed41a7
13:28:18,850 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1ef58c6
13:28:18,850 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ef58c6
13:28:18,850 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1ef58c6
13:28:18,851 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8cd8f0
13:28:18,851 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8cd8f0
13:28:18,851 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8cd8f0
13:28:18,852 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1a0ad
13:28:18,852 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2dec81
13:28:18,855 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@13b5c39
13:28:18,855 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b5c39
13:28:18,856 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a26520
13:28:18,860 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@ee9569
13:28:18,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ee9569
13:28:18,863 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@f7092a
13:28:18,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f7092a
13:28:18,863 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@959a7a
13:28:18,863 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14eb00a
13:28:18,865 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@14faa86
13:28:18,868 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@ea3e3c
13:28:18,868 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ea3e3c
13:28:18,868 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d4fbfd
13:28:18,868 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1093095
13:28:18,869 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b2f7f
13:28:18,869 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@cbc403
13:28:18,869 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1288b76
13:28:18,869 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fa254f
13:28:18,869 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@180f214
13:28:18,869 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@177cbf7
13:28:18,887  INFO C3P0ConnectionProvider:117 - HHH010002: C3P0 using driver: org.postgresql.Driver at URL: jdbc:postgresql://localhost:5432/testHibernate
13:28:18,887  INFO C3P0ConnectionProvider:118 - HHH000046: Connection properties: {user=test, password=****}
13:28:18,887  INFO C3P0ConnectionProvider:121 - HHH000006: Autocommit mode: false
13:28:18,900  INFO MLog:92 - MLog clients using log4j logging.
13:28:19,020  INFO C3P0Registry:216 - Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
13:28:19,049  INFO C3P0ConnectionProvider:201 - HHH000149: JDBC isolation level: <unknown>
13:28:19,062  INFO AbstractPoolBackedDataSource:522 - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@74002213 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@366bd807 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2um9nn9d1vbpy3wqoxmtr|1afe37f, idleConnectionTestPeriod -> 3000, initialPoolSize -> 1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 1, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@2e3f2919 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vbpy3wqoxmtr|1fa5e49, jdbcUrl -> jdbc:postgresql://localhost:5432/testHibernate, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 2um9nn9d1vbpy3wqoxmtr|87be2a, numHelperThreads -> 3 ]
13:28:19,162  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
13:28:19,269  INFO LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
13:28:19,270 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17a7d15
13:28:19,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@17a7d15
13:28:19,271  INFO BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@37a013
13:28:19,509 TRACE TypeFactory:54 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1a79533
13:28:19,666  INFO SchemaUpdate:101 - HHH000228: Running hbm2ddl schema update
13:28:19,905  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
13:28:20,009 TRACE BasicExtractor:61 - extracted value ([category1_3_] : [INTEGER]) - [1]
13:28:20,013 TRACE BasicExtractor:61 - extracted value ([category2_3_] : [VARCHAR]) - [Java]
13:28:20,019 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Category.stocks#1]
13:28:20,021 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
13:28:20,025 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_1_] : [INTEGER]) - [1]
13:28:20,025 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_1_] : [VARCHAR]) - [stockCode1]
13:28:20,026 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_1_] : [VARCHAR]) - [stockName1]
13:28:20,026 TRACE BasicExtractor:61 - extracted value ([category2_6_0_] : [INTEGER]) - [1]
13:28:20,026 TRACE BasicExtractor:61 - extracted value ([stock_id1_6_0_] : [INTEGER]) - [1]
13:28:20,027 TRACE BasicExtractor:61 - extracted value ([stock_id1_9_1_] : [INTEGER]) - [2]
13:28:20,027 TRACE BasicExtractor:61 - extracted value ([stock_co2_9_1_] : [VARCHAR]) - [19324530]
13:28:20,028 TRACE BasicExtractor:61 - extracted value ([stock_na3_9_1_] : [VARCHAR]) - [stockName2]
13:28:20,028 TRACE BasicExtractor:61 - extracted value ([category2_6_0_] : [INTEGER]) - [1]
13:28:20,028 TRACE BasicExtractor:61 - extracted value ([stock_id1_6_0_] : [INTEGER]) - [2]
13:28:20,028 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#1]
13:28:20,028 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#1]
13:28:20,029 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [1]
13:28:20,030 TRACE BasicExtractor:61 - extracted value ([comp_des2_8_0_] : [VARCHAR]) - [compDescription1]
13:28:20,031 TRACE BasicExtractor:61 - extracted value ([comp_nam3_8_0_] : [VARCHAR]) - [compName1]
13:28:20,031 TRACE BasicExtractor:61 - extracted value ([listed_d4_8_0_] : [DATE]) - [2015-12-21]
13:28:20,032 TRACE BasicExtractor:61 - extracted value ([remark5_8_0_] : [VARCHAR]) - [remark1]
13:28:20,032 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.categories#2]
13:28:20,032 TRACE CollectionType:754 - Created collection wrapper: [com.mtsmda.hibernate.model.Stock.stockDailyRecords#2]
13:28:20,032 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [2]
13:28:20,040 TRACE BasicBinder:64 - binding parameter [1] as [INTEGER] - [5]
