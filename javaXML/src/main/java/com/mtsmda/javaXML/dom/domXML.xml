The DOM (Document Object Model) parser parses an XML document into an object graph. The whole document is converted into one big objects. Once created you can traverse the object graph at will. You can walk up and down in the graph as you please. This object graph takes up a lot of memory, so this should only be used in situations where no other options are suitable.

        The DOM interfaces and implementation comes with Java (at least from Java 5).

        You should use a DOM parser when:

        You need to know a lot about the structure of a document

        You need to move parts of the document around (you might want to sort certain elements, for example)

        You need to use the information in the document more than once

        What you get?

        When you parse an XML document with a DOM parser, you get back a tree structure that contains all of the elements of your document. The DOM provides a variety of functions you can use to examine the contents and structure of the document.
        Advantages

        The DOM is a common interface for manipulating document structures. One of its design goals is that Java code written for one DOM-compliant parser should run on any other DOM-compliant parser without changes.